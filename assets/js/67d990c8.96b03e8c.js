"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[87465],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>h});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),g=r,h=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},85767:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=a(9668),r=(a(96540),a(15680));const i={description:"This wiki demonstrates yolov8m multistream detection benchmark on Raspberry Pi5 with hailo8.",title:"Benchmark of Multistream Inference on Raspberrypi with Hailo8",keywords:["Edge","RasberryPi 5","Object detecton"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8",last_update:{date:"11/21/2024",author:"Jiahao"},no_comments:!1},l="Benchmark of Multistream Inference on Raspberrypi 5 with Hailo8",o={unversionedId:"Edge/Raspberry_Pi_Devices/Raspberry_Pi_with_AI/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8",id:"Edge/Raspberry_Pi_Devices/Raspberry_Pi_with_AI/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8",title:"Benchmark of Multistream Inference on Raspberrypi with Hailo8",description:"This wiki demonstrates yolov8m multistream detection benchmark on Raspberry Pi5 with hailo8.",source:"@site/docs/Edge/Raspberry_Pi_Devices/Raspberry_Pi_with_AI/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8.md",sourceDirName:"Edge/Raspberry_Pi_Devices/Raspberry_Pi_with_AI",slug:"/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8",permalink:"/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Edge/Raspberry_Pi_Devices/Raspberry_Pi_with_AI/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8.md",tags:[],version:"current",lastUpdatedBy:"Jiahao",lastUpdatedAt:1732147200,formattedLastUpdatedAt:"Nov 21, 2024",frontMatter:{description:"This wiki demonstrates yolov8m multistream detection benchmark on Raspberry Pi5 with hailo8.",title:"Benchmark of Multistream Inference on Raspberrypi with Hailo8",keywords:["Edge","RasberryPi 5","Object detecton"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/benchmark_of_multistream_inference_on_raspberrypi5_with_hailo8",last_update:{date:"11/21/2024",author:"Jiahao"},no_comments:!1},sidebar:"ProductSidebar",previous:{title:"Raspberry Pi 5 uses PCIe hat/dual hat",permalink:"/raspberry_pi_5_uses_pcie_hat_dual_hat"},next:{title:"Benchmark on RPi5 and CM4 running yolov8s with rpi ai kit",permalink:"/benchmark_on_rpi5_and_cm4_running_yolov8s_with_rpi_ai_kit"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Prepare Hardware",id:"prepare-hardware",level:2},{value:"Install AI kit on RPi5",id:"install-ai-kit-on-rpi5",level:3},{value:"Prepare software",id:"prepare-software",level:2},{value:"update the system:",id:"update-the-system",level:3},{value:"Download hailo software on hailo office web",id:"download-hailo-software-on-hailo-office-web",level:3},{value:"Install hailort_4.19.0_arm64.deb on respberrypi5",id:"install-hailort_4190_arm64deb-on-respberrypi5",level:3},{value:"Install dkms",id:"install-dkms",level:3},{value:"Install hailort-pcie-driver_4.19.0_all.deb",id:"install-hailort-pcie-driver_4190_alldeb",level:3},{value:"Create and activate a Python virtual environment",id:"create-and-activate-a-python-virtual-environment",level:3},{value:"Install hailort-4.19.0-cp311-cp311-linux_aarch64.whl",id:"install-hailort-4190-cp311-cp311-linux_aarch64whl",level:3},{value:"Check if the software is installed.",id:"check-if-the-software-is-installed",level:3},{value:"Set pcie to gen2/gen3(gen3 is faster than gen2):",id:"set-pcie-to-gen2gen3gen3-is-faster-than-gen2",level:3},{value:"Install Tapps",id:"install-tapps",level:3},{value:"Install necessary libs",id:"install-necessary-libs",level:4},{value:"Set hailo_pci force_desc_page_size",id:"set-hailo_pci-force_desc_page_size",level:4},{value:"Download Tapps",id:"download-tapps",level:4},{value:"Download hailort to tapps",id:"download-hailort-to-tapps",level:4},{value:"Change common.py",id:"change-commonpy",level:4},{value:"Install tappas",id:"install-tappas",level:4},{value:"Change batch size to 8",id:"change-batch-size-to-8",level:4},{value:"Run multistream inference",id:"run-multistream-inference",level:2},{value:"Result",id:"result",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,r.yg)(d,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"benchmark-of-multistream-inference-on-raspberrypi-5-with-hailo8"},"Benchmark of Multistream Inference on Raspberrypi 5 with Hailo8"),(0,r.yg)("h2",{id:"introduction"},"Introduction"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/ultralytics/ultralytics"},"YOLOv8")," (You Only Look Once version 8) is the popular most YOLO series of real-time pose estimation and object detection models. It builds upon the strengths of its predecessors by introducing several advancements in speed, accuracy, and flexibility. The ",(0,r.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/Raspberry-Pi-Al-HAT-26-TOPS-p-6243.html"},"Hailo8")," is used to accelerate inference speed, featuring a 26 tera-operations per second (TOPS). "),(0,r.yg)("p",null,"This wiki showcases benchmarking of YOLOv8m for object detection on Raspberry Pi 5 with hailo8. All tests utilize the same model (YOLOv8m), quantized to int8, with an input size of 640x640 resolution, batch size set to 8."),(0,r.yg)("h2",{id:"prepare-hardware"},"Prepare Hardware"),(0,r.yg)("div",{class:"table-center"},(0,r.yg)("table",{align:"center"},(0,r.yg)("tr",null,(0,r.yg)("th",null,"Raspberry Pi5 8GB"),(0,r.yg)("th",null,"Raspberry Pi Al HAT+ 26 TOPS")),(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/2/-/2-102110919-raspberry-pi-5-8gb-font.jpg",style:{width:600,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/a/i/ai_hat.jpg",style:{width:600,height:"auto"}})))),(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Raspberry-Pi-5-8GB-p-5810.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Raspberry-Pi-Al-HAT-26-TOPS-p-6243.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))))))),(0,r.yg)("h3",{id:"install-ai-kit-on-rpi5"},"Install AI kit on RPi5"),(0,r.yg)("p",null,"Please refer to ",(0,r.yg)("a",{parentName:"p",href:"https://www.raspberrypi.com/documentation/accessories/ai-kit.html"},"this")),(0,r.yg)("h2",{id:"prepare-software"},"Prepare software"),(0,r.yg)("h3",{id:"update-the-system"},"update the system:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo date -s \"$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z\"\nsudo apt update\nsudo apt full-upgrade\n")),(0,r.yg)("h3",{id:"download-hailo-software-on-hailo-office-web"},"Download hailo software on hailo office web"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Note:"),"\nyou need an official Hailo account and ensure you are logged in.\nClick this ",(0,r.yg)("a",{parentName:"p",href:"https://hailo.ai/developer-zone/software-downloads/"},"link")," download the necessary libs as follows:")),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/multistream_benchmark_hailo8/hailo_download.png",alt:"pir",width:1e3,height:"auto"})),(0,r.yg)("h3",{id:"install-hailort_4190_arm64deb-on-respberrypi5"},"Install hailort_4.19.0_arm64.deb on respberrypi5"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo dpkg -i hailort_4.19.0_arm64.deb \n\nsudo reboot\n\n")),(0,r.yg)("h3",{id:"install-dkms"},"Install dkms"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo apt-get install dkms\n")),(0,r.yg)("h3",{id:"install-hailort-pcie-driver_4190_alldeb"},"Install hailort-pcie-driver_4.19.0_all.deb"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo dpkg -i hailort-pcie-driver_4.19.0_all.deb \nsudo reboot\n\n")),(0,r.yg)("h3",{id:"create-and-activate-a-python-virtual-environment"},"Create and activate a Python virtual environment"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"python -m venv hailo_env\nsource hailo_env/bin/activate\n")),(0,r.yg)("h3",{id:"install-hailort-4190-cp311-cp311-linux_aarch64whl"},"Install hailort-4.19.0-cp311-cp311-linux_aarch64.whl"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"pip install hailort-4.19.0-cp311-cp311-linux_aarch64.whl \n")),(0,r.yg)("h3",{id:"check-if-the-software-is-installed"},"Check if the software is installed."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"hailortcli fw-control identify\n")),(0,r.yg)("p",null,"The result is show as bellow:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"ain@pi5-hailo:~ $ hailortcli fw-control identify\nExecuting on device: 0000:01:00.0\nIdentifying board\nControl Protocol Version: 2\nFirmware Version: 4.19.0 (release,app,extended context switch buffer)\nLogger Version: 0\nBoard Name: Hailo-8\nDevice Architecture: HAILO8\nSerial Number: HLLWM2B225100548\nPart Number: HM218B1C2FAE\nProduct Name: HAILO-8 AI ACC M.2 M KEY MODULE EXT TEMP\n")),(0,r.yg)("h3",{id:"set-pcie-to-gen2gen3gen3-is-faster-than-gen2"},"Set pcie to gen2/gen3(gen3 is faster than gen2):"),(0,r.yg)("p",null,"Add following text to ",(0,r.yg)("inlineCode",{parentName:"p"},"/boot/firmware/config.txt")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"#Enable the PCIe external connector\n\ndtparam=pciex1\n\n#Force Gen 3.0 speeds\n\ndtparam=pciex1_gen=3\n\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"If you want to use gen2,please comment dtparam=pciex1_gen=3")),(0,r.yg)("h3",{id:"install-tapps"},"Install Tapps"),(0,r.yg)("h4",{id:"install-necessary-libs"},"Install necessary libs"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo apt-get install -y rsync ffmpeg x11-utils python3-dev python3-pip python3-setuptools python3-virtualenv python-gi-dev libgirepository1.0-dev gcc-12 g++-12 cmake git libzmq3-dev\n\nsudo apt-get install -y libopencv-dev python3-opencv\n\nsudo apt-get install -y libcairo2-dev libgirepository1.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio gcc-12 g++-12 python-gi-dev\n\nsudo apt install python3-gi python3-gi-cairo gir1.2-gtk-3.0\n")),(0,r.yg)("h4",{id:"set-hailo_pci-force_desc_page_size"},"Set hailo_pci force_desc_page_size"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo nano /etc/modprobe.d/hailo_pci.conf\n")),(0,r.yg)("p",null,"And then input the following content."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"options hailo_pci force_desc_page_size=4096\n")),(0,r.yg)("p",null,"Finally, press ",(0,r.yg)("inlineCode",{parentName:"p"},"Ctrl+X"),", type ",(0,r.yg)("inlineCode",{parentName:"p"},"Y"),", and press ",(0,r.yg)("inlineCode",{parentName:"p"},"Enter")," to save the file"),(0,r.yg)("p",null,"And then reboot the raspberrypi5"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo reboot\n")),(0,r.yg)("h4",{id:"download-tapps"},"Download Tapps"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"git clone --depth 1 https://github.com/hailo-ai/tappas.git\n")),(0,r.yg)("h4",{id:"download-hailort-to-tapps"},"Download hailort to tapps"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cd tappas\nmkdir hailort\ngit clone https://github.com/hailo-ai/hailort.git hailort/sources\n")),(0,r.yg)("h4",{id:"change-commonpy"},"Change common.py"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"nano downloader/common.py\n")),(0,r.yg)("p",null,"And change the content like below, add ",(0,r.yg)("inlineCode",{parentName:"p"},"RaspberryPI5 = 'rpi5'"),"in common.py:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"class Platform(Enum):\n    X86 = 'x86'\n    ARM = 'arm'\n    IMX8 = 'imx8'\n    Rockchip = 'rockchip'\n    RaspberryPI = 'rpi'\n    RaspberryPI5 = 'rpi5'\n    \n    ANY = 'any'\n\n    def __str__(self):\n        return self.value\n")),(0,r.yg)("h4",{id:"install-tappas"},"Install tappas"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"./install.sh --skip-hailort --target-platform rpi5\n\n")),(0,r.yg)("h4",{id:"change-batch-size-to-8"},"Change batch size to 8"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cd ./apps/h8/gstreamer/general/multistream_detection/\nnano multi_stream_detection.sh\n")),(0,r.yg)("p",null,"Add ",(0,r.yg)("inlineCode",{parentName:"p"},"readonly DEFAULT_BATCH_SIZE=8")," to the 14 line as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'readonly DEFAULT_NETWORK_NAME="yolov5"\nreadonly DEFAULT_BATCH_SIZE=8\nreadonly MAX_NUM_OF_DEVICES=4\n')),(0,r.yg)("p",null,"Add ",(0,r.yg)("inlineCode",{parentName:"p"},"batch_size=$DEFAULT_BATCH_SIZE")," to the 19 line as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"network_name=$DEFAULT_NETWORK_NAME\nbatch_size=$DEFAULT_BATCH_SIZE\nnum_of_src=12\n")),(0,r.yg)("p",null,"Add ",(0,r.yg)("inlineCode",{parentName:"p"},"batch-size=$batch_size")," to the 154 line as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"queue name=hailo_pre_infer_q_0 leaky=no max-size-buffers=30 max-size-bytes=0 max-size-time=0 ! \\\nhailonet hef-path=$hef_path batch-size=$batch_size device-count=$device_count scheduling-algorithm=0 nms-score-threshold=0.3 nms-iou-threshold=0.45 output-format-type=HAILO_FORMAT_TYPE_FLOAT32 ! \\\nqueue name=hailo_postprocess0 leaky=no max-size-buffers=30 max-size-bytes=0 max-size-time=0 ! \\\n")),(0,r.yg)("p",null,"Finally ",(0,r.yg)("inlineCode",{parentName:"p"},"Ctrl+X")," and input ",(0,r.yg)("inlineCode",{parentName:"p"},"Y")," to save the file."),(0,r.yg)("h2",{id:"run-multistream-inference"},"Run multistream inference"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"sudo chmod +x multi_stream_detection.sh\n./multi_stream_detection.sh --network yolov8 --num-of-sources 8 --show-fps\n")),(0,r.yg)("h2",{id:"result"},"Result"),(0,r.yg)("p",null,"All the results are based on inference with a model input size of 640x640, batch size is 8, and a video resolution of 1280x760, which is 720p."),(0,r.yg)("div",{class:"table-center"},(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Channel Count"),(0,r.yg)("th",{parentName:"tr",align:null},"PCIE Gen2 Performance"),(0,r.yg)("th",{parentName:"tr",align:null},"PCIE Gen3 Performance"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"1 channel stream"),(0,r.yg)("td",{parentName:"tr",align:null},"39.82FPS"),(0,r.yg)("td",{parentName:"tr",align:null},"76.99FPS")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"2 channels streams"),(0,r.yg)("td",{parentName:"tr",align:null},"19.86FPS"),(0,r.yg)("td",{parentName:"tr",align:null},"38.21FPS")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"4 channels streams"),(0,r.yg)("td",{parentName:"tr",align:null},"8.45FPS"),(0,r.yg)("td",{parentName:"tr",align:null},"16.94FPS")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"8 channels streams"),(0,r.yg)("td",{parentName:"tr",align:null},"3.85FPS"),(0,r.yg)("td",{parentName:"tr",align:null},"8.15FPS")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"12 channels streams"),(0,r.yg)("td",{parentName:"tr",align:null},"2.94FPS"),(0,r.yg)("td",{parentName:"tr",align:null},"5.43FPS"))))),(0,r.yg)("div",{align:"center"},(0,r.yg)("iframe",{width:"800",height:"400",src:"https://www.youtube.com/embed/CHxg7qWTMYw",title:"Multistream Inference on Hailo8 with RPi5 AI Box",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:!0})),(0,r.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,r.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}u.isMDXComponent=!0}}]);