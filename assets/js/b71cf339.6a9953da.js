"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4091],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>g});var r=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,g=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(g,a(a({ref:t},l),{},{components:n})):r.createElement(g,a({ref:t},l))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},30835:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(9668),o=(n(96540),n(15680));const i={description:"Usr Button Usage with XIAO ESP32S3",title:"Usr Button Usage",keywords:["ESP32S3","XIAO","ReSpeaker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/respeaker_button",last_update:{date:"8/16/2024",author:"Jessie"}},a=void 0,s={unversionedId:"Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_button",id:"Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_button",title:"Usr Button Usage",description:"Usr Button Usage with XIAO ESP32S3",source:"@site/docs/Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_button.md",sourceDirName:"Sensor/ReSpeaker_Lite/XIAO_ESP32_S3",slug:"/respeaker_button",permalink:"/respeaker_button",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_button.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1723766400,formattedLastUpdatedAt:"Aug 16, 2024",frontMatter:{description:"Usr Button Usage with XIAO ESP32S3",title:"Usr Button Usage",keywords:["ESP32S3","XIAO","ReSpeaker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/respeaker_button",last_update:{date:"8/16/2024",author:"Jessie"}},sidebar:"ProductSidebar",previous:{title:"Volume Adjustment",permalink:"/respeaker_volume"},next:{title:"Recording and playback",permalink:"/respeaker_record_and_play"}},p={},u=[{value:"Code",id:"code",level:3}],l={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(c,(0,r.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"User button is connected to XMOS XU316 and it's not programmed yet(reserve for futurn usage). If you want to use this button with XIAO ESP32S3, connect the ",(0,o.yg)("inlineCode",{parentName:"p"},"Usr")," pin to the ",(0,o.yg)("inlineCode",{parentName:"p"},"D2")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"D3")," pin."),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"The mute button usage is the same.")),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/respeaker/usr.png",alt:"pir",width:600,height:"auto"})),(0,o.yg)("p",null,"This example connects the ",(0,o.yg)("inlineCode",{parentName:"p"},"Usr")," pin to ",(0,o.yg)("inlineCode",{parentName:"p"},"D3"),", and then uses XIAO ESP32S3 to detect whether the button is pressed."),(0,o.yg)("h3",{id:"code"},"Code"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-cpp"},'const int buttonPin = D3;  \nint buttonState = 0;\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(buttonPin, INPUT_PULLUP);  \n}\n\nvoid loop() {\n  buttonState = digitalRead(buttonPin);\n\n  if (buttonState == LOW) {\n    Serial.println("Button Pressed");\n  } else {\n    Serial.println("Button Released");\n  }\n  \n  delay(500);  \n}\n')),(0,o.yg)("p",null,"Open the ",(0,o.yg)("inlineCode",{parentName:"p"},"Serial Monitor"),", when you operate the button, the log will show the button status."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/respeaker/button-status.png",alt:"pir",width:800,height:"auto"})))}d.isMDXComponent=!0}}]);