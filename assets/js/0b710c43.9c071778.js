"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[44997],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>h});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),d=m(a),u=i,h=d["".concat(s,".").concat(u)]||d[u]||p[u]||r;return a?n.createElement(h,o(o({ref:t},g),{},{components:a})):n.createElement(h,o({ref:t},g))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<r;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8423:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var n=a(9668),i=(a(96540),a(15680));const r={description:"Getting started with 60GHz mmWave Breathing and Heartbeat Detection Sensor Kit with XIAO ESP32C6 (MR60BHA2)",title:"Getting started with MR60BHA2",keywords:["mmwave","radar","MR60BHA2"],image:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/22-114993387-mr60bha2-60ghz-mmwave-45font.jpg",slug:"/getting_started_with_mr60bha2_mmwave_kit",sidebar_position:0,last_update:{date:"08/19/2024",author:"Spencer"}},o="Getting started with 60GHz mmWave Breathing and Heartbeat Detection Sensor Kit with XIAO ESP32C6 (MR60BHA2)",l={unversionedId:"Sensor/mmWave_radar_sensor/mr60bha2-mmwave-kit/getting_started_with_mr60bha2",id:"Sensor/mmWave_radar_sensor/mr60bha2-mmwave-kit/getting_started_with_mr60bha2",title:"Getting started with MR60BHA2",description:"Getting started with 60GHz mmWave Breathing and Heartbeat Detection Sensor Kit with XIAO ESP32C6 (MR60BHA2)",source:"@site/docs/Sensor/mmWave_radar_sensor/mr60bha2-mmwave-kit/getting_started_with_mr60bha2.md",sourceDirName:"Sensor/mmWave_radar_sensor/mr60bha2-mmwave-kit",slug:"/getting_started_with_mr60bha2_mmwave_kit",permalink:"/getting_started_with_mr60bha2_mmwave_kit",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/mmWave_radar_sensor/mr60bha2-mmwave-kit/getting_started_with_mr60bha2.md",tags:[],version:"current",lastUpdatedBy:"Spencer",lastUpdatedAt:1724025600,formattedLastUpdatedAt:"Aug 19, 2024",sidebarPosition:0,frontMatter:{description:"Getting started with 60GHz mmWave Breathing and Heartbeat Detection Sensor Kit with XIAO ESP32C6 (MR60BHA2)",title:"Getting started with MR60BHA2",keywords:["mmwave","radar","MR60BHA2"],image:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/22-114993387-mr60bha2-60ghz-mmwave-45font.jpg",slug:"/getting_started_with_mr60bha2_mmwave_kit",sidebar_position:0,last_update:{date:"08/19/2024",author:"Spencer"}},sidebar:"ProductSidebar",previous:{title:"MR60FDA2 Fall detection Sensor with Home Assistant",permalink:"/ha_with_mr60fda2"},next:{title:"MR60BHA2 Breath-Heartbeat Sensor with Home Assistant",permalink:"/ha_with_mr60bha2"}},s={},m=[{value:"Features",id:"features",level:2},{value:"Specification",id:"specification",level:2},{value:"Application",id:"application",level:2},{value:"Hardware Overview",id:"hardware-overview",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Installation method and sensing range",id:"installation-method-and-sensing-range",level:3},{value:"Software Preparation (Arduino)",id:"software-preparation-arduino",level:3},{value:"Usage",id:"usage",level:3},{value:"Breath Module",id:"breath-module",level:4},{value:"Human Detection",id:"human-detection",level:4},{value:"Blink RGB LED",id:"blink-rgb-led",level:4},{value:"Light Sensor (BH1750)",id:"light-sensor-bh1750",level:4},{value:"Breath Module API",id:"breath-module-api",level:2},{value:"Module firmware upgrade",id:"module-firmware-upgrade",level:2},{value:"Open for Customization",id:"open-for-customization",level:2},{value:"Resources",id:"resources",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],g={toc:m},d="wrapper";function p(e){let{components:t,...a}=e;return(0,i.yg)(d,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"getting-started-with-60ghz-mmwave-breathing-and-heartbeat-detection-sensor-kit-with-xiao-esp32c6-mr60bha2"},"Getting started with 60GHz mmWave Breathing and Heartbeat Detection Sensor Kit with XIAO ESP32C6 (MR60BHA2)"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/22-114993387-mr60bha2-60ghz-mmwave-45font.jpg",style:{width:360,height:"auto"}})),(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/MR60BHA2-60GHz-mmWave-Sensor-Breathing-and-Heartbeat-Module-p-5945.html?utm_source=wiki"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))),(0,i.yg)("br",null),(0,i.yg)("p",null,"Introducing our advanced ",(0,i.yg)("strong",{parentName:"p"},"mmWave Sensor Modules")," for XIAO, designed to provide cutting-edge monitoring solutions for both ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/getting_started_with_mr60fda2_mmwave_kit/"},"fall detection")," and heartbeat monitoring. Powered by the robust XIAO ESP32 microcontroller with built-in Wi-Fi and Bluetooth connectivity, these modules offer precise and reliable detection capabilities. Whether you need to monitor falls in real-time or track heartbeats with sensitive accuracy, our modules are equipped with state-of-the-art technology, including customizable RGB LEDs and ambient light sensing. With easy expansion options through Grove GPIO ports, these versatile modules are perfect for a wide range of applications, from smart home integration to healthcare monitoring."),(0,i.yg)("h2",{id:"features"},"Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Wi-Fi & Bluetooth Enabled"),": Both modules are powered by XIAO ESP32 with pre-flashed ESPHome firmware, ensuring quick setup and customization."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Heartbeat Detection Module"),":",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Sensitive Heartbeat Monitoring"),": Detects heartbeats from up to 1.5 meters."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Static Presence Detection"),": Monitors stationary individuals up to 6 meters away."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Environmental Sensing"),":",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"BH1750 Light Sensor"),": Measures ambient light from 1 to 65,535 lux."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"WS2812 RGB LED"),": Customizable LED for visual feedback and DIY projects."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Expandable Connectivity"),": Includes Grove GPIO ports for adding additional sensors and modules.")),(0,i.yg)("h2",{id:"specification"},"Specification"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"th"},"General Parameters")),(0,i.yg)("th",{parentName:"tr",align:null}))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"mmWave Firmware")),(0,i.yg)("td",{parentName:"tr",align:null},"Breathing and Heartbeat Detection")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Detection Range")),(0,i.yg)("td",{parentName:"tr",align:null},"Human Static Presence Detection: up to 6 Meters",(0,i.yg)("br",null),"Breathing and Heartbeat Detection: 1.5 Meters")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"MCU")),(0,i.yg)("td",{parentName:"tr",align:null},"Seeed Studio XIAO ESP32C6")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"LED")),(0,i.yg)("td",{parentName:"tr",align:null},"WS2812 RGB LED")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Button")),(0,i.yg)("td",{parentName:"tr",align:null},"Rest")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Light Sensor")),(0,i.yg)("td",{parentName:"tr",align:null},"BH1750 Range: 1 to 65,535 lux with adjustable measurements up to 100,000 lux")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Connectivity")),(0,i.yg)("td",{parentName:"tr",align:null},"1 GPIO Port (D0, D10)")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Pin Header Spacing")),(0,i.yg)("td",{parentName:"tr",align:null},"2.54mm")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Power Supply")),(0,i.yg)("td",{parentName:"tr",align:null},"5V/1A Input")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("strong",{parentName:"td"},"Power consumption")),(0,i.yg)("td",{parentName:"tr",align:null},"0.5w: Standby Mode",(0,i.yg)("br",null),"0.8w: Activation Mode",(0,i.yg)("br",null),"1.4w: work with Grove Relay status")))),(0,i.yg)("h2",{id:"application"},"Application"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Security Systems"),(0,i.yg)("li",{parentName:"ul"},"Haelthcare Monitoring"),(0,i.yg)("li",{parentName:"ul"},"Smart Home Automation"),(0,i.yg)("li",{parentName:"ul"},"Elderly Care")),(0,i.yg)("h2",{id:"hardware-overview"},"Hardware Overview"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/hardware-overview.jpg",style:{"border-radius":"12.8px"}})),(0,i.yg)("br",null),(0,i.yg)("h2",{id:"getting-started"},"Getting Started"),(0,i.yg)("h3",{id:"installation-method-and-sensing-range"},"Installation method and sensing range"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Method 1."),"Side-mounted, it is recommended that the radar installation height be consistent with the chest height of the person being measured, and the module position and chest position \u2264 1.5m"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/side_mounting.png",style:{width:600,height:"auto"}})),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/side_detect_distance.png",style:{width:600,height:"auto"}})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Method 2.")," Inclined installation. For sleep breathing and heart rate detection needs, an inclined installation method can be adopted. The radar is required to be installed at a height of 1m directly above the head of the bed, tilted downward at 45 \xb0 towards the middle of the bed, and the distance between the radar and the chest cavity is controlled to be within 1.5m. The radar normal direction is aligned with the main detection position to ensure that the radar can detect respiratory and heartbeat data."),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/tilt_installation.png",style:{width:600,height:"auto"}})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Please use this module in an open space, and stay out of the following scenarios within the detecting range to prevent interference with the module:"),(0,i.yg)("ul",{parentName:"admonition"},(0,i.yg)("li",{parentName:"ul"},"Multiple radars installed too close together  "),(0,i.yg)("li",{parentName:"ul"},"Wind moves curtains and sways plants"),(0,i.yg)("li",{parentName:"ul"},"Water flow and water film  "),(0,i.yg)("li",{parentName:"ul"},"Large areas of metal and mirror reflections  "),(0,i.yg)("li",{parentName:"ul"},"Detection through glass and thin wooden boards  "),(0,i.yg)("li",{parentName:"ul"},"Installation location prone to vibrations  "),(0,i.yg)("li",{parentName:"ul"},"Use of low-quality power supplies  "))),(0,i.yg)("h3",{id:"software-preparation-arduino"},"Software Preparation (Arduino)"),(0,i.yg)("admonition",{title:"Attention",type:"info"},(0,i.yg)("p",{parentName:"admonition"},"By default, the MR60BHA2 comes pre-assembled with the ",(0,i.yg)("a",{parentName:"p",href:"/xiao_esp32c6_getting_started"},"XIAO ESP32C6"),", but it's compatible with various other microcontrollers for communication and integration.")),(0,i.yg)("p",null,"If this is your first time using Arduino with the XIAO series, follow the appropriate setup guide for your board:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"XIAO ESP32S3"),": Refer to the ",(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32s3_getting_started/"},"XIAO ESP32S3 Getting Started Guide"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"XIAO ESP32C3"),": Follow the ",(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/XIAO_ESP32C3_Getting_Started/"},"Getting Started with Seeed Studio XIAO ESP32C3")," guide."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"XIAO ESP32C6"),": Follow the ",(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32c6_getting_started/"},"Getting Started with Seeed Studio XIAO ESP32C6")," guide.")),(0,i.yg)("p",null,"Once your board is set up, proceed with the following steps:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Download the Seeed mmWave Library"),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Download the ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Love4yzp/Seeed-mmWave-library"},"Seeed mmWave library")," from GitHub.")),(0,i.yg)("div",{class:"github_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"github_item",href:"https://github.com/Love4yzp/Seeed-mmWave-library"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Download the Code")))," ",(0,i.yg)("svg",{"aria-hidden":"true",focusable:"false",role:"img",className:"mr-2",viewBox:"-3 10 9 1",width:16,height:16,fill:"currentColor",style:{textAlign:"center",display:"inline-block",userSelect:"none",verticalAlign:"text-bottom",overflow:"visible"}},(0,i.yg)("path",{d:"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"}))))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Install the Library in Arduino IDE"),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Open the Arduino IDE."),(0,i.yg)("li",{parentName:"ul"},"Navigate to ",(0,i.yg)("strong",{parentName:"li"},"Sketch > Include Library > Add .ZIP Library..."),"."),(0,i.yg)("li",{parentName:"ul"},"Select the downloaded ",(0,i.yg)("inlineCode",{parentName:"li"},".zip")," file to install the library."))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Connect Your XIAO Board"),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Plug your XIAO board into your computer via USB."),(0,i.yg)("li",{parentName:"ul"},"In the Arduino IDE, go to ",(0,i.yg)("strong",{parentName:"li"},"Tools > Board")," and select your XIAO board model."),(0,i.yg)("li",{parentName:"ul"},"Choose the correct port under ",(0,i.yg)("strong",{parentName:"li"},"Tools > Port"),"."))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Load an Example Sketch"),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Go to ",(0,i.yg)("strong",{parentName:"li"},"File > Examples > Seeed Arduino mmWave"),"."),(0,i.yg)("li",{parentName:"ul"},"Select the relevant example for Heartbeat Detection."),(0,i.yg)("li",{parentName:"ul"},"Review the code and make any necessary adjustments."))),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Upload the Sketch"),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Click ",(0,i.yg)("strong",{parentName:"li"},"Upload")," to flash the code to your XIAO board."),(0,i.yg)("li",{parentName:"ul"},"Open the ",(0,i.yg)("strong",{parentName:"li"},"Serial Monitor")," in the Arduino IDE to view real-time sensor data.")))),(0,i.yg)("h3",{id:"usage"},"Usage"),(0,i.yg)("p",null,"This section provides example code snippets to help you quickly start using the Seeed Arduino mmWave Library with various functionalities, including breath monitoring, RGB LED control, and light sensing."),(0,i.yg)("h4",{id:"breath-module"},"Breath Module"),(0,i.yg)("p",null,"This example demonstrates how to use the ",(0,i.yg)("strong",{parentName:"p"},"MR60BHA2")," sensor for monitoring breathing and heartbeat."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include "Seeed_Arduino_mmWave.h"\n\n// Set up serial communication depending on the board type\n#ifdef ESP32\n#  include <HardwareSerial.h>\nHardwareSerial mmWaveSerial(0);\n#else\n#  define mmWaveSerial Serial1\n#endif\n\nSEEED_MR60BHA2 mmWave;\n\nvoid setup() {\nSerial.begin(115200);\nmmWave.begin(&mmWaveSerial);\n}\n\nvoid loop() {\nif (mmWave.update(100)) {\n float total_phase, breath_phase, heart_phase;\n if (mmWave.getHeartBreathPhases(total_phase, breath_phase, heart_phase)) {\n   Serial.printf("total_phase: %.2f\\t", total_phase);\n   Serial.printf("breath_phase: %.2f\\t", breath_phase);\n   Serial.printf("heart_phase: %.2f\\n", heart_phase);\n }\n\n float breath_rate;\n if (mmWave.getBreathRate(breath_rate)) {\n   Serial.printf("breath_rate: %.2f\\n", breath_rate);\n }\n\n float heart_rate;\n if (mmWave.getHeartRate(heart_rate)) {\n   Serial.printf("heart_rate: %.2f\\n", heart_rate);\n }\n\n float distance;\n if (mmWave.getDistance(distance)) {\n   Serial.printf("distance: %.2f\\n", distance);\n }\n}\n}\n')),(0,i.yg)("p",null,"The output will be as follows on Arduino Serial Monitor:"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/breathing_and_heartbeat_detection_resize.png",style:{width:700,height:"auto"}})),(0,i.yg)("p",null,"If the returned data is not ",(0,i.yg)("inlineCode",{parentName:"p"},"0"),", indicate the existence of a living thing inside the detection's range."),(0,i.yg)("h4",{id:"human-detection"},"Human Detection"),(0,i.yg)("p",null,"This example demonstrates how to use the ",(0,i.yg)("strong",{parentName:"p"},"MR60BHA2")," sensor for human detection."),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Please make sure you have ",(0,i.yg)("a",{parentName:"p",href:"#module-firmware-upgrade"},"upgrade the firmware")," of MR60BHA2 module to the latest version.",(0,i.yg)("br",{parentName:"p"}),"\n","The latest firmware adds human presence detection and human object related functions.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include "Seeed_Arduino_mmWave.h"\n\n// If the board is an ESP32, include the HardwareSerial library and create a\n// HardwareSerial object for the mmWave serial communication\n#ifdef ESP32\n#  include <HardwareSerial.h>\nHardwareSerial mmWaveSerial(0);\n#else\n// Otherwise, define mmWaveSerial as Serial1\n#  define mmWaveSerial Serial1\n#endif\n\nSEEED_MR60BHA2 mmWave;\n\nvoid setup() {\n  Serial.begin(115200);\n  mmWave.begin(&mmWaveSerial);\n}\n\nvoid loop() {\n  if (mmWave.update(100)) {\n    if (mmWave.isHumanDetected()) {\n        Serial.printf("-----Human Detected-----\\n");\n    }\n\n    PeopleCounting target_info;\n    if (mmWave.getPeopleCountingTartgetInfo(target_info)) {\n        Serial.printf("-----Got Target Info-----\\n");\n        Serial.printf("Number of targets: %zu\\n", target_info.targets.size());\n\n        for (size_t i = 0; i < target_info.targets.size(); i++) {\n            const auto& target = target_info.targets[i];\n            Serial.printf("Target %zu:\\n", i + 1);\n            Serial.printf("  x_point: %.2f\\n", target.x_point);\n            Serial.printf("  y_point: %.2f\\n", target.y_point);\n            Serial.printf("  dop_index: %d\\n", target.dop_index);\n            Serial.printf("  cluster_index: %d\\n", target.cluster_index);\n            Serial.printf("  move_speed: %.2f cm/s\\n", target.dop_index * RANGE_STEP);\n        }\n    }\n    // delay(500);\n  }\n}\n')),(0,i.yg)("p",null,"The output will be as follows on Arduino Serial Monitor:"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/people-counting-target-info.png",style:{width:700,height:"auto"}})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Breathing and heart rate can be detected within 1.5 meters, and presence can be detected within a range of 1.5 to 6 meters.",(0,i.yg)("br",{parentName:"p"}),"\n","When there are people within the 1.5M range, the module will enter the heartbeat and breathing detection mode.",(0,i.yg)("br",{parentName:"p"}),"\n","In this mode, the sensitivity of the human detection function may decrease.  ")),(0,i.yg)("h4",{id:"blink-rgb-led"},"Blink RGB LED"),(0,i.yg)("p",null,"This example demonstrates how to control an RGB LED using the NeoPixel library."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1.")," Download the ",(0,i.yg)("inlineCode",{parentName:"li"},"Adafruit_NeoPixel")," library")),(0,i.yg)("p",null,"Navigate to ",(0,i.yg)("strong",{parentName:"p"},"Sketch > Include Liarbry > Manage Libraries..."),", and search ",(0,i.yg)("strong",{parentName:"p"},"Adafruit_NeoPixel"),", install the lastest version."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2.")," Copy following code to a new sketch:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"#include <Adafruit_NeoPixel.h>\n#include <Arduino.h>\n\nconst int pixelPin = D1;\n\nAdafruit_NeoPixel pixels = Adafruit_NeoPixel(1, pixelPin, NEO_GRB + NEO_KHZ800);\n\nvoid setup() {\nSerial.begin(115200);\npixels.begin();\npixels.clear();\npixels.show();\n}\n\nvoid loop() {\nfor (int i = 0; i < 10; i++) {\n pixels.setPixelColor(0, pixels.Color(255, 0, 0));\n pixels.show();\n delay(100);\n pixels.setPixelColor(0, pixels.Color(0, 0, 0));\n pixels.show();\n delay(100);\n}\n\nfor (int i = 255; i >= 0; i--) {\n pixels.setPixelColor(0, pixels.Color(i, 0, 0));\n pixels.show();\n delay(10);\n}\n}\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3.")," Select the correct board and port number to upload the program.")),(0,i.yg)("p",null,"Once the program is successfully uploaded, you will see RGB LED on the right side of the mmWave Sensor Modules is blinking."),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/blink_rgb_led.gif",style:{width:700,height:"auto"}})),(0,i.yg)("h4",{id:"light-sensor-bh1750"},"Light Sensor (BH1750)"),(0,i.yg)("p",null,"This example shows how to read light intensity values using the BH1750 sensor."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1.")," Download the ",(0,i.yg)("inlineCode",{parentName:"li"},"hp_BH1750")," library")),(0,i.yg)("p",null,"Navigate to ",(0,i.yg)("strong",{parentName:"p"},"Sketch > Include Liarbry > Manage Libraries..."),", and search ",(0,i.yg)("strong",{parentName:"p"},"hp_BH1750"),", install the lastest version."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2.")," Copy following code to a new sketch:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include <hp_BH1750.h>\n\nhp_BH1750 BH1750;\n\nvoid setup() {\nSerial.begin(9600);\n\nbool avail = BH1750.begin(BH1750_TO_GROUND);\n\nif (!avail) {\n Serial.println("No BH1750 sensor found!");\n while (true) {}\n}\n\nSerial.printf("conversion time: %dms\\n", BH1750.getMtregTime());\nBH1750.start();\n}\n\nvoid loop() {\nif (BH1750.hasValue()) {\n float lux = BH1750.getLux();\n Serial.println(lux);\n\n BH1750.start();\n}\n}\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3.")," Select the correct board and port number to upload the program.")),(0,i.yg)("p",null,"The output will be as follows on Arduino Serial Monitor:"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/light_sensor.png",style:{width:700,height:"auto"}})),(0,i.yg)("h2",{id:"breath-module-api"},"Breath Module API"),(0,i.yg)("p",null,"This example uses the ",(0,i.yg)("inlineCode",{parentName:"p"},"SEEED_MR60BHA2")," class to interface with the MR60BHA2 sensor for heart and breath monitoring. Here\u2019s what each key function does:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.begin(&mmWaveSerial)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Initializes the sensor for communication using the specified serial interface. It sets up the connection between the XIAO board and the MR60BHA2 sensor."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.update(100)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Updates the sensor data. The parameter ",(0,i.yg)("inlineCode",{parentName:"li"},"100")," is a timeout value in milliseconds, specifying how long to wait for the sensor to provide new data. If new data is available within this timeframe, the function returns ",(0,i.yg)("inlineCode",{parentName:"li"},"true"),"."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.getHeartBreathPhases(float &total_phase, float &breath_phase, float &heart_phase)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Retrieves the phase information related to heart and breath activities."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"total_phase")," represents the overall phase shift, while ",(0,i.yg)("inlineCode",{parentName:"li"},"breath_phase")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"heart_phase")," are specific to breathing and heartbeat activities, respectively."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.getBreathRate(float &rate)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Fetches the current breath rate detected by the sensor. The rate is returned in the reference variable ",(0,i.yg)("inlineCode",{parentName:"li"},"rate"),"."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.getHeartRate(float &rate)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Retrieves the current heart rate detected by the sensor. The rate is returned in the reference variable ",(0,i.yg)("inlineCode",{parentName:"li"},"rate"),"."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.getDistance(float &distance)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Gets the distance from the sensor to the detected object (e.g., human body). This function is useful for understanding the range of the detected signal."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.getPeopleCountingPointCloud(PeopleCounting& point_cloud)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Retrieves information about point clouds. It just realizes the reception of message type, it is normal that there is no data."),(0,i.yg)("li",{parentName:"ul"},"The ",(0,i.yg)("inlineCode",{parentName:"li"},"PeopleCounting")," structure contains a vector of detected targets. Each target includes the following attributes:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"x_point")," : X coordinate of the target (in meter)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"y_point")," : Y coordinate of the target (in meter)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"dop_index")," : Doppler index, representing the speed of the target.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"The actual movement speed (in cm/s) can be calculated as: ",(0,i.yg)("inlineCode",{parentName:"li"},"dop_index * RANGE_STEP"),", where ",(0,i.yg)("inlineCode",{parentName:"li"},"RANGE_STEP")," is the speed resolution."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"cluster_index")," : Cluster ID of the target, used to identify individual targets in the scene."))))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.getPeopleCountingTartgetInfo(PeopleCounting& target_info)")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Retrieves information about detected targets."),(0,i.yg)("li",{parentName:"ul"},"The ",(0,i.yg)("inlineCode",{parentName:"li"},"PeopleCounting")," structure contains a vector of detected targets. Each target includes the following attributes:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"x_point")," : X coordinate of the target (in meter)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"y_point")," : Y coordinate of the target (in meter)."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"dop_index")," : Doppler index, representing the speed of the target.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"The actual movement speed (in cm/s) can be calculated as: ",(0,i.yg)("inlineCode",{parentName:"li"},"dop_index * RANGE_STEP"),", where ",(0,i.yg)("inlineCode",{parentName:"li"},"RANGE_STEP")," is the speed resolution."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"cluster_index")," : Cluster ID of the target, used to identify individual targets in the scene."))))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},(0,i.yg)("inlineCode",{parentName:"strong"},"mmWave.isHumanDetected()")),":"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Returns whether a human is detected.")))),(0,i.yg)("h2",{id:"module-firmware-upgrade"},"Module firmware upgrade"),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"The new firmware has the following update:"),(0,i.yg)("ol",{parentName:"admonition"},(0,i.yg)("li",{parentName:"ol"},"Optimized the breathing and heart rate detection feature, fixing the bug where small body movements caused data loss.  "),(0,i.yg)("li",{parentName:"ol"},"Enhanced the 3D presence detection function: breathing and heart rate can be detected within 1.5 meters, and presence can be detected within a range of 1.5 to 6 meters.  "),(0,i.yg)("li",{parentName:"ol"},"Added a personnel detection feature, capable of detecting up to three individuals within a range of 6 meters."))),(0,i.yg)("p",null,"First, connect the XIAO ESP32C6 and MR60BHA2 modules together. Then use the following code to program XIAO."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include "Seeed_Arduino_mmWave.h"\n\n// If the board is an ESP32, include the HardwareSerial library and create a\n// HardwareSerial object for the mmWave serial communication\n#ifdef ESP32\n#  include <HardwareSerial.h>\nHardwareSerial mmWaveSerial(0);\n#else\n// Otherwise, define mmWaveSerial as Serial1\n#  define mmWaveSerial Serial1\n#endif\n\nvoid setup() {\n  // Initialize the serial communication for debugging\n  Serial.begin(115200);\n  while (!Serial) {\n    ; // Wait for Serial to initialize\n  }\n\n  // Initialize the mmWaveSerial communication\n  mmWaveSerial.begin(115200);\n}\n\nvoid loop() {\n  // Check if there is data available from mmWaveSerial\n  while (mmWaveSerial.available() > 0) {\n    char receivedChar = mmWaveSerial.read();\n    Serial.write(receivedChar); // Forward data to Serial\n  }\n\n  // Check if there is data available from Serial\n  while (Serial.available() > 0) {\n    char receivedChar = Serial.read();\n    mmWaveSerial.write(receivedChar); // Forward data to mmWaveSerial\n  }\n}\n')),(0,i.yg)("admonition",{type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"The function of the above code is to transparently transmit the serial port of the module to the USB serial port of XIAO, so as to upgrade the firmware of the module through XIAO.",(0,i.yg)("br",{parentName:"p"}),"\n","Please connect XIAO to your PC during the upgrade process.")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/passthrough-mode.png",style:{width:700,height:"auto"}})),(0,i.yg)("p",null,"You will see the original data sent by the module."),(0,i.yg)("p",null,"Then you need to download and unzip the OTA tool and the firmware here."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"MR60BHA2 Firmware upgrade tool"),": ",(0,i.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware/MR60BHA2_OTA.zip"},"MR60BHA2_OTA.zip")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"MR60BHA2 Firmware v1.6.4"),": ",(0,i.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware/MR60BHA2_eeprom_1.6.4.bin"},"MR60BHA2_eeprom_1.6.4.bin"))),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Check and connect to the serial port (set the baud rate to 115200)")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/1-check-and-connect-serial.png",style:{width:700,height:"auto"}})),(0,i.yg)("ol",{start:2},(0,i.yg)("li",{parentName:"ol"},'Click "REQUEST UPDATE" to enter the upgrade mode:')),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/2-request-update.png",style:{width:700,height:"auto"}})),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/3-upgrade-confirm.png",style:{width:700,height:"auto"}})),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/4-baudrate-confirm.png",style:{width:700,height:"auto"}})),(0,i.yg)("ol",{start:3},(0,i.yg)("li",{parentName:"ol"},'If "C" or "43" is printed, it means that the module has entered upgrade mode.')),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/5-module-enter-upgrade-mode.png",style:{width:700,height:"auto"}})),(0,i.yg)("ol",{start:4},(0,i.yg)("li",{parentName:"ol"},"Select the firmware to be upgraded. After selection, it will automatically enter the upgrade state. ")),(0,i.yg)("p",null,"After the upgrade is completed, it will automatically jump to normal mode. If it does not jump, power off and restart, and then use OTA tool to view the serial port data."),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/6-open-file.png",style:{width:700,height:"auto"}})),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/7-choose-file.png",style:{width:700,height:"auto"}})),(0,i.yg)("ol",{start:5},(0,i.yg)("li",{parentName:"ol"},"After the upgrade is complete, you can use OTA tool to read the version and raw data.")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware-update/8-flash-done.png",style:{width:700,height:"auto"}})),(0,i.yg)("h2",{id:"open-for-customization"},"Open for Customization"),(0,i.yg)("p",null,"Want to tailor-make the kit to fit your unique applications?"),(0,i.yg)("p",null,"For more information about 3D point cloud data generation and interference zone configuration when customizing mmWave modules. Seeed provides one-stop R&D customization and manufacturing services for fast development from concept to production. Contact us at ",(0,i.yg)("a",{parentName:"p",href:"mailto:iot@seeed.cc"},"iot@seeed.cc")," to learn more."),(0,i.yg)("h2",{id:"resources"},"Resources"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"STP"),": ",(0,i.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/xiao_mm_wave.stp"},"mmWave 3D Case")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"GitHub Repository"),": Access the full codebase and documentation at the ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Love4yzp/Seeed-mmWave-library"},"Seeed mmWave Library GitHub page"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"ESPHome Documentation"),": For further customization and integration, refer to the ",(0,i.yg)("a",{parentName:"li",href:"https://esphome.io/"},"ESPHome documentation"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"MR60BHA2 Firmware upgrade tool"),": ",(0,i.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware/MR60BHA2_OTA.zip"},"MR60BHA2_OTA.zip")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"MR60BHA2 Firmware v1.6.4"),": ",(0,i.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/mmwave-for-xiao/mr60/firmware/MR60BHA2_eeprom_1.6.4.bin"},"MR60BHA2_eeprom_1.6.4.bin"))),(0,i.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,i.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,i.yg)("div",{class:"table-center"},(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,i.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,i.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"}))))}p.isMDXComponent=!0}}]);