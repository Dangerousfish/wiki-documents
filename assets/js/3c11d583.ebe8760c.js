"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[47733],{15680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>g});var n=r(96540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),p=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(a.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),f=i,g=u["".concat(a,".").concat(f)]||u[f]||d[f]||o;return r?n.createElement(g,s(s({ref:t},c),{},{components:r})):n.createElement(g,s({ref:t},c))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=f;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l[u]="string"==typeof e?e:i,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},50631:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(9668),i=(r(96540),r(15680));const o={description:"ReSpeaker Lite RGB test",title:"RGB test",keywords:["ReSpeaker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/respeaker_rgb_test",last_update:{date:"9/27/2024",author:"Jessie"}},s=void 0,l={unversionedId:"Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_rgb_test",id:"Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_rgb_test",title:"RGB test",description:"ReSpeaker Lite RGB test",source:"@site/docs/Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_rgb_test.md",sourceDirName:"Sensor/ReSpeaker_Lite/XIAO_ESP32_S3",slug:"/respeaker_rgb_test",permalink:"/respeaker_rgb_test",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/ReSpeaker_Lite/XIAO_ESP32_S3/respeaker_rgb_test.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1727395200,formattedLastUpdatedAt:"Sep 27, 2024",frontMatter:{description:"ReSpeaker Lite RGB test",title:"RGB test",keywords:["ReSpeaker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/respeaker_rgb_test",last_update:{date:"9/27/2024",author:"Jessie"}}},a={},p=[{value:"Functionality",id:"functionality",level:3},{value:"Code",id:"code",level:3},{value:"Configuration",id:"configuration",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,i.yg)(u,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h3",{id:"functionality"},"Functionality"),(0,i.yg)("p",null,"The RGB light on the ReSpeaker Lite board is using the WS2812 chip and controlled via the ",(0,i.yg)("inlineCode",{parentName:"p"},"GPIO1")," pin. The project cycles through different colors (red, green, blue, and white) to ensure that the RGB light is functioning properly. "),(0,i.yg)("h3",{id:"code"},"Code"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Adafruit_NeoPixel.h>\n\n// Define parameters for the LED strip\n#define PIN 1            // Pin connected to the RGB LED\n#define NUMPIXELS 1      // Number of LEDs\n\nAdafruit_NeoPixel strip(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);  // Initialize the LED strip object\n\nvoid setup() {\n  // Initialize the serial monitor for debugging\n  Serial.begin(115200);\n  \n  // Initialize the RGB LED strip\n  strip.begin();\n  strip.show();  // Initialize all pixels to the off state\n}\n\nvoid loop() {\n  // Red color test\n  Serial.println("Red color test");\n  strip.setPixelColor(0, strip.Color(255, 0, 0));  // Set the first pixel to red\n  strip.show();  // Update the strip display\n  delay(1000);   // Delay for 1 second\n\n  // Green color test\n  Serial.println("Green color test");\n  strip.setPixelColor(0, strip.Color(0, 255, 0));  // Set the first pixel to green\n  strip.show();\n  delay(1000);\n\n  // Blue color test\n  Serial.println("Blue color test");\n  strip.setPixelColor(0, strip.Color(0, 0, 255));  // Set the first pixel to blue\n  strip.show();\n  delay(1000);\n\n  // White color test\n  Serial.println("White color test");\n  strip.setPixelColor(0, strip.Color(255, 255, 255));  // Set the first pixel to white\n  strip.show();\n  delay(1000);\n\n  // Turn off the LED\n  Serial.println("Turn off the LED");\n  strip.setPixelColor(0, strip.Color(0, 0, 0));  // Turn off the first pixel\n  strip.show();\n  delay(1000);\n}\n')),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/respeaker/rgb_led.gif",alt:"pir",width:400,height:"auto"})),(0,i.yg)("h3",{id:"configuration"},"Configuration"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"strip.setPixelColor"),": set the color LED in the strip."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"strip.show"),": applies the color changes to the LED."))}d.isMDXComponent=!0}}]);