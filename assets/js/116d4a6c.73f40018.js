"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[85675],{15680:(e,n,i)=>{i.d(n,{xA:()=>g,yg:()=>c});var t=i(96540);function l(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function a(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?a(Object(i),!0).forEach((function(n){l(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function o(e,n){if(null==e)return{};var i,t,l=function(e,n){if(null==e)return{};var i,t,l={},a=Object.keys(e);for(t=0;t<a.length;t++)i=a[t],n.indexOf(i)>=0||(l[i]=e[i]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)i=a[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(l[i]=e[i])}return l}var p=t.createContext({}),d=function(e){var n=t.useContext(p),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},g=function(e){var n=d(e.components);return t.createElement(p.Provider,{value:n},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},y=t.forwardRef((function(e,n){var i=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),s=d(i),y=l,c=s["".concat(p,".").concat(y)]||s[y]||u[y]||a;return i?t.createElement(c,r(r({ref:n},g),{},{components:i})):t.createElement(c,r({ref:n},g))}));function c(e,n){var i=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=i.length,r=new Array(a);r[0]=y;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[s]="string"==typeof e?e:l,r[1]=o;for(var d=2;d<a;d++)r[d]=i[d];return t.createElement.apply(null,r)}return t.createElement.apply(null,i)}y.displayName="MDXCreateElement"},2870:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var t=i(9668),l=(i(96540),i(15680));const a={description:"\u4f7f\u7528 Seeed Studio XIAO ESP32C6 \u8fdb\u884c\u5f15\u811a\u591a\u8def\u590d\u7528",title:"\u4f7f\u7528 Seeed Studio XIAO ESP32C6 \u8fdb\u884c\u5f15\u811a\u591a\u8def\u590d\u7528",keywords:["esp32c6","xiao","pin multiple"],image:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/xiaoc6.jpg",slug:"/cn/xiao_pin_multiplexing_esp33c6",sidebar_position:2,last_update:{date:"11/16/2024",author:"Agnes"}},r="Arduino \u7f16\u7a0b\u4e0e Seeed Studio XIAO ESP32C6",o={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/CN_XIAO_ESP32C6_Pin_Multiplexing",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/CN_XIAO_ESP32C6_Pin_Multiplexing",title:"\u4f7f\u7528 Seeed Studio XIAO ESP32C6 \u8fdb\u884c\u5f15\u811a\u591a\u8def\u590d\u7528",description:"\u4f7f\u7528 Seeed Studio XIAO ESP32C6 \u8fdb\u884c\u5f15\u811a\u591a\u8def\u590d\u7528",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/CN_XIAO_ESP32C6_Pin_Multiplexing.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6",slug:"/cn/xiao_pin_multiplexing_esp33c6",permalink:"/cn/xiao_pin_multiplexing_esp33c6",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/CN_XIAO_ESP32C6_Pin_Multiplexing.md",tags:[],version:"current",lastUpdatedBy:"Agnes",lastUpdatedAt:1731715200,formattedLastUpdatedAt:"Nov 16, 2024",sidebarPosition:2,frontMatter:{description:"\u4f7f\u7528 Seeed Studio XIAO ESP32C6 \u8fdb\u884c\u5f15\u811a\u591a\u8def\u590d\u7528",title:"\u4f7f\u7528 Seeed Studio XIAO ESP32C6 \u8fdb\u884c\u5f15\u811a\u591a\u8def\u590d\u7528",keywords:["esp32c6","xiao","pin multiple"],image:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/xiaoc6.jpg",slug:"/cn/xiao_pin_multiplexing_esp33c6",sidebar_position:2,last_update:{date:"11/16/2024",author:"Agnes"}},sidebar:"CNSidebar",previous:{title:"Seeed Studio XIAO ESP32C6 \u5165\u95e8",permalink:"/cn/xiao_esp32c6_getting_started"},next:{title:"WiFi \u4f7f\u7528\u60c5\u51b5",permalink:"/cn/xiao_wifi_usage_esp32c6"}},p={},d=[{value:"\u5f00\u59cb\u4f7f\u7528",id:"\u5f00\u59cb\u4f7f\u7528",level:2},{value:"\u5f15\u811a\u6982\u89c8",id:"\u5f15\u811a\u6982\u89c8",level:3},{value:"\u4e32\u53e3\u901a\u4fe1",id:"\u4e32\u53e3\u901a\u4fe1",level:2},{value:"\u786c\u4ef6\u8fde\u63a5",id:"\u786c\u4ef6\u8fde\u63a5",level:3},{value:"\u4ee3\u7801\u793a\u4f8b",id:"\u4ee3\u7801\u793a\u4f8b",level:3},{value:"\u8f6f\u4ef6\u4e32\u53e3",id:"\u8f6f\u4ef6\u4e32\u53e3",level:4},{value:"\u786c\u4ef6\u4e32\u53e3",id:"\u786c\u4ef6\u4e32\u53e3",level:4},{value:"\u4f7f\u7528 Serial1",id:"\u4f7f\u7528-serial1",level:4},{value:"\u6570\u5b57\u8f93\u5165\u8f93\u51fa (Digital I/O)",id:"\u6570\u5b57\u8f93\u5165\u8f93\u51fa-digital-io",level:2},{value:"\u786c\u4ef6\u51c6\u5907",id:"\u786c\u4ef6\u51c6\u5907",level:3},{value:"\u8f6f\u4ef6\u5b9e\u73b0",id:"\u8f6f\u4ef6\u5b9e\u73b0",level:3},{value:"\u4e2d\u65ad\u65b9\u6cd5",id:"\u4e2d\u65ad\u65b9\u6cd5",level:4},{value:"ADC - \u6a21\u62df\u5230\u6570\u5b57\u8f6c\u6362\u5668",id:"adc---\u6a21\u62df\u5230\u6570\u5b57\u8f6c\u6362\u5668",level:2},{value:"\u786c\u4ef6\u8bbe\u7f6e",id:"\u786c\u4ef6\u8bbe\u7f6e",level:3},{value:"\u8f6f\u4ef6\u5b9e\u73b0",id:"\u8f6f\u4ef6\u5b9e\u73b0-1",level:3},{value:"PWM \u4fe1\u53f7 / LED \u63a7\u5236",id:"pwm-\u4fe1\u53f7--led-\u63a7\u5236",level:2},{value:"\u786c\u4ef6\u8bbe\u7f6e",id:"\u786c\u4ef6\u8bbe\u7f6e-1",level:3},{value:"\u8f6f\u4ef6\u5b9e\u73b0",id:"\u8f6f\u4ef6\u5b9e\u73b0-2",level:3},{value:"\u4e00\u822c PWM",id:"\u4e00\u822c-pwm",level:4},{value:"LED \u63a7\u5236",id:"led-\u63a7\u5236",level:4},{value:"I2C",id:"i2c",level:2},{value:"\u786c\u4ef6\u51c6\u5907",id:"\u786c\u4ef6\u51c6\u5907-1",level:3},{value:"\u8f6f\u4ef6\u5b9e\u73b0",id:"\u8f6f\u4ef6\u5b9e\u73b0-3",level:3},{value:"\u4e3b\u6a21\u5f0f",id:"\u4e3b\u6a21\u5f0f",level:4},{value:"\u4ece\u6a21\u5f0f",id:"\u4ece\u6a21\u5f0f",level:4},{value:"SPI",id:"spi",level:2},{value:"\u786c\u4ef6\u51c6\u5907",id:"\u786c\u4ef6\u51c6\u5907-2",level:3},{value:"\u8f6f\u4ef6\u5b9e\u73b0",id:"\u8f6f\u4ef6\u5b9e\u73b0-4",level:3},{value:"\u8d44\u6e90",id:"\u8d44\u6e90",level:2}],g={toc:d},s="wrapper";function u(e){let{components:n,...i}=e;return(0,l.yg)(s,(0,t.A)({},g,i,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"arduino-\u7f16\u7a0b\u4e0e-seeed-studio-xiao-esp32c6"},"Arduino \u7f16\u7a0b\u4e0e Seeed Studio XIAO ESP32C6"),(0,l.yg)("div",{class:"table-center"},(0,l.yg)("table",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Seeed Studio XIAO ESP32C6")),(0,l.yg)("tr",null,(0,l.yg)("td",null,(0,l.yg)("div",{style:{textAlign:"center"}},(0,l.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/xiaoc6.jpg",style:{width:250,height:"auto"}})))),(0,l.yg)("tr",null,(0,l.yg)("td",null,(0,l.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,l.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-Studio-XIAO-ESP32C6-p-5884.html "},(0,l.yg)("strong",null,(0,l.yg)("span",null,(0,l.yg)("font",{color:"FFFFFF",size:"4"}," \u7acb\u5373\u83b7\u53d6 \ud83d\uddb1\ufe0f"))))))))),(0,l.yg)("p",null,"Seeed Studio XIAO ESP32C6 \u914d\u5907\u4e86\u9ad8\u5ea6\u96c6\u6210\u7684 ",(0,l.yg)("a",{parentName:"p",href:"https://www.espressif.com/en/products/socs/esp32-c6"},"ESP32-C6 SoC"),"\u5176\u5185\u7f6e ",(0,l.yg)("strong",{parentName:"p"},"\u4e24\u4e2a 32 \u4f4d RISC-V \u5904\u7406\u5668"),"\u5176\u4e2d\u9ad8\u6027\u80fd (HP) \u5904\u7406\u5668\u7684\u4e3b\u9891\u6700\u9ad8\u53ef\u8fbe ",(0,l.yg)("strong",{parentName:"p"},"160 MHz"),"\uff0c\u4f4e\u529f\u8017 (LP) 32 \u4f4d RISC-V \u5904\u7406\u5668\u7684\u4e3b\u9891\u6700\u9ad8\u53ef\u8fbe 20 MHz\u3002\u82af\u7247\u4e0a\u914d\u5907 ",(0,l.yg)("strong",{parentName:"p"},"512KB SRAM \u548c 4 MB Flash on the chip"),"\uff0c\u63d0\u4f9b\u66f4\u591a\u7684\u7f16\u7a0b\u7a7a\u95f4\uff0c\u5e26\u6765\u66f4\u591a\u7269\u8054\u7f51\u63a7\u5236\u573a\u666f\u7684\u53ef\u80fd\u6027\u3002 "),(0,l.yg)("h2",{id:"\u5f00\u59cb\u4f7f\u7528"},"\u5f00\u59cb\u4f7f\u7528"),(0,l.yg)("h3",{id:"\u5f15\u811a\u6982\u89c8"},"\u5f15\u811a\u6982\u89c8"),(0,l.yg)("p",null,"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u56de\u987e\u4e00\u4e0b XIAO ESP32C6 \u7684\u6240\u6709\u5f15\u811a\u53ca\u5176\u529f\u80fd\uff0c\u89c1\u4e0b\u56fe\u3002"),(0,l.yg)("table",{align:"center"},(0,l.yg)("tr",null,(0,l.yg)("th",null,"XIAO ESP32C6/XIAO ESP32C6 \u5f15\u811a\u56fe")),(0,l.yg)("tr",null,(0,l.yg)("td",null,(0,l.yg)("div",{style:{textAlign:"center"}},(0,l.yg)("img",{src:"https://wdcdn.qpic.cn/MTY4ODg1Nzc0ODUwMjM3NA_556525_Slxs4ARdyuXRrJK-_1711096256?w=9854&h=3367&type=image/png",style:{width:700,height:"auto"}})))),(0,l.yg)("tr",null,(0,l.yg)("th",null,"XIAO ESP32C6 \u5f15\u811a\u529f\u80fd\u5217\u8868")),(0,l.yg)("tr",null,(0,l.yg)("td",null,(0,l.yg)("div",{style:{textAlign:"center"}},(0,l.yg)("img",{src:"https://wdcdn.qpic.cn/MTY4ODg1Nzc0ODUwMjM3NA_318648_dMoXitoaQiq2N3-a_1711678067?w=1486&h=1228",style:{width:1e3,height:"auto"}}))))),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"5V - \u8fd9\u662f\u6765\u81ea USB \u7aef\u53e3\u7684 5V \u8f93\u51fa\u3002\u4f60\u4e5f\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u7535\u538b\u8f93\u5165\uff0c\u4f46\u4f60\u5fc5\u987b\u5728\u5916\u90e8\u7535\u6e90\u4e0e\u8be5\u5f15\u811a\u4e4b\u95f4\u4f7f\u7528\u67d0\u79cd\u4e8c\u6781\u7ba1\uff08\u8096\u7279\u57fa\u4e8c\u6781\u7ba1\u3001\u4fe1\u53f7\u4e8c\u6781\u7ba1\u3001\u529f\u7387\u4e8c\u6781\u7ba1\uff09\uff0c\u9633\u6781\u8fde\u63a5\u7535\u6c60\uff0c\u9634\u6781\u8fde\u63a5 5V \u5f15\u811a\u3002"),(0,l.yg)("li",{parentName:"ul"},"3V3 - \u8fd9\u662f\u6765\u81ea\u677f\u8f7d\u7a33\u538b\u5668\u7684\u7a33\u538b\u8f93\u51fa\uff0c\u53ef\u4ee5\u63d0\u4f9b\u6700\u9ad8 700mA \u7684\u7535\u6d41\u3002"),(0,l.yg)("li",{parentName:"ul"},"GND - \u7535\u6e90/\u6570\u636e/\u4fe1\u53f7\u5730\u7ebf\u3002 ")),(0,l.yg)("h2",{id:"\u4e32\u53e3\u901a\u4fe1"},"\u4e32\u53e3\u901a\u4fe1"),(0,l.yg)("p",null,"XIAO ESP32C6 \u652f\u6301\u4e24\u79cd\u4e32\u53e3\u901a\u4fe1\u65b9\u5f0f\uff1a",(0,l.yg)("inlineCode",{parentName:"p"},"\u8f6f\u4ef6\u4e32\u53e3")," \u548c ",(0,l.yg)("inlineCode",{parentName:"p"},"\u786c\u4ef6\u4e32\u53e3"),"\u3002\u8f6f\u4ef6\u4e32\u53e3\u901a\u5e38\u7528\u4e8e\u7075\u6d3b\u6027\u9700\u6c42\uff0c\u800c\u786c\u4ef6\u4e32\u53e3\u63d0\u4f9b\u66f4\u597d\u7684\u6027\u80fd\u3002"),(0,l.yg)("h3",{id:"\u786c\u4ef6\u8fde\u63a5"},"\u786c\u4ef6\u8fde\u63a5"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"\u5c06\u5916\u90e8\u8bbe\u5907\u7684 ",(0,l.yg)("strong",{parentName:"li"},"TX \u5f15\u811a")," \u8fde\u63a5\u5230 XIAO ESP32C6 \u7684 RX \u5f15\u811a (",(0,l.yg)("inlineCode",{parentName:"li"},"D7"),") "),(0,l.yg)("li",{parentName:"ol"},"\u5c06\u5916\u90e8\u8bbe\u5907\u7684 ",(0,l.yg)("strong",{parentName:"li"},"RX \u5f15\u811a")," \u8fde\u63a5\u5230 XIAO ESP32C6 \u7684 TX \u5f15\u811a (",(0,l.yg)("inlineCode",{parentName:"li"},"D6"),") ")),(0,l.yg)("h3",{id:"\u4ee3\u7801\u793a\u4f8b"},"\u4ee3\u7801\u793a\u4f8b"),(0,l.yg)("h4",{id:"\u8f6f\u4ef6\u4e32\u53e3"},"\u8f6f\u4ef6\u4e32\u53e3"),(0,l.yg)("p",null,"\u8981\u4f7f\u7528\u8f6f\u4ef6\u4e32\u53e3\uff0c\u8bf7\u5b89\u88c5 ",(0,l.yg)("a",{parentName:"p",href:"https://github.com/plerup/espsoftwareserial"},"EspSoftwareSerial")," \u5e93\u3002"),(0,l.yg)("admonition",{type:"tip"},(0,l.yg)("p",{parentName:"admonition"},"\u76ee\u524d\u6211\u4eec\u63a8\u8350\u4f7f\u7528 ",(0,l.yg)("strong",{parentName:"p"},"7.0.0")," \u7248\u672c\u7684 EspSoftwareSerial \u5e93\u3002\u5176\u4ed6\u7248\u672c\u53ef\u80fd\u5b58\u5728\u5404\u79cd\u95ee\u9898\uff0c\u5bfc\u81f4\u8f6f\u4ef6\u4e32\u53e3\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u3002")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <SoftwareSerial.h>\n\nSoftwareSerial mySerial(D7, D6); // RX, TX\n\nvoid setup() {\n  Serial.begin(9600);\n  mySerial.begin(9600);\n}\n\nvoid loop() {\n  if (mySerial.available()) {\n    char data = mySerial.read();\n    Serial.print("\u901a\u8fc7\u8f6f\u4ef6\u4e32\u53e3\u63a5\u6536\u5230: ");\n    Serial.println(data);\n  }\n\n  if (Serial.available()) {\n    char data = Serial.read();\n    mySerial.print("\u901a\u8fc7\u786c\u4ef6\u4e32\u53e3\u63a5\u6536\u5230: ");\n    mySerial.println(data);\n  }\n}\n')),(0,l.yg)("p",null,"\u6b64\u793a\u4f8b\u5728\u5f15\u811a ",(0,l.yg)("inlineCode",{parentName:"p"},"D7 (RX)")," \u548c ",(0,l.yg)("inlineCode",{parentName:"p"},"D6 (TX)")," \u4e0a\u8bbe\u7f6e\u4e86\u8f6f\u4ef6\u4e32\u53e3\uff0c\u6ce2\u7279\u7387\u4e3a 9600\u3002\u5b83\u76d1\u89c6 USB \u4e32\u53e3\u548c\u8f6f\u4ef6\u4e32\u53e3\u7aef\u53e3\uff0c\u5e76\u5728\u4e24\u4e2a\u7aef\u53e3\u4e4b\u95f4\u56de\u663e\u63a5\u6536\u5230\u7684\u6570\u636e\u3002"),(0,l.yg)("h4",{id:"\u786c\u4ef6\u4e32\u53e3"},"\u786c\u4ef6\u4e32\u53e3"),(0,l.yg)("p",null,"XIAO ESP32C6 \u914d\u5907\u4e86\u786c\u4ef6 UART\uff08UART0\uff09\u8fdb\u884c\u4e32\u53e3\u901a\u4fe1\uff0c\u4f7f\u7528\u7684\u5f15\u811a\u662f D7/D6\u3002"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <HardwareSerial.h>\n\nHardwareSerial mySerial(0); // UART0 (Serial0)\n\nvoid setup() {\n  Serial.begin(9600);  // USB \u4e32\u53e3\n  mySerial.begin(9600); // UART0\n}\n\nvoid loop() {\n  if (Serial.available()) {\n    char data = Serial.read();\n    Serial.print("\u901a\u8fc7 USB \u63a5\u6536\u5230: ");\n    Serial.println(data);\n  }\n  \n  if (mySerial.available()) {\n    char data = mySerial.read();\n    Serial.print("\u901a\u8fc7 UART0 \u63a5\u6536\u5230: ");\n    Serial.println(data);\n  }\n}\n')),(0,l.yg)("p",null,"\u6b64\u793a\u4f8b\u4f7f\u7528\u786c\u4ef6 UART0\uff08Serial0\uff09\u8fdb\u884c\u901a\u4fe1\u3002\u5b83\u521d\u59cb\u5316 USB \u4e32\u53e3\u548c UART0\uff0c\u7136\u540e\u76d1\u89c6\u4e24\u4e2a\u7aef\u53e3\u7684\u8f93\u5165\u6570\u636e\uff0c\u5e76\u5c06\u63a5\u6536\u5230\u7684\u6d88\u606f\u6253\u5370\u5230 USB \u4e32\u53e3\u3002"),(0,l.yg)("h4",{id:"\u4f7f\u7528-serial1"},"\u4f7f\u7528 Serial1"),(0,l.yg)("p",null,"\u6839\u636e\u4e0a\u8ff0 XIAO ESP32C6 \u5f15\u811a\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230 TX \u5f15\u811a\u548c RX \u5f15\u811a\u7684\u4f7f\u7528\u65b9\u6cd5\u3002\u4e0e\u4e32\u53e3\u901a\u4fe1\u4e0d\u540c\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u65b9\u5f0f\u4e5f\u975e\u5e38\u7c7b\u4f3c\uff0c\u53ea\u662f\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u3002"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528\u786c\u4ef6\u5f15\u811a\u8fdb\u884c\u4e32\u53e3\u901a\u4fe1\u7684\u793a\u4f8b\u7a0b\u5e8f\uff1a"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"Serial1.begin(BAUD,SERIAL_8N1,RX_PIN,TX_PIN);")," -- \u542f\u7528 Serial1\uff0c\u51fd\u6570\u539f\u578b\u4e3a\uff1a ",(0,l.yg)("inlineCode",{parentName:"li"},"<Serial.Type>.begin(unsigned long baud, uint32_t config, int8_t rxPin, int8_t txPin);"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"baud"),"  :\u6ce2\u7279\u7387"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"config"),":\u914d\u7f6e\u4f4d"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"rxPin")," :\u63a5\u6536\u5f15\u811a"),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("inlineCode",{parentName:"li"},"txPin")," :\u53d1\u9001\u5f15\u811a")))),(0,l.yg)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6211\u4eec\u4f7f\u7528\u6570\u5b57\u5f15\u811a\u7aef\u53e3\u6765\u5b9a\u4e49\uff0c\u5219\u5e94\u4f7f\u7528 ",(0,l.yg)("inlineCode",{parentName:"p"},"#define RX_PIN D7")," \u548c ",(0,l.yg)("inlineCode",{parentName:"p"},"#define TX_PIN D6"),"\uff0c\u5177\u4f53\u53c2\u6570\u8bf7\u53c2\u9605\u4e0d\u540c XIAO \u7cfb\u5217\u7684\u5f15\u811a\u56fe\u3002"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u7a0b\u5e8f\uff1a"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},'#define RX_PIN D7\n#define TX_PIN D6\n#define BAUD 115200\n\nvoid setup() {\n    Serial1.begin(BAUD,SERIAL_8N1,RX_PIN,TX_PIN);\n}\n \nvoid loop() {\n  if(Serial1.available() > 0)\n  {\n    char incominByte = Serial1.read();\n    Serial1.print("I received : ");\n    Serial1.println(incominByte);\n  }\n  delay(1000);\n}\n')),(0,l.yg)("p",null,'\u4e0a\u4f20\u7a0b\u5e8f\u540e\uff0c\u6253\u5f00 Arduino IDE \u4e2d\u7684\u4e32\u53e3\u76d1\u89c6\u5668\u5e76\u8bbe\u7f6e\u6ce2\u7279\u7387\u4e3a 115200\u3002\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5728\u4e32\u53e3\u76d1\u89c6\u5668\u4e2d\u8f93\u5165\u4f60\u60f3\u53d1\u9001\u7684\u5185\u5bb9\uff0cXIAO \u5c06\u6253\u5370\u51fa\u4f60\u53d1\u9001\u7684\u6bcf\u4e00\u4e2a\u5b57\u8282\u3002\u5728\u8fd9\u91cc\uff0c\u6211\u8f93\u5165\u7684\u5185\u5bb9\u662f "Hello Everyone"\uff0c\u7ed3\u679c\u5982\u56fe\u6240\u793a\uff1a'),(0,l.yg)("div",{style:{textAlign:"center"}},(0,l.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/114.png",style:{width:600,height:"auto"}})),(0,l.yg)("h2",{id:"\u6570\u5b57\u8f93\u5165\u8f93\u51fa-digital-io"},"\u6570\u5b57\u8f93\u5165\u8f93\u51fa (Digital I/O)"),(0,l.yg)("p",null,"XIAO ESP32C6 \u5177\u6709 12 \u4e2a GPIO \u5f15\u811a\uff0c\u53ef\u4ee5\u5c06\u5b83\u4eec\u914d\u7f6e\u4e3a\u8f93\u5165\u6216\u8f93\u51fa\u3002"),(0,l.yg)("h3",{id:"\u786c\u4ef6\u51c6\u5907"},"\u786c\u4ef6\u51c6\u5907"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"\u5c06\u4e00\u4e2a\u6309\u94ae\u8fde\u63a5\u5230\u5f15\u811a ",(0,l.yg)("inlineCode",{parentName:"li"},"D1"),":",(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"\u4f7f\u7528\u5916\u90e8\u4e0a\u62c9\u7535\u963b\uff08\u5982\u679c\u4f7f\u7528\u5185\u90e8\u4e0a\u62c9\u7535\u963b\uff0c\u53ef\u4ee5\u7701\u7565\u6b64\u6b65\u9aa4\uff09\u3002"))),(0,l.yg)("li",{parentName:"ol"},"\u5c06\u4e00\u4e2a LED \u8fde\u63a5\u5230\u5f15\u811a ",(0,l.yg)("inlineCode",{parentName:"li"},"D10"),":",(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},"\u5728 LED \u4e0e\u5f15\u811a\u4e4b\u95f4\u4e32\u8054\u4e00\u4e2a\u9650\u6d41\u7535\u963b\u3002")))),(0,l.yg)("h3",{id:"\u8f6f\u4ef6\u5b9e\u73b0"},"\u8f6f\u4ef6\u5b9e\u73b0"),(0,l.yg)("p",null,"GPIO API \u63d0\u4f9b\u4e86\u914d\u7f6e\u548c\u4e0e GPIO \u5f15\u811a\u4ea4\u4e92\u7684\u51fd\u6570\u3002\u6709\u5173\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605 ",(0,l.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/gpio.html"},"GPIO API")," \u6587\u6863\u3002"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},"const int buttonPin = D1; // \u6309\u94ae\u5f15\u811a\nconst int ledPin = D10;   // LED \u5f15\u811a\n\nvoid setup() {\n  pinMode(ledPin, OUTPUT);  // \u8bbe\u7f6e LED \u5f15\u811a\u4e3a\u8f93\u51fa\n  pinMode(buttonPin, INPUT); // \u8bbe\u7f6e\u6309\u94ae\u5f15\u811a\u4e3a\u8f93\u5165\n  // \u5982\u679c\u4e0d\u4f7f\u7528\u5916\u90e8\u4e0a\u62c9\u7535\u963b\n  pinMode(buttonPin, INPUT_PULLUP); // \u542f\u7528\u5185\u90e8\u4e0a\u62c9\u7535\u963b\n}\n\nvoid loop() {\n  int buttonState = digitalRead(buttonPin); // \u8bfb\u53d6\u6309\u94ae\u72b6\u6001\n  digitalWrite(ledPin, buttonState); // \u5c06\u6309\u94ae\u72b6\u6001\u5199\u5165 LED\n}\n")),(0,l.yg)("h4",{id:"\u4e2d\u65ad\u65b9\u6cd5"},"\u4e2d\u65ad\u65b9\u6cd5"),(0,l.yg)("p",null,"\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4e2d\u65ad\u6765\u66f4\u6709\u6548\u5730\u5904\u7406\u6309\u94ae\u6309\u4e0b\u4e8b\u4ef6\u3002"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},'// \u5b9a\u4e49\u6309\u94ae\u548c LED \u7684\u5f15\u811a\nconst int buttonPin = D1;\nconst int ledPin = D10;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u6309\u94ae\u76f8\u5173\u7684\u6570\u636e\nstruct Button {\n    const uint8_t PIN; // \u6309\u94ae\u5f15\u811a\u53f7\n    uint32_t numberKeyPresses; // \u6309\u94ae\u6309\u4e0b\u6b21\u6570\u8ba1\u6570\u5668\n    bool pressed; // \u6807\u5fd7\uff0c\u8868\u793a\u6309\u94ae\u662f\u5426\u88ab\u6309\u4e0b\n};\n\n// \u521b\u5efa\u4e00\u4e2a Button \u7ed3\u6784\u4f53\u7684\u5b9e\u4f8b\nButton my_button = {buttonPin, 0, false};\n\n// \u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff08ISR\uff09\u5904\u7406\u6309\u94ae\u6309\u4e0b\u4e8b\u4ef6\nvoid ARDUINO_ISR_ATTR isr(void* arg) {\n    Button* s = static_cast<Button*>(arg); // \u5c06\u53c2\u6570\u8f6c\u6362\u4e3a Button \u6307\u9488\n    s->numberKeyPresses += 1; // \u589e\u52a0\u6309\u94ae\u6309\u4e0b\u6b21\u6570\n    s->pressed = true; // \u8bbe\u7f6e\u6309\u94ae\u6309\u4e0b\u6807\u5fd7\n}\n\nvoid setup() {\n    Serial.begin(115200);\n    pinMode(my_button.PIN, INPUT_PULLUP); // \u8bbe\u7f6e\u6309\u94ae\u5f15\u811a\u4e3a\u8f93\u5165\u5e76\u542f\u7528\u5185\u90e8\u4e0a\u62c9\u7535\u963b\n    attachInterruptArg(my_button.PIN, isr, &my_button, FALLING); // \u5c06 ISR \u9644\u52a0\u5230\u6309\u94ae\u5f15\u811a\uff0c\u89e6\u53d1\u6761\u4ef6\u4e3a\u4e0b\u964d\u6cbf\n}\n\nvoid loop() {\n    if (my_button.pressed) { // \u68c0\u67e5\u6309\u94ae\u662f\u5426\u88ab\u6309\u4e0b\n        Serial.printf("\u6309\u94ae\u5df2\u6309\u4e0b %lu \u6b21\\n", my_button.numberKeyPresses); // \u6253\u5370\u6309\u94ae\u6309\u4e0b\u6b21\u6570\n        my_button.pressed = false; // \u91cd\u7f6e\u6309\u94ae\u6309\u4e0b\u6807\u5fd7\n    }\n\n    static uint32_t lastMillis = 0; // \u7528\u4e8e\u5b58\u50a8\u4e0a\u6b21\u65ad\u5f00\u4e2d\u65ad\u7684\u65f6\u95f4\n    if (millis() - lastMillis > 10000) { // \u5982\u679c\u5df2\u8fc7\u53bb 10 \u79d2\n        lastMillis = millis(); // \u66f4\u65b0\u6700\u540e\u65ad\u5f00\u4e2d\u65ad\u7684\u65f6\u95f4\n        detachInterrupt(my_button.PIN); // \u65ad\u5f00\u6309\u94ae\u5f15\u811a\u7684\u4e2d\u65ad\n    }\n}\n')),(0,l.yg)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 ",(0,l.yg)("inlineCode",{parentName:"p"},"Button")," \u7ed3\u6784\u4f53\u6765\u5b58\u50a8\u6309\u94ae\u76f8\u5173\u7684\u6570\u636e\uff0c\u5305\u62ec\u5f15\u811a\u53f7\u3001\u6309\u94ae\u6309\u4e0b\u6b21\u6570\u548c\u4e00\u4e2a\u6807\u5fd7\uff0c\u8868\u793a\u6309\u94ae\u5f53\u524d\u662f\u5426\u88ab\u6309\u4e0b\u3002"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"isr")," \u51fd\u6570\u662f\u4e00\u4e2a\u4e2d\u65ad\u670d\u52a1\u4f8b\u7a0b\uff08ISR\uff09\uff0c\u7528\u4e8e\u5904\u7406\u6309\u94ae\u6309\u4e0b\u4e8b\u4ef6\u3002\u5b83\u589e\u52a0\u6309\u94ae\u6309\u4e0b\u6b21\u6570\uff0c\u5e76\u5c06\u6309\u4e0b\u6807\u5fd7\u8bbe\u7f6e\u4e3a ",(0,l.yg)("inlineCode",{parentName:"p"},"true"),"\u3002"),(0,l.yg)("p",null,"\u5728 ",(0,l.yg)("inlineCode",{parentName:"p"},"setup")," \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u521d\u59cb\u5316\u4e32\u53e3\u901a\u4fe1\uff0c\u8bbe\u7f6e\u6309\u94ae\u5f15\u811a\u4e3a\u8f93\u5165\u5e76\u542f\u7528\u5185\u90e8\u4e0a\u62c9\u7535\u963b\uff0c\u5e76\u5c06 ",(0,l.yg)("inlineCode",{parentName:"p"},"isr")," \u51fd\u6570\u4f5c\u4e3a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u9644\u52a0\u5230\u6309\u94ae\u5f15\u811a\uff0c\u89e6\u53d1\u6761\u4ef6\u4e3a\u4e0b\u964d\u6cbf\uff08\u6309\u94ae\u6309\u4e0b\uff09\u3002"),(0,l.yg)("p",null,"\u5728 ",(0,l.yg)("inlineCode",{parentName:"p"},"loop")," \u51fd\u6570\u4e2d\uff0c\u6211\u4eec\u68c0\u67e5\u6309\u94ae\u662f\u5426\u88ab\u6309\u4e0b\u3002\u5982\u679c\u88ab\u6309\u4e0b\uff0c\u6211\u4eec\u6253\u5370\u6309\u94ae\u6309\u4e0b\u6b21\u6570\u5230\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u5e76\u91cd\u7f6e\u6309\u4e0b\u6807\u5fd7\u3002\u6b64\u5916\uff0c\u6211\u4eec\u6bcf 10 \u79d2\u65ad\u5f00\u4e00\u6b21\u4e2d\u65ad\uff0c\u53ef\u80fd\u662f\u4e3a\u4e86\u5141\u8bb8\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u6216\u9632\u6b62\u4e0d\u5fc5\u8981\u7684\u4e2d\u65ad\u3002"),(0,l.yg)("p",null,"\u597d\u4e86\uff0c\u4e86\u89e3\u8fd9\u4e9b\u4e4b\u540e\uff0c\u8fd9\u662f\u91cd\u5199\u7684\u3001\u66f4\u5bb9\u6613\u7406\u89e3\u7684\u7248\u672c\uff1a"),(0,l.yg)("h2",{id:"adc---\u6a21\u62df\u5230\u6570\u5b57\u8f6c\u6362\u5668"},"ADC - \u6a21\u62df\u5230\u6570\u5b57\u8f6c\u6362\u5668"),(0,l.yg)("p",null,"XIAO ESP32C6 \u5177\u6709\u591a\u4e2a\u6a21\u62df\u8f93\u5165\u5f15\u811a\uff0c\u5141\u8bb8\u8bfb\u53d6\u6a21\u62df\u7535\u538b\u503c\u3002"),(0,l.yg)("p",null,"\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 ",(0,l.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/adc.html"},"ADC API")," \u6587\u6863\u3002"),(0,l.yg)("h3",{id:"\u786c\u4ef6\u8bbe\u7f6e"},"\u786c\u4ef6\u8bbe\u7f6e"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"\u5c06\u4e00\u4e2a\u7535\u4f4d\u5668\u8fde\u63a5\u5230\u5f15\u811a A0\uff0c\u4e00\u7aef\u8fde\u63a5\u5230 3.3V\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5\u5230 GND\u3002")),(0,l.yg)("h3",{id:"\u8f6f\u4ef6\u5b9e\u73b0-1"},"\u8f6f\u4ef6\u5b9e\u73b0"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u8bfb\u53d6\u6a21\u62df\u503c\u7684 Arduino \u793a\u4f8b\uff1a"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},'const int analogPin = A0; \n\nvoid setup() {\n  // \u521d\u59cb\u5316\u4e32\u53e3\u901a\u4fe1\uff0c\u6ce2\u7279\u7387\u4e3a 115200\n  Serial.begin(115200);\n  \n  // \u8bbe\u7f6e\u5206\u8fa8\u7387\u4e3a 12 \u4f4d\uff080-4095\uff09\n  analogReadResolution(12);\n}\n\nvoid loop() {\n  // \u8bfb\u53d6\u6a21\u62df\u503c\u548c\u6a21\u62df\u5f15\u811a\u7684\u6beb\u4f0f\u503c\n  int analogValue = analogRead(analogPin);\n  int analogVolts = analogReadMilliVolts(analogPin);\n  \n  // \u6253\u5370\u503c\u5230\u4e32\u53e3\u76d1\u89c6\u5668\n  Serial.printf("ADC \u6a21\u62df\u503c = %d\\n", analogValue);\n  Serial.printf("ADC \u6beb\u4f0f\u503c = %d\\n", analogVolts);\n  \n  delay(100); // \u5ef6\u8fdf\uff0c\u65b9\u4fbf\u6e05\u6670\u8bfb\u53d6\u4e32\u53e3\u6570\u636e\n}\n')),(0,l.yg)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u4ece\u6307\u5b9a\u7684\u5f15\u811a\u8bfb\u53d6\u6a21\u62df\u503c\uff0c\u5e76\u5c06\u5176\u53ca\u5176\u5bf9\u5e94\u7684\u6beb\u4f0f\u503c\u6253\u5370\u5230\u4e32\u53e3\u76d1\u89c6\u5668\u3002"),(0,l.yg)("h2",{id:"pwm-\u4fe1\u53f7--led-\u63a7\u5236"},"PWM \u4fe1\u53f7 / LED \u63a7\u5236"),(0,l.yg)("p",null,"XIAO ESP32-C6 \u5177\u6709 6 \u4e2a LEDC \u901a\u9053\uff0c\u53ef\u4ee5\u751f\u6210\u72ec\u7acb\u7684\u6ce2\u5f62\uff0c\u4f8b\u5982\u7528\u4e8e\u9a71\u52a8 RGB LED \u8bbe\u5907\u3002"),(0,l.yg)("p",null,"\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 ",(0,l.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/ledc.html"},"LEDC API")," \u6587\u6863\u3002"),(0,l.yg)("h3",{id:"\u786c\u4ef6\u8bbe\u7f6e-1"},"\u786c\u4ef6\u8bbe\u7f6e"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"\u5c06\u4e00\u4e2a LED \u8fde\u63a5\u5230\u5f15\u811a ",(0,l.yg)("inlineCode",{parentName:"li"},"D2"),"\uff0c\u5e76\u5728 LED \u4e0e\u5f15\u811a\u4e4b\u95f4\u4e32\u8054\u4e00\u4e2a\u9650\u6d41\u7535\u963b\u3002")),(0,l.yg)("h3",{id:"\u8f6f\u4ef6\u5b9e\u73b0-2"},"\u8f6f\u4ef6\u5b9e\u73b0"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u6f14\u793a PWM \u8f93\u51fa\u7684 Arduino \u793a\u4f8b\uff1a"),(0,l.yg)("h4",{id:"\u4e00\u822c-pwm"},"\u4e00\u822c PWM"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},"const int ledPin = D2;\n\nvoid setup() {\n  pinMode(ledPin, OUTPUT);\n}\n\nvoid loop() {\n  for (int dutyCycle = 0; dutyCycle <= 255; dutyCycle++) {\n    analogWrite(ledPin, dutyCycle);\n    delay(10);\n  }\n}\n")),(0,l.yg)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u901a\u8fc7 PWM \u63a7\u5236 LED \u7684\u4eae\u5ea6\uff0c\u9010\u6b65\u589e\u52a0\u4eae\u5ea6\u3002"),(0,l.yg)("h4",{id:"led-\u63a7\u5236"},"LED \u63a7\u5236"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},"/*\n LEDC \u8f6f\u4ef6\u6e10\u53d8\n\n \u672c\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 ledcWrite \u51fd\u6570\u901a\u8fc7\u8f6f\u4ef6\u63a7\u5236 LED \u6e10\u53d8\u3002\n\n \u4ee3\u7801\u6539\u7f16\u81ea\u539f\u59cb\u7684 Arduino \u6e10\u53d8\u4f8b\u5b50\uff1a\n https://www.arduino.cc/en/Tutorial/Fade\n\n \u672c\u4f8b\u4ee3\u7801\u5c5e\u4e8e\u516c\u6709\u9886\u57df\u3002\n */\n\n// \u4f7f\u7528 12 \u4f4d\u7cbe\u5ea6\u7684 LEDC \u5b9a\u65f6\u5668\n#define LEDC_TIMER_12_BIT  12\n\n// \u4f7f\u7528 5000 Hz \u4f5c\u4e3a LEDC \u57fa\u9891\n#define LEDC_BASE_FREQ     5000\n\n// \u6e10\u53d8 LED \u5f15\u811a\uff08\u5982\u679c\u4f7f\u7528\u5185\u7f6e LED\uff0c\u8bf7\u66ff\u6362\u4e3a LED_BUILTIN \u5e38\u91cf\uff09\n#define LED_PIN            D5\n\nint brightness = 0;    // LED \u7684\u4eae\u5ea6\nint fadeAmount = 5;    // \u6bcf\u6b21\u6e10\u53d8\u7684\u4eae\u5ea6\u53d8\u5316\u91cf\n\n// \u7c7b\u4f3c\u4e8e Arduino \u7684 analogWrite\n// \u6570\u503c\u5fc5\u987b\u5728 0 \u5230 valueMax \u4e4b\u95f4\nvoid ledcAnalogWrite(uint8_t pin, uint32_t value, uint32_t valueMax = 255) {\n  // \u8ba1\u7b97\u5360\u7a7a\u6bd4\uff0c4095 \u6765\u81ea 2^12 - 1\n  uint32_t duty = (4095 / valueMax) * min(value, valueMax);\n\n  // \u5c06\u5360\u7a7a\u6bd4\u5199\u5165 LEDC\n  ledcWrite(pin, duty);\n}\n\nvoid setup() {\n  // \u8bbe\u7f6e\u5b9a\u65f6\u5668\u5e76\u5c06\u5b9a\u65f6\u5668\u9644\u52a0\u5230 LED \u5f15\u811a\n  ledcAttach(LED_PIN, LEDC_BASE_FREQ, LEDC_TIMER_12_BIT);\n}\n\nvoid loop() {\n  // \u8bbe\u7f6e LEDC \u901a\u9053\u7684\u4eae\u5ea6\n  ledcAnalogWrite(LED_PIN, brightness);\n\n  // \u6539\u53d8\u4e0b\u6b21\u5faa\u73af\u7684\u4eae\u5ea6\n  brightness = brightness + fadeAmount;\n\n  // \u5728\u6e10\u53d8\u7684\u4e24\u7aef\u53cd\u8f6c\u4eae\u5ea6\u53d8\u5316\u65b9\u5411\n  if (brightness <= 0 || brightness >= 255) {\n    fadeAmount = -fadeAmount;\n  }\n  // \u7b49\u5f85 30 \u6beb\u79d2\uff0c\u4ee5\u67e5\u770b\u6e10\u53d8\u6548\u679c\n  delay(30);\n}\n")),(0,l.yg)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 ledcWrite \u51fd\u6570\u6765\u5b9e\u73b0 LED \u6e10\u53d8\u6548\u679c\u3002LED \u7684\u4eae\u5ea6\u4f1a\u5728\u6301\u7eed\u7684\u5faa\u73af\u4e2d\u9010\u6e10\u589e\u52a0\u548c\u51cf\u5c11\u3002"),(0,l.yg)("h2",{id:"i2c"},"I2C"),(0,l.yg)("p",null,"XIAO ESP32C6 \u914d\u5907\u786c\u4ef6 I2C \u63a5\u53e3\uff0c\u7528\u4e8e\u4e0e I2C \u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\u3002"),(0,l.yg)("p",null,"\u6709\u5173\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605 ",(0,l.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/i2c.html"},"I2C API")," \u6587\u6863\u3002"),(0,l.yg)("h3",{id:"\u786c\u4ef6\u51c6\u5907-1"},"\u786c\u4ef6\u51c6\u5907"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"\u5c06 I2C \u8bbe\u5907\u7684 SDA \u5f15\u811a\u8fde\u63a5\u5230 XIAO \u7684 SDA \u5f15\u811a (",(0,l.yg)("inlineCode",{parentName:"li"},"D4"),") \u3002"),(0,l.yg)("li",{parentName:"ol"},"\u5c06 I2C \u8bbe\u5907\u7684 SCL \u5f15\u811a\u8fde\u63a5\u5230 XIAO \u7684 SCL \u5f15\u811a (",(0,l.yg)("inlineCode",{parentName:"li"},"D5"),") \u3002")),(0,l.yg)("h3",{id:"\u8f6f\u4ef6\u5b9e\u73b0-3"},"\u8f6f\u4ef6\u5b9e\u73b0"),(0,l.yg)("h4",{id:"\u4e3b\u6a21\u5f0f"},"\u4e3b\u6a21\u5f0f"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u4ece I2C \u4f20\u611f\u5668\u8bfb\u53d6\u6570\u636e\uff1a"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},"#include <Wire.h>\n\nconst int sensorAddress = 0x40;\n\nvoid setup() {\n  Wire.begin();\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  Wire.beginTransmission(sensorAddress);\n  Wire.write(0x01);  // \u5bc4\u5b58\u5668\u5730\u5740\n  Wire.endTransmission();\n\n  Wire.requestFrom(sensorAddress, 2);\n  if (Wire.available() >= 2) {\n    int data = Wire.read() << 8 | Wire.read();\n    Serial.println(data);\n  }\n\n  delay(100);\n}\n")),(0,l.yg)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u4ece I2C \u4f20\u611f\u5668\u7684\u5bc4\u5b58\u5668 ",(0,l.yg)("inlineCode",{parentName:"p"},"0x01")," \u8bfb\u53d6\u4e00\u4e2a 16 \u4f4d\u503c\u3002"),(0,l.yg)("h4",{id:"\u4ece\u6a21\u5f0f"},"\u4ece\u6a21\u5f0f"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u5c06 XIAO ESP32C6 \u7528\u4f5c ",(0,l.yg)("em",{parentName:"p"},"I2C \u4ece\u8bbe\u5907"),"\uff1a"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},'#include "Wire.h"\n\n#define I2C_DEV_ADDR 0x55\n\nuint32_t i = 0;\n\nvoid onRequest() {\n  Wire.print(i++);\n  Wire.print(" Packets.");\n  Serial.println("onRequest");\n}\n\nvoid onReceive(int len) {\n  Serial.printf("onReceive[%d]: ", len);\n  while (Wire.available()) {\n    Serial.write(Wire.read());\n  }\n  Serial.println();\n}\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.setDebugOutput(true);\n  Wire.onReceive(onReceive);\n  Wire.onRequest(onRequest);\n  Wire.begin((uint8_t)I2C_DEV_ADDR);\n\n#if CONFIG_IDF_TARGET_ESP32\n  char message[64];\n  snprintf(message, 64, "%lu Packets.", i++);\n  Wire.slaveWrite((uint8_t *)message, strlen(message));\n#endif\n}\n\nvoid loop() {\n  // \u4ece\u8bbe\u5907\u4ee3\u7801\u90e8\u5206\n}\n')),(0,l.yg)("p",null,"\u5728\u8fd9\u4e2a\u4ece\u8bbe\u5907\u6a21\u5f0f\u793a\u4f8b\u4e2d\uff0cXIAO ESP32C6 \u88ab\u914d\u7f6e\u4e3a I2C \u4ece\u8bbe\u5907\uff0c\u5730\u5740\u4e3a ",(0,l.yg)("inlineCode",{parentName:"p"},"0x55"),"\u3002\u5f53\u4ece\u8bbe\u5907\u63a5\u6536\u5230\u4e3b\u8bbe\u5907\u7684\u6570\u636e\u65f6\uff0c",(0,l.yg)("inlineCode",{parentName:"p"},"onReceive")," \u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff1b\u5f53\u4e3b\u8bbe\u5907\u8bf7\u6c42\u6570\u636e\u65f6\uff0c",(0,l.yg)("inlineCode",{parentName:"p"},"onRequest")," \u56de\u8c03\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\u3002"),(0,l.yg)("h2",{id:"spi"},"SPI"),(0,l.yg)("p",null,"XIAO ESP32C6 \u5fae\u63a7\u5236\u5668\u677f\u5177\u6709\u5185\u5efa\u7684 SPI \u63a5\u53e3\uff0c\u80fd\u591f\u4e0e\u5176\u4ed6\u652f\u6301 SPI \u7684\u8bbe\u5907\u8fdb\u884c\u5feb\u901f\u7684\u6570\u636e\u4ea4\u6362\u3002\u8fd9\u5728\u9700\u8981\u591a\u4e2a\u8bbe\u5907\u4e4b\u95f4\u8fdb\u884c\u5feb\u901f\u901a\u4fe1\u7684\u9879\u76ee\u4e2d\u975e\u5e38\u6709\u7528\u3002"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"\u6709\u5173\u8be6\u7ec6\u7684\u6280\u672f\u89c4\u683c\uff0c\u8bf7\u53c2\u9605 ",(0,l.yg)("a",{parentName:"li",href:"https://www.espressif.com/sites/default/files/documentation/esp32-c6_datasheet_en.pdf"},"XIAO ESP32C6 \u6570\u636e\u624b\u518c"),"\u3002"),(0,l.yg)("li",{parentName:"ul"},"\u6709\u5173\u5982\u4f55\u4f7f\u7528 SPI \u63a5\u53e3\u4e0e XIAO ESP32C6 \u914d\u5408\u4f7f\u7528\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u8003 ",(0,l.yg)("a",{parentName:"li",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/api/spi.html#"},"SPI API \u6587\u6863"),"\u3002")),(0,l.yg)("h3",{id:"\u786c\u4ef6\u51c6\u5907-2"},"\u786c\u4ef6\u51c6\u5907"),(0,l.yg)("p",null,"\u8981\u5c06 XIAO ESP32C6 \u8fde\u63a5\u5230\u53e6\u4e00\u4e2a SPI \u8bbe\u5907\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("strong",{parentName:"li"},"MOSI (Master Out Slave In):")," \u5c06 SPI \u8bbe\u5907\u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"MOSI")," \u5f15\u811a\u8fde\u63a5\u5230 XIAO \u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"D10")," \u5f15\u811a\u3002"),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("strong",{parentName:"li"},"MISO (Master In Slave Out):")," \u5c06 SPI \u8bbe\u5907\u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"MISO")," \u5f15\u811a\u8fde\u63a5\u5230 XIAO \u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"D9")," \u5f15\u811a\u3002"),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("strong",{parentName:"li"},"SCK (Serial Clock):")," \u5c06 SPI \u8bbe\u5907\u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"SCK")," \u5f15\u811a\u8fde\u63a5\u5230 XIAO \u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"D8")," \u5f15\u811a\u3002"),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("strong",{parentName:"li"},"CS (Chip Select):")," \u5c06 SPI \u8bbe\u5907\u7684 ",(0,l.yg)("inlineCode",{parentName:"li"},"CS")," \u5f15\u811a\u8fde\u63a5\u5230 XIAO \u7684\u4e00\u4e2a\u6570\u5b57\u5f15\u811a\uff08\u4f8b\u5982\uff0c",(0,l.yg)("inlineCode",{parentName:"li"},"D3"),"\uff09\u3002")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre"},"MOSI -> D10\nMISO -> D9\nSCK -> D8\nCS -> D3 (\u4f8b\u5982)\n")),(0,l.yg)("h3",{id:"\u8f6f\u4ef6\u5b9e\u73b0-4"},"\u8f6f\u4ef6\u5b9e\u73b0"),(0,l.yg)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5316\u7684 Arduino \u7a0b\u5e8f\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 XIAO ESP32C6 \u4e0e SPI \u8bbe\u5907\u8fdb\u884c\u57fa\u672c\u7684 SPI \u901a\u4fe1\u3002\u8be5\u7a0b\u5e8f\u5411 SPI \u8bbe\u5907\u53d1\u9001\u547d\u4ee4\u5e76\u8bfb\u53d6\u54cd\u5e94\uff08\u4ece SPI \u8bbe\u5907\u8bfb\u53d6\u6570\u636e\uff09\u3002"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-cpp"},"#include <SPI.h>\n\nconst int csPin = 3;  // \u4f7f\u7528 D3 \u5f15\u811a\u4f5c\u4e3a\u82af\u7247\u9009\u62e9\uff08CS\uff09\n\nvoid setup() {\n  // \u521d\u59cb\u5316 SPI \u901a\u4fe1\n  SPI.begin();             \n  // \u8bbe\u7f6e CS \u5f15\u811a\u4e3a\u8f93\u51fa\n  pinMode(csPin, OUTPUT); \n  // \u5c06 CS \u5f15\u811a\u8bbe\u7f6e\u4e3a\u9ad8\u7535\u5e73\uff0c\u8868\u793a\u6ca1\u6709\u6b63\u5728\u8fdb\u884c\u7684\u901a\u4fe1\n  digitalWrite(csPin, HIGH);\n}\n\nvoid loop() {\n  // \u542f\u52a8\u4e0e\u8bbe\u5907\u7684\u901a\u4fe1\n  digitalWrite(csPin, LOW);\n  SPI.transfer(0x01);  // \u5411\u8bbe\u5907\u53d1\u9001\u547d\u4ee4\n  int data = SPI.transfer(0);  // \u8bfb\u53d6\u54cd\u5e94\n  digitalWrite(csPin, HIGH);  // \u7ed3\u675f\u901a\u4fe1\n\n  // \u6253\u5370\u63a5\u6536\u5230\u7684\u6570\u636e\n  Serial.println(data);       \n  delay(100);  // \u7b49\u5f85\u77ed\u6682\u65f6\u95f4\n}\n")),(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"\u8bf7\u786e\u4fdd\u7a0b\u5e8f\u4e2d\u7684\u5f15\u811a\u5206\u914d\u4e0e\u786c\u4ef6\u8bbe\u7f6e\u4e2d\u7684\u7269\u7406\u8fde\u63a5\u5339\u914d\u3002\u4e0a\u9762\u7684\u793a\u4f8b\u4f7f\u7528\u4e86\u57fa\u4e8e ",(0,l.yg)("inlineCode",{parentName:"p"},"pin_arduino.h")," \u6587\u4ef6\u7684\u9884\u5b9a\u4e49\u5f15\u811a\u7f16\u53f7\uff0c\u5e76\u4e3a CS \u5f15\u811a\u5b9a\u4e49\u4e86\u989d\u5916\u7684\u8bbe\u7f6e\u3002")),(0,l.yg)("h2",{id:"\u8d44\u6e90"},"\u8d44\u6e90"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32c6_getting_started/"},"XIAO ESP32C6 \u6587\u6863")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://www.espressif.com/sites/default/files/documentation/esp32-c6_datasheet_en.pdf"},"ESP32-C6 \u6570\u636e\u624b\u518c")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://www.arduino.cc/reference/en/"},"Arduino \u53c2\u8003\u6587\u6863")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/index.html"},"Arduino ESP32 \u53c2\u8003\u6587\u6863"))))}u.isMDXComponent=!0}}]);