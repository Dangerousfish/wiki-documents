"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5692],{15680:(n,e,i)=>{i.d(e,{xA:()=>p,yg:()=>u});var r=i(96540);function t(n,e,i){return e in n?Object.defineProperty(n,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[e]=i,n}function _(n,e){var i=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),i.push.apply(i,r)}return i}function a(n){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?_(Object(i),!0).forEach((function(e){t(n,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):_(Object(i)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(i,e))}))}return n}function l(n,e){if(null==n)return{};var i,r,t=function(n,e){if(null==n)return{};var i,r,t={},_=Object.keys(n);for(r=0;r<_.length;r++)i=_[r],e.indexOf(i)>=0||(t[i]=n[i]);return t}(n,e);if(Object.getOwnPropertySymbols){var _=Object.getOwnPropertySymbols(n);for(r=0;r<_.length;r++)i=_[r],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(n,i)&&(t[i]=n[i])}return t}var o=r.createContext({}),s=function(n){var e=r.useContext(o),i=e;return n&&(i="function"==typeof n?n(e):a(a({},e),n)),i},p=function(n){var e=s(n.components);return r.createElement(o.Provider,{value:e},n.children)},d="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},S=r.forwardRef((function(n,e){var i=n.components,t=n.mdxType,_=n.originalType,o=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),d=s(i),S=t,u=d["".concat(o,".").concat(S)]||d[S]||c[S]||_;return i?r.createElement(u,a(a({ref:e},p),{},{components:i})):r.createElement(u,a({ref:e},p))}));function u(n,e){var i=arguments,t=e&&e.mdxType;if("string"==typeof n||t){var _=i.length,a=new Array(_);a[0]=S;var l={};for(var o in e)hasOwnProperty.call(e,o)&&(l[o]=e[o]);l.originalType=n,l[d]="string"==typeof n?n:t,a[1]=l;for(var s=2;s<_;s++)a[s]=i[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,i)}S.displayName="MDXCreateElement"},27143:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>_,metadata:()=>l,toc:()=>s});var r=i(9668),t=(i(96540),i(15680));const _={description:"XIAO ESP32 Sense \u4f7f\u7528\u4e0d\u540c\u7684\u7761\u7720\u6a21\u5f0f\u6d88\u8d39",title:"XIAO ESP32S3 Sense \u7761\u7720\u6a21\u5f0f",keywords:["Sleep_Modes"],image:"https://files.seeedstudio.com//wiki/ESP32S3_Sense_SleepMode/1.png",slug:"/cn/XIAO_ESP32S3_Consumption",last_update:{date:"11/20/2024",author:"Agnes"}},a=void 0,l={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/CN_XIAO_ESP32S3_Sense_Consumption",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/CN_XIAO_ESP32S3_Sense_Consumption",title:"XIAO ESP32S3 Sense \u7761\u7720\u6a21\u5f0f",description:"XIAO ESP32 Sense \u4f7f\u7528\u4e0d\u540c\u7684\u7761\u7720\u6a21\u5f0f\u6d88\u8d39",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/CN_XIAO_ESP32S3_Sense_Consumption.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense",slug:"/cn/XIAO_ESP32S3_Consumption",permalink:"/cn/XIAO_ESP32S3_Consumption",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/CN_XIAO_ESP32S3_Sense_Consumption.md",tags:[],version:"current",lastUpdatedBy:"Agnes",lastUpdatedAt:1732060800,formattedLastUpdatedAt:"Nov 20, 2024",frontMatter:{description:"XIAO ESP32 Sense \u4f7f\u7528\u4e0d\u540c\u7684\u7761\u7720\u6a21\u5f0f\u6d88\u8d39",title:"XIAO ESP32S3 Sense \u7761\u7720\u6a21\u5f0f",keywords:["Sleep_Modes"],image:"https://files.seeedstudio.com//wiki/ESP32S3_Sense_SleepMode/1.png",slug:"/cn/XIAO_ESP32S3_Consumption",last_update:{date:"11/20/2024",author:"Agnes"}},sidebar:"CNSidebar",previous:{title:"\u4e32\u53e3\u786c\u4ef6\u4f7f\u7528\u6559\u7a0b",permalink:"/cn/xiao_esp32s3_pin_multiplexing"},next:{title:"Wi-Fi \u4f7f\u7528",permalink:"/cn/xiao_esp32s3_wifi_usage"}},o={},s=[{value:"\u8f6f\u4ef6\u51c6\u5907",id:"\u8f6f\u4ef6\u51c6\u5907",level:2},{value:"\u6df1\u5ea6\u7761\u7720",id:"\u6df1\u5ea6\u7761\u7720",level:2},{value:"\u6df1\u5ea6\u7761\u7720\u4ecb\u7ecd",id:"\u6df1\u5ea6\u7761\u7720\u4ecb\u7ecd",level:3},{value:"\u5524\u9192\u65b9\u5f0f",id:"\u5524\u9192\u65b9\u5f0f",level:3},{value:"\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u4ee3\u7801",id:"\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u4ee3\u7801",level:3},{value:"\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f (Modem-Sleep)",id:"\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f-modem-sleep",level:2},{value:"\u4ecb\u7ecd\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f",id:"\u4ecb\u7ecd\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f",level:3},{value:"\u5524\u9192\u65b9\u5f0f",id:"\u5524\u9192\u65b9\u5f0f-1",level:3},{value:"\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u4ee3\u7801",id:"\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u4ee3\u7801",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f",id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f",level:3},{value:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f",id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3-1",level:3},{value:"\u6280\u672f\u652f\u6301\u4e0e\u4ea7\u54c1\u8ba8\u8bba",id:"\u6280\u672f\u652f\u6301\u4e0e\u4ea7\u54c1\u8ba8\u8bba",level:2}],p={toc:s},d="wrapper";function c(n){let{components:e,...i}=n;return(0,t.yg)(d,(0,r.A)({},p,i,{components:e,mdxType:"MDXLayout"}),(0,t.yg)("div",{style:{textAlign:"center"}},(0,t.yg)("img",{src:"https://files.seeedstudio.com/wiki/ESP32S3_Sense_SleepMode/1.png",style:{width:700,height:"auto"}})),(0,t.yg)("p",null,"\u5728\u8fd9\u91cc\uff0c\u6211\u5c06\u4f7f\u7528\u4e00\u4e9b\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u4f4e\u529f\u8017\u7761\u7720\u6a21\u5f0f\u3002\u6240\u6709 ESP32 \u90fd\u662f\u901a\u7528\u7684\uff0c\u800c\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u7684\u5f00\u53d1\u677f\u662f XIAO ESP32S3 Sense\u3002"),(0,t.yg)("div",{class:"table-center"},(0,t.yg)("table",{align:"center"},(0,t.yg)("tr",null,(0,t.yg)("th",null,"Seeed Studio XIAO ESP32S3 Sense")),(0,t.yg)("tr",null,(0,t.yg)("td",null,(0,t.yg)("div",{style:{textAlign:"center"}},(0,t.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/xiaoesp32s3sense.jpg",style:{width:250,height:"auto"}})))),(0,t.yg)("tr",null,(0,t.yg)("td",null,(0,t.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,t.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/XIAO-ESP32S3-Sense-p-5639.html"},(0,t.yg)("strong",null,(0,t.yg)("span",null,(0,t.yg)("font",{color:"FFFFFF",size:"4"}," \u7acb\u5373\u8d2d\u4e70 \ud83d\uddb1\ufe0f"))))))))),(0,t.yg)("h2",{id:"\u8f6f\u4ef6\u51c6\u5907"},"\u8f6f\u4ef6\u51c6\u5907"),(0,t.yg)("p",null,"\u5728\u5f00\u59cb\u672c\u6587\u4e4b\u524d\uff0c\u5982\u679c\u60a8\u8fd8\u6ca1\u6709\u4f7f\u7528\u8fc7 XIAO ESP32S3 Sense \u4e0a\u7684\u6240\u6709\u786c\u4ef6\u529f\u80fd\uff0c\u60a8\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u8f6f\u4ef6\u5b89\u88c5\u51c6\u5907\u3002"),(0,t.yg)("p",null,"\u4e0b\u9762\uff0c\u6211\u63d0\u4f9b\u4e86\u76f8\u5173\u7684\u8df3\u8f6c\u94fe\u63a5\uff1a"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32s3_sense_mic/"},"\u9ea6\u514b\u98ce\u4f7f\u7528")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32s3_sense_filesystem/"},"MicroSD \u4f7f\u7528")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32s3_camera_usage/"},"\u6444\u50cf\u5934\u4f7f\u7528"))),(0,t.yg)("h2",{id:"\u6df1\u5ea6\u7761\u7720"},"\u6df1\u5ea6\u7761\u7720"),(0,t.yg)("h3",{id:"\u6df1\u5ea6\u7761\u7720\u4ecb\u7ecd"},"\u6df1\u5ea6\u7761\u7720\u4ecb\u7ecd"),(0,t.yg)("p",null,"\u5728\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u4e0b\uff0cCPU\u3001\u5927\u90e8\u5206 RAM \u4ee5\u53ca\u6240\u6709\u7531 APB_CLK \u65f6\u949f\u63a7\u5236\u7684\u6570\u5b57\u5916\u8bbe\u90fd\u4f1a\u5173\u95ed\u3002\u53ea\u6709\u4ee5\u4e0b\u51e0\u4e2a\u82af\u7247\u90e8\u5206\u4ecd\u7136\u4fdd\u6301\u901a\u7535\uff1a"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"RTC \u63a7\u5236\u5668"),(0,t.yg)("li",{parentName:"ul"},"ULP \u534f\u5904\u7406\u5668"),(0,t.yg)("li",{parentName:"ul"},"RTC \u5feb\u901f\u5185\u5b58"),(0,t.yg)("li",{parentName:"ul"},"RTC \u6162\u901f\u5185\u5b58")),(0,t.yg)("h3",{id:"\u5524\u9192\u65b9\u5f0f"},"\u5524\u9192\u65b9\u5f0f"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"\u5b9a\u65f6\u5668\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"\u89e6\u6478\u677f\u4e2d\u65ad\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"\u5916\u90e8\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"ULP \u534f\u5904\u7406\u5668\u6d3b\u52a8\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"GPIO \u5524\u9192")),(0,t.yg)("h3",{id:"\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u4ee3\u7801"},"\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u4ee3\u7801"),(0,t.yg)("p",null,"\u5728\u8fd9\u6bb5\u4ee3\u7801\u4e2d\uff0c\u6211\u4f7f\u7528\u5b9a\u65f6\u5668\u4f5c\u4e3a\u5524\u9192\u6e90\uff0c\u6bcf 7 \u79d2\u5524\u9192\u4e00\u6b21\u3002"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-cpp"},'/*\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6*/\n#include "FS.h"\n#include "SD.h"\n#include "SPI.h"\n#include <ESP_I2S.h>\n#include "esp_camera.h"\n#include "camera_pins.h"\n\n\n/*\u8bbe\u7f6e\u5524\u9192\u65f6\u95f4\u4e3a\u4e03\u79d2*/\n#define uS_TO_S_FACTOR 1000000ULL /* \u5fae\u79d2\u5230\u79d2\u7684\u8f6c\u6362\u56e0\u5b50 */\n#define TIME_TO_SLEEP  7          /* ESP32\u8fdb\u5165\u7761\u7720\u7684\u65f6\u95f4\uff08\u5355\u4f4d\uff1a\u79d2\uff09 */\n#define CAMERA_MODEL_XIAO_ESP32S3 // \u542f\u7528PSRAM\n\nRTC_DATA_ATTR int bootCount = 0;\n\nI2SClass I2S;\n\n\n/*\u51fd\u6570\u58f0\u660e*/\nvoid print_wakeup_reason();    // \u6253\u5370\u5524\u9192\u6e90 \nvoid SDCard_enable();         // \u542f\u7528SD\u5361 \nvoid Microphone_enable();     // \u542f\u7528\u9ea6\u514b\u98ce \nvoid Camera_enable();         // \u521d\u59cb\u5316\u76f8\u673a \nvoid Deep_Sleep_enable();     // \u542f\u52a8\u6df1\u5ea6\u7761\u7720\nvoid close_SDCard();\nvoid close_Camera();\nvoid close_Microphone();\nvoid startCameraServer();\nvoid setupLedFlash(int pin);\n\n\n\nvoid setup() {\n  Serial.begin(115200);\n  while(!Serial);        // \u786e\u4fdd\u4e32\u53e3\u5df2\u542f\u7528\n}\n\nvoid loop() {\n  while(!Serial);        \n  /*\u542f\u7528\u6216\u5173\u95ed\u60a8\u7684\u5916\u8bbe*/\n  Deep_Sleep_enable();\n  delay(10000);\n}\n\n\nvoid print_wakeup_reason() {\n  esp_sleep_wakeup_cause_t wakeup_reason;\n\n  wakeup_reason = esp_sleep_get_wakeup_cause();\n\n  switch (wakeup_reason) {\n    case ESP_SLEEP_WAKEUP_EXT0:     Serial.println("Wakeup caused by external signal using RTC_IO"); break;\n    case ESP_SLEEP_WAKEUP_EXT1:     Serial.println("Wakeup caused by external signal using RTC_CNTL"); break;\n    case ESP_SLEEP_WAKEUP_TIMER:    Serial.println("Wakeup caused by timer"); break;\n    case ESP_SLEEP_WAKEUP_TOUCHPAD: Serial.println("Wakeup caused by touchpad"); break;\n    case ESP_SLEEP_WAKEUP_ULP:      Serial.println("Wakeup caused by ULP program"); break;\n    default:                        Serial.printf("Wakeup was not caused by deep sleep: %d\\n", wakeup_reason); break;\n  }\n}\n\n\nvoid SDCard_Function(){\n    if(!SD.begin(21)){\n      Serial.println("Card Mount Failed");\n      return;\n  }\n  uint8_t cardType = SD.cardType();\n  if(cardType == CARD_NONE){\n      Serial.println("No SD card attached");\n      return;\n  }\n  Serial.print("SD Card Type: ");\n  if(cardType == CARD_MMC){\n      Serial.println("MMC");\n  } else if(cardType == CARD_SD){\n      Serial.println("SDSC");\n  } else if(cardType == CARD_SDHC){\n      Serial.println("SDHC");\n  } else {\n      Serial.println("UNKNOWN");\n  }\n\n  uint64_t cardSize = SD.cardSize() / (1024 * 1024);\n  Serial.printf("SD Card Size: %lluMB\\n", cardSize);\n  Serial.println("the sc card is connecting");\n}\n\nvoid Microphone_Function(){\n    // \u8bbe\u7f6e42\u53f7\u5f15\u811a\u4e3aPDM\u65f6\u949f\uff0c41\u53f7\u5f15\u811a\u4e3aPDM\u6570\u636e\n  I2S.setPinsPdmRx(42, 41);\n  // \u4ee516 kHz\u7684\u91c7\u6837\u7387\u548c\u6bcf\u4e2a\u6837\u672c16\u4f4d\u7684\u6570\u636e\u5bbd\u5ea6\u542f\u52a8I2S\n  if (!I2S.begin(I2S_MODE_PDM_RX, 16000, I2S_DATA_BIT_WIDTH_16BIT, I2S_SLOT_MODE_MONO)) {\n    Serial.println("\u521d\u59cb\u5316I2S\u5931\u8d25!");\n    while (1); // \u5982\u679c\u521d\u59cb\u5316\u5931\u8d25\uff0c\u7a0b\u5e8f\u505c\u5728\u8fd9\u91cc\uff0c\u4e0d\u7ee7\u7eed\u6267\u884c\n  }\n  \n  Serial.println("\u9ea6\u514b\u98ce\u5df2\u6253\u5f00");\n  \n  // 5\u79d2\u540e\u505c\u6b62\u8bfb\u53d6\n  delay(500);  // \u6682\u505c500\u6beb\u79d2\n}\n\nvoid Camera_Function(){\n  Serial.setDebugOutput(true);\n  Serial.println();\n\n/*config\u8bbe\u7f6e*/\n  camera_config_t config;\n  config.ledc_channel = LEDC_CHANNEL_0;\n  config.ledc_timer = LEDC_TIMER_0;\n  config.pin_d0 = Y2_GPIO_NUM;\n  config.pin_d1 = Y3_GPIO_NUM;\n  config.pin_d2 = Y4_GPIO_NUM;\n  config.pin_d3 = Y5_GPIO_NUM;\n  config.pin_d4 = Y6_GPIO_NUM;\n  config.pin_d5 = Y7_GPIO_NUM;\n  config.pin_d6 = Y8_GPIO_NUM;\n  config.pin_d7 = Y9_GPIO_NUM;\n  config.pin_xclk = XCLK_GPIO_NUM;\n  config.pin_pclk = PCLK_GPIO_NUM;\n  config.pin_vsync = VSYNC_GPIO_NUM;\n  config.pin_href = HREF_GPIO_NUM;\n  config.pin_sccb_sda = SIOD_GPIO_NUM;\n  config.pin_sccb_scl = SIOC_GPIO_NUM;\n  config.pin_pwdn = PWDN_GPIO_NUM;\n  config.pin_reset = RESET_GPIO_NUM;\n  config.xclk_freq_hz = 20000000;\n  config.frame_size = FRAMESIZE_UXGA;\n  config.pixel_format = PIXFORMAT_JPEG;  // \u7528\u4e8e\u6d41\u5a92\u4f53\u4f20\u8f93\n//config.pixel_format = PIXFORMAT_RGB565; // \u7528\u4e8e\u4eba\u8138\u68c0\u6d4b/\u8bc6\u522b\nconfig.grab_mode = CAMERA_GRAB_WHEN_EMPTY;\nconfig.fb_location = CAMERA_FB_IN_PSRAM;\nconfig.jpeg_quality = 12;\nconfig.fb_count = 1;\n\n// \u5982\u679c\u5b58\u5728PSRAM IC\uff0c\u5219\u4ee5UXGA\u5206\u8fa8\u7387\u548c\u66f4\u9ad8\u7684JPEG\u8d28\u91cf\u521d\u59cb\u5316\n//                      \u7528\u4e8e\u66f4\u5927\u7684\u9884\u5206\u914d\u5e27\u7f13\u51b2\u533a\u3002\nif (config.pixel_format == PIXFORMAT_JPEG) {\n  if (psramFound()) {\n    config.jpeg_quality = 10;\n    config.fb_count = 2;\n    config.grab_mode = CAMERA_GRAB_LATEST;\n  } else {\n    // \u5982\u679c\u6ca1\u6709PSRAM\uff0c\u9650\u5236\u5e27\u5927\u5c0f\n    config.frame_size = FRAMESIZE_SVGA;\n    config.fb_location = CAMERA_FB_IN_DRAM;\n  }\n} else {\n  // \u4eba\u8138\u68c0\u6d4b/\u8bc6\u522b\u7684\u6700\u4f73\u9009\u9879\n  config.frame_size = FRAMESIZE_240X240;\n#if CONFIG_IDF_TARGET_ESP32S3\n  config.fb_count = 2;\n#endif\n}\n\n#if defined(CAMERA_MODEL_ESP_EYE)\n  pinMode(13, INPUT_PULLUP);\n  pinMode(14, INPUT_PULLUP);\n#endif\n\n  // \u76f8\u673a\u521d\u59cb\u5316 \nesp_err_t err = esp_camera_init(&config);\nif (err != ESP_OK) {\n  Serial.printf("\u76f8\u673a\u521d\u59cb\u5316\u5931\u8d25\uff0c\u9519\u8bef\u7801 0x%x", err);\n  return;\n}\n\nsensor_t *s = esp_camera_sensor_get();\n// \u521d\u59cb\u4f20\u611f\u5668\u5782\u76f4\u7ffb\u8f6c\u4e14\u989c\u8272\u6709\u4e9b\u8fc7\u9971\u548c\nif (s->id.PID == OV3660_PID) {\n  s->set_vflip(s, 1);        // \u7ffb\u8f6c\u56de\u6765\n  s->set_brightness(s, 1);   // \u7a0d\u5fae\u8c03\u9ad8\u4eae\u5ea6\n  s->set_saturation(s, -2);  // \u964d\u4f4e\u9971\u548c\u5ea6\n}\n// \u4e3a\u4e86\u63d0\u9ad8\u521d\u59cb\u5e27\u7387\uff0c\u964d\u4f4e\u5e27\u5927\u5c0f\nif (config.pixel_format == PIXFORMAT_JPEG) {\n  s->set_framesize(s, FRAMESIZE_QVGA);\n}\n\n#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)\n  s->set_vflip(s, 1);\n  s->set_hmirror(s, 1);\n#endif\n#if defined(CAMERA_MODEL_ESP32S3_EYE)\n  s->set_vflip(s, 1);\n#endif\n// \u5982\u679c\u5728camera_pins.h\u4e2d\u5b9a\u4e49\u4e86LED\u5f15\u811a\uff0c\u5219\u8bbe\u7f6eLED\u95ea\u5149\u706f\n#if defined(LED_GPIO_NUM)\n  setupLedFlash(LED_GPIO_NUM);\n#endif\n\nSerial.println("\u76f8\u673a\u5df2\u5f00\u542f");\n}\n\nvoid Deep_Sleep_Function(){\n  ++bootCount;\n  Serial.println("\u542f\u52a8\u6b21\u6570: " + String(bootCount));\n  // \u6253\u5370ESP32\u7684\u5524\u9192\u539f\u56e0\n  print_wakeup_reason();\n  esp_sleep_enable_timer_wakeup(TIME_TO_SLEEP * uS_TO_S_FACTOR); // \u8bbe\u7f6e\u5524\u9192\u6e90\n  Serial.println("\u8bbe\u7f6eESP32\u6bcf " + String(TIME_TO_SLEEP) + " \u79d2\u8fdb\u5165\u7761\u7720");\n  Serial.println("\u73b0\u5728\u8fdb\u5165\u6df1\u5ea6\u7761\u7720");\n  Serial.flush();\n  esp_deep_sleep_start();\n}\n\nvoid close_SDCard(){\n  SD.end();\n  Serial.println("the sd card already closed");\n}\nvoid close_Camera(){\n  esp_camera_deinit();\n  Serial.println("the camera already closed");\n}\nvoid close_Microphone(){\n  I2S.end();\n  Serial.println("the microphone already closed");\n}\n\n')),(0,t.yg)("admonition",{type:"tip"},(0,t.yg)("p",{parentName:"admonition"},"\u5982\u679c\u5728 XIAO ESP32S3 Sense \u4e2d\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\uff0c\u4f60\u9700\u8981\u5c06 XIAO ESP32S3 Sense \u91cd\u65b0\u8fdb\u5165\u4e0b\u8f7d\u6a21\u5f0f\uff0c\u6309\u4e0b boot \u6309\u94ae\uff0c\u7136\u540e\u6309\u4e0b\u91cd\u7f6e\u6309\u94ae\u3002")),(0,t.yg)("h2",{id:"\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f-modem-sleep"},"\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f (Modem-Sleep)"),(0,t.yg)("h3",{id:"\u4ecb\u7ecd\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f"},"\u4ecb\u7ecd\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f"),(0,t.yg)("p",null,"\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f\u662f ESP32 \u4e2d\u7684\u53e6\u4e00\u79cd\u91cd\u8981\u4f4e\u529f\u8017\u6a21\u5f0f\uff0c\u533a\u522b\u4e8e\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u3002\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f\u4e3b\u8981\u9488\u5bf9 ESP32 \u7684\u65e0\u7ebf\u901a\u4fe1\u6a21\u5757\u8fdb\u884c\u4e86\u4f18\u5316\u3002"),(0,t.yg)("p",null,"\u5728\u6b64\u6a21\u5f0f\u4e0b\uff0cESP32 \u7684 WiFi/Bluetooth \u6a21\u5757\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u800c CPU \u6838\u5fc3\u4fdd\u6301\u6d3b\u8dc3\u3002\u8fd9\u4f7f\u5f97 ESP32 \u80fd\u591f\u5728\u4fdd\u6301\u4e00\u5b9a\u65e0\u7ebf\u8fde\u63a5\u6027\u7684\u540c\u65f6\uff0c\u663e\u8457\u964d\u4f4e\u529f\u8017\u3002"),(0,t.yg)("h3",{id:"\u5524\u9192\u65b9\u5f0f-1"},"\u5524\u9192\u65b9\u5f0f"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"\u5b9a\u65f6\u5668\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"\u5916\u90e8\u4e2d\u65ad\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"\u4efb\u52a1\u5524\u9192"),(0,t.yg)("li",{parentName:"ul"},"\u7f51\u7edc\u6d3b\u52a8\u5524\u9192")),(0,t.yg)("h3",{id:"\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u4ee3\u7801"},"\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u4ee3\u7801"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <WiFi.h>\n#include <esp_wifi.h>\n#include <ESP_I2S.h>\n#include "FS.h"\n#include "SD.h"\n#include "SPI.h"\n#include "esp_camera.h"\n\n/*\u6b64\u5904\u987a\u5e8f\u4e0d\u53ef\u66f4\u6539\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u9519\u8bef\uff1a\u672a\u9009\u62e9\u76f8\u673a\u6a21\u5f0f*/\n#define CAMERA_MODEL_XIAO_ESP32S3 // \u5e26\u6709 PSRAM\n#include "camera_pins.h"\n/**************************/\nI2SClass I2S;\n\nconst char* ssid = "************";\nconst char* password = "***********";\n\n/*\u51fd\u6570\u58f0\u660e*/\nvoid print_wakeup_reason(); // \u6253\u5370\u5524\u9192\u6e90\nvoid SDCard_enable(); // \u542f\u7528SD\u5361\nvoid Microphone_enable(); // \u542f\u7528\u9ea6\u514b\u98ce\nvoid Camera_enable(); // \u521d\u59cb\u5316\u76f8\u673a\nvoid wifi_enable(); // \u542f\u7528WiFi\nvoid Deep_Sleep_enable(); // \u542f\u52a8\u6df1\u5ea6\u7761\u7720\nvoid close_SDCard(); // \u5173\u95edSD\u5361\nvoid close_Camera(); // \u5173\u95ed\u76f8\u673a\nvoid close_Microphone(); // \u5173\u95ed\u9ea6\u514b\u98ce\nvoid startCameraServer(); // \u542f\u52a8\u76f8\u673a\u670d\u52a1\u5668\nvoid setupLedFlash(int pin); // \u8bbe\u7f6eLED\u95ea\u5149\u706f\n\n\n\nvoid setup() {\n  Serial.begin(115200);\n  while(!Serial);\n}\n\nvoid loop() {\n  delay(500);\n  Serial.println("ready into deep sleep");\n  esp_deep_sleep_start();\n  Serial.flush();\n  delay(5000);\n}\n\n\nvoid Camera_enable(){\n  Serial.setDebugOutput(true);\n  Serial.println();\n\n/*config\u8bbe\u7f6e*/\n  camera_config_t config;\n  config.ledc_channel = LEDC_CHANNEL_0;\n  config.ledc_timer = LEDC_TIMER_0;\n  config.pin_d0 = Y2_GPIO_NUM;\n  config.pin_d1 = Y3_GPIO_NUM;\n  config.pin_d2 = Y4_GPIO_NUM;\n  config.pin_d3 = Y5_GPIO_NUM;\n  config.pin_d4 = Y6_GPIO_NUM;\n  config.pin_d5 = Y7_GPIO_NUM;\n  config.pin_d6 = Y8_GPIO_NUM;\n  config.pin_d7 = Y9_GPIO_NUM;\n  config.pin_xclk = XCLK_GPIO_NUM;\n  config.pin_pclk = PCLK_GPIO_NUM;\n  config.pin_vsync = VSYNC_GPIO_NUM;\n  config.pin_href = HREF_GPIO_NUM;\n  config.pin_sccb_sda = SIOD_GPIO_NUM;\n  config.pin_sccb_scl = SIOC_GPIO_NUM;\n  config.pin_pwdn = PWDN_GPIO_NUM;\n  config.pin_reset = RESET_GPIO_NUM;\n  config.xclk_freq_hz = 20000000;\n  config.frame_size = FRAMESIZE_UXGA;\n  config.pixel_format = PIXFORMAT_JPEG;  // \u7528\u4e8e\u6d41\u5a92\u4f53\u4f20\u8f93\n//config.pixel_format = PIXFORMAT_RGB565; // \u7528\u4e8e\u4eba\u8138\u68c0\u6d4b/\u8bc6\u522b\nconfig.grab_mode = CAMERA_GRAB_WHEN_EMPTY;\nconfig.fb_location = CAMERA_FB_IN_PSRAM;\nconfig.jpeg_quality = 12;\nconfig.fb_count = 1;\n\n// \u5982\u679c\u5b58\u5728PSRAM IC\uff0c\u5219\u521d\u59cb\u5316\u4e3aUXGA\u5206\u8fa8\u7387\u548c\u66f4\u9ad8\u7684JPEG\u8d28\u91cf\n//                      \u7528\u4e8e\u66f4\u5927\u7684\u9884\u5206\u914d\u5e27\u7f13\u51b2\u533a\u3002\nif (config.pixel_format == PIXFORMAT_JPEG) {\n  if (psramFound()) {\n    config.jpeg_quality = 10;\n    config.fb_count = 2;\n    config.grab_mode = CAMERA_GRAB_LATEST;\n  } else {\n    // \u5982\u679c\u6ca1\u6709PSRAM\uff0c\u9650\u5236\u5e27\u5927\u5c0f\n    config.frame_size = FRAMESIZE_SVGA;\n    config.fb_location = CAMERA_FB_IN_DRAM;\n  }\n} else {\n  // \u4eba\u8138\u68c0\u6d4b/\u8bc6\u522b\u7684\u6700\u4f73\u9009\u9879\n  config.frame_size = FRAMESIZE_240X240;\n#if CONFIG_IDF_TARGET_ESP32S3\n  config.fb_count = 2;\n#endif\n}\n\n#if defined(CAMERA_MODEL_ESP_EYE)\n  pinMode(13, INPUT_PULLUP);\n  pinMode(14, INPUT_PULLUP);\n#endif\n\n// \u76f8\u673a\u521d\u59cb\u5316\nesp_err_t err = esp_camera_init(&config);\nif (err != ESP_OK) {\n  Serial.printf("\u76f8\u673a\u521d\u59cb\u5316\u5931\u8d25\uff0c\u9519\u8bef\u7801 0x%x", err);\n  return;\n}\n\nsensor_t *s = esp_camera_sensor_get();\n// \u521d\u59cb\u4f20\u611f\u5668\u5782\u76f4\u7ffb\u8f6c\u4e14\u989c\u8272\u6709\u4e9b\u8fc7\u9971\u548c\nif (s->id.PID == OV3660_PID) {\n  s->set_vflip(s, 1);        // \u7ffb\u8f6c\u56de\u6765\n  s->set_brightness(s, 1);   // \u7a0d\u5fae\u8c03\u9ad8\u4eae\u5ea6\n  s->set_saturation(s, -2);  // \u964d\u4f4e\u9971\u548c\u5ea6\n}\n// \u4e3a\u4e86\u63d0\u9ad8\u521d\u59cb\u5e27\u7387\uff0c\u964d\u4f4e\u5e27\u5927\u5c0f\nif (config.pixel_format == PIXFORMAT_JPEG) {\n  s->set_framesize(s, FRAMESIZE_QVGA);\n}\n\n\n#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)\n  s->set_vflip(s, 1);\n  s->set_hmirror(s, 1);\n#endif\n#if defined(CAMERA_MODEL_ESP32S3_EYE)\n  s->set_vflip(s, 1);\n#endif\n// \u5982\u679c\u5728camera_pins.h\u4e2d\u5b9a\u4e49\u4e86LED\u5f15\u811a\uff0c\u5219\u8bbe\u7f6eLED\u95ea\u5149\u706f\n#if defined(LED_GPIO_NUM)\n  setupLedFlash(LED_GPIO_NUM);\n#endif\n\nSerial.println("\u76f8\u673a\u5df2\u5f00\u542f");\n}\n\nvoid SDCard_Function(){\n    if(!SD.begin(21)){\n      Serial.println("\u5361\u7247\u6302\u8f7d\u5931\u8d25");\n      return;\n  }\n  uint8_t cardType = SD.cardType();\n  if(cardType == CARD_NONE){\n      Serial.println("\u6ca1\u6709\u63d2\u5165SD\u5361");\n      return;\n  }\n  Serial.print("SD\u5361\u7c7b\u578b: ");\n  if(cardType == CARD_MMC){\n      Serial.println("MMC");\n  } else if(cardType == CARD_SD){\n      Serial.println("SDSC");\n  } else if(cardType == CARD_SDHC){\n      Serial.println("SDHC");\n  } else {\n      Serial.println("\u672a\u77e5");\n  }\n\n  uint64_t cardSize = SD.cardSize() / (1024 * 1024);\n  Serial.printf("SD\u5361\u5927\u5c0f: %lluMB\\n", cardSize);\n  Serial.println("SD\u5361\u5df2\u8fde\u63a5");\n}\n\nvoid Microphone_Function(){\n    // \u8bbe\u7f6e42\u53f7PDM\u65f6\u949f\u548c41\u53f7PDM\u6570\u636e\u5f15\u811a\n  I2S.setPinsPdmRx(42, 41);\n  // \u542f\u52a8I2S\uff0c\u91c7\u6837\u738716 kHz\uff0c\u6bcf\u4e2a\u6837\u672c16\u4f4d\n  if (!I2S.begin(I2S_MODE_PDM_RX, 16000, I2S_DATA_BIT_WIDTH_16BIT, I2S_SLOT_MODE_MONO)) {\n    Serial.println("I2S\u521d\u59cb\u5316\u5931\u8d25\uff01");\n    while (1); // \u4ec0\u4e48\u90fd\u4e0d\u505a\n  }\n  Serial.println("\u9ea6\u514b\u98ce\u5df2\u5f00\u542f");\n  // 5\u79d2\u540e\u505c\u6b62\u8bfb\u53d6\n  delay(500);\n}\n\nvoid wifi_enable(){\n  WiFi.mode(WIFI_STA); // \u8bbe\u7f6eWiFi\u4e3a\u5ba2\u6237\u7aef\u6a21\u5f0f\n  esp_wifi_start(); // \u542f\u7528WiFi\u5916\u8bbe\n  Serial.println("WiFi\u5df2\u5f00\u542f");\n  WiFi.begin(ssid, password);\n\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(".");\n  }\n  Serial.println("WiFi\u5df2\u8fde\u63a5");\n  Serial.println("IP\u5730\u5740\u4e3a\uff1a");\n  Serial.print(WiFi.localIP());\n}\n\nvoid Modem_Sleep_enable(){\n  // \u5173\u95edWiFi\n  WiFi.mode(WIFI_OFF);\n\n  // \u68c0\u67e5WiFi\u662f\u5426\u5173\u95ed\n  if (WiFi.getMode() == WIFI_OFF) {\n    Serial.println("WiFi\u5df2\u5173\u95ed");\n  } else {\n    Serial.println("WiFi\u4ecd\u7136\u5f00\u542f");\n  }\n}\n\nvoid close_SDCard(){\n  SD.end();\n  Serial.println("the sd card already closed");\n}\nvoid close_Camera(){\n  esp_camera_deinit();\n  Serial.println("the camera already closed");\n}\nvoid close_Microphone(){\n  I2S.end();\n  Serial.println("the microphone already closed");\n}\n\n')),(0,t.yg)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,t.yg)("h3",{id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f"},"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f"),(0,t.yg)("p",null,"\u6700\u5927\u5316\u8282\u7701\u7535\u529b\u800c\u4e0d\u5f71\u54cd\u529f\u80fd\uff0c\u4ee5\u5ef6\u957f\u8bbe\u5907\u7684\u7535\u6c60\u5bff\u547d\u3002",(0,t.yg)("br",{parentName:"p"}),"\n","\u9002\u7528\u573a\u666f\uff1a\u7535\u6c60\u5bff\u547d\u81f3\u5173\u91cd\u8981\u7684\u5e94\u7528\uff0c\u5982\u8fdc\u7a0b\u4f20\u611f\u5668\u8282\u70b9\u3001\u53ef\u7a7f\u6234\u8bbe\u5907\u548c\u5176\u4ed6\u4f4e\u529f\u8017\u7269\u8054\u7f51\u8bbe\u5907\u3002\u5c3d\u7ba1\u5524\u9192\u65f6\u95f4\u76f8\u5bf9\u8f83\u6162\uff0c\u4f46\u8fd9\u4e2a\u6743\u8861\u662f\u503c\u5f97\u7684\u3002"),(0,t.yg)("h3",{id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f"},"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f"),(0,t.yg)("p",null,"\u4f18\u5316\u65e0\u7ebf\u901a\u4fe1\u6a21\u5757\u7684\u529f\u8017\uff0c\u540c\u65f6\u4ecd\u7136\u4fdd\u6301\u7f51\u7edc\u8fde\u63a5\u3002",(0,t.yg)("br",{parentName:"p"}),"\n","\u9002\u7528\u573a\u666f\uff1a\u9700\u8981\u4fdd\u6301\u7f51\u7edc\u8fde\u63a5\u4f46\u53c8\u8981\u6c42\u4f4e\u529f\u8017\u7684\u5e94\u7528\uff0c\u5982\u95f4\u6b47\u6027\u5de5\u4f5c\u7269\u8054\u7f51\u8bbe\u5907\u3002\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u65e0\u7ebf\u6a21\u5757\u7684\u529f\u8017\uff0c\u540c\u65f6\u4ecd\u80fd\u63d0\u4f9b\u5feb\u901f\u7684\u5524\u9192\u54cd\u5e94\u3002"),(0,t.yg)("h3",{id:"\u603b\u7ed3-1"},"\u603b\u7ed3"),(0,t.yg)("p",null,"\u8fd9\u4e09\u79cd\u7761\u7720\u6a21\u5f0f\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u7535\u529b/\u6027\u80fd\u6743\u8861\u9009\u9879\uff0c\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7684\u5177\u4f53\u9700\u6c42\u7075\u6d3b\u9009\u62e9\u3002\u5bf9\u4e8e\u6709\u7535\u6c60\u5bff\u547d\u8981\u6c42\u7684\u8bbe\u5907\uff0c\u6df1\u5ea6\u7761\u7720\u6a21\u5f0f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff1b\u800c\u5bf9\u4e8e\u9700\u8981\u4fdd\u6301\u7f51\u7edc\u8fde\u63a5\u7684\u7269\u8054\u7f51\u8bbe\u5907\uff0c\u8c03\u5236\u89e3\u8c03\u5668\u7761\u7720\u6a21\u5f0f\u662f\u6700\u4f73\u9009\u62e9\u3002"),(0,t.yg)("h2",{id:"\u6280\u672f\u652f\u6301\u4e0e\u4ea7\u54c1\u8ba8\u8bba"},"\u6280\u672f\u652f\u6301\u4e0e\u4ea7\u54c1\u8ba8\u8bba"),(0,t.yg)("p",null,"\u611f\u8c22\u60a8\u9009\u62e9\u6211\u4eec\u7684\u4ea7\u54c1\uff01\u6211\u4eec\u5728\u8fd9\u91cc\u4e3a\u60a8\u63d0\u4f9b\u4e0d\u540c\u7684\u652f\u6301\uff0c\u786e\u4fdd\u60a8\u4f7f\u7528\u6211\u4eec\u7684\u4ea7\u54c1\u65f6\u4f53\u9a8c\u987a\u7545\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u591a\u79cd\u6c9f\u901a\u6e20\u9053\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u504f\u597d\u548c\u9700\u6c42\u3002"),(0,t.yg)("div",{class:"button_tech_support_container"},(0,t.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,t.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,t.yg)("div",{class:"button_tech_support_container"},(0,t.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,t.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}c.isMDXComponent=!0}}]);