"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[43114],{15680:(e,n,i)=>{i.d(n,{xA:()=>d,yg:()=>c});var t=i(96540);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function l(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?l(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function s(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)i=l[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var o=t.createContext({}),u=function(e){var n=t.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},d=function(e){var n=u(e.components);return t.createElement(o.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},_=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(i),_=r,c=p["".concat(o,".").concat(_)]||p[_]||g[_]||l;return i?t.createElement(c,a(a({ref:n},d),{},{components:i})):t.createElement(c,a({ref:n},d))}));function c(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=i.length,a=new Array(l);a[0]=_;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s[p]="string"==typeof e?e:r,a[1]=s;for(var u=2;u<l;u++)a[u]=i[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}_.displayName="MDXCreateElement"},68744:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var t=i(9668),r=(i(96540),i(15680));const l={description:"EdgeImpulse \u7b80\u4ecb\u3002",title:"Edgeimpulse",keywords:["tinyml course"],image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/cn/edgeimpulse",last_update:{date:"11/27/2024",author:"Agnes"}},a=void 0,s={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_EdgeImpulse",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_EdgeImpulse",title:"Edgeimpulse",description:"EdgeImpulse \u7b80\u4ecb\u3002",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_EdgeImpulse.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse",slug:"/cn/edgeimpulse",permalink:"/cn/edgeimpulse",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_EdgeImpulse.md",tags:[],version:"current",lastUpdatedBy:"Agnes",lastUpdatedAt:1732665600,formattedLastUpdatedAt:"Nov 27, 2024",frontMatter:{description:"EdgeImpulse \u7b80\u4ecb\u3002",title:"Edgeimpulse",keywords:["tinyml course"],image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/cn/edgeimpulse",last_update:{date:"11/27/2024",author:"Agnes"}},sidebar:"CNSidebar",previous:{title:"SD \u5361\u69fd\u4f7f\u7528\u548c\u6587\u4ef6\u7cfb\u7edf",permalink:"/cn/xiao_esp32s3_sense_filesystem"},next:{title:"\u56fe\u50cf\u5206\u7c7b",permalink:"/cn/tinyml_course_Image_classification_project"}},o={},u=[{value:"Edge Impulse",id:"edge-impulse",level:2},{value:"\u5feb\u901f\u4e0a\u624b\u4f53\u9a8c",id:"\u5feb\u901f\u4e0a\u624b\u4f53\u9a8c",level:3},{value:"\u5728 Arduino \u4e0a\u8bbe\u7f6e XIAO ESP32S3 Sense",id:"\u5728-arduino-\u4e0a\u8bbe\u7f6e-xiao-esp32s3-sense",level:3},{value:"\u7f16\u8bd1\u5e76\u4e0a\u4f20 Blink \u793a\u4f8b",id:"\u7f16\u8bd1\u5e76\u4e0a\u4f20-blink-\u793a\u4f8b",level:4},{value:"\u5f85\u529e\u4e8b\u9879",id:"\u5f85\u529e\u4e8b\u9879",level:4},{value:"\u53ef\u7528\u7684 Edge Impulse \u5e93",id:"\u53ef\u7528\u7684-edge-impulse-\u5e93",level:3},{value:"\u5982\u4f55\u4f7f\u7528 Edge Impulse Arduino \u5e93",id:"\u5982\u4f55\u4f7f\u7528-edge-impulse-arduino-\u5e93",level:3},{value:"\u8bed\u97f3\u5173\u952e\u5b57\u8bc6\u522b\uff08\u662f\u4e0e\u5426\uff09Arduino \u5e93",id:"\u8bed\u97f3\u5173\u952e\u5b57\u8bc6\u522b\u662f\u4e0e\u5426arduino-\u5e93",level:3},{value:"\u6f14\u793a",id:"\u6f14\u793a",level:4},{value:"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff01",id:"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684",level:3},{value:"\u6b65\u9aa4 1. \u4e0b\u8f7d KWS \u6f14\u793a\u5e93",id:"\u6b65\u9aa4-1-\u4e0b\u8f7d-kws-\u6f14\u793a\u5e93",level:4},{value:"\u6b65\u9aa4 2. \u5c06 ZIP \u5e93\u6dfb\u52a0\u5230 Arduino IDE",id:"\u6b65\u9aa4-2-\u5c06-zip-\u5e93\u6dfb\u52a0\u5230-arduino-ide",level:4},{value:"\u6b65\u9aa4 3. \u8fd0\u884c\u63a8\u7406\u8349\u56fe",id:"\u6b65\u9aa4-3-\u8fd0\u884c\u63a8\u7406\u8349\u56fe",level:4},{value:"\u6c34\u679c\u8bc6\u522b\uff08\u82f9\u679c\u3001\u9999\u8549\u3001\u8461\u8404\uff09Arduino \u5e93",id:"\u6c34\u679c\u8bc6\u522b\u82f9\u679c\u9999\u8549\u8461\u8404arduino-\u5e93",level:3},{value:"\u7b2c 1 \u6b65\uff1a\u4e0b\u8f7d\u6c34\u679c\u8bc6\u522b\u5e93",id:"\u7b2c-1-\u6b65\u4e0b\u8f7d\u6c34\u679c\u8bc6\u522b\u5e93",level:4},{value:"\u7b2c 2 \u6b65\uff1a\u5c06 ZIP \u5e93\u6dfb\u52a0\u5230 Arduino IDE\u3002",id:"\u7b2c-2-\u6b65\u5c06-zip-\u5e93\u6dfb\u52a0\u5230-arduino-ide",level:4},{value:"\u7b2c 3 \u6b65\uff1a\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801",id:"\u7b2c-3-\u6b65\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801",level:4},{value:"\u5c1d\u8bd5\u6f14\u793a\u3002",id:"\u5c1d\u8bd5\u6f14\u793a",level:4},{value:"\u8d44\u6e90",id:"\u8d44\u6e90",level:2}],d={toc:u},p="wrapper";function g(e){let{components:n,...i}=e;return(0,r.yg)(p,(0,t.A)({},d,i,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"edge-impulse"},"Edge Impulse"),(0,r.yg)("p",null,"Edge Impulse \u662f\u9886\u5148\u7684\u8fb9\u7f18\u8bbe\u5907\u673a\u5668\u5b66\u4e60\u5f00\u53d1\u5e73\u53f0\uff0c\u514d\u8d39\u63d0\u4f9b\u7ed9\u5f00\u53d1\u8005\uff0c\u5e76\u88ab\u5168\u7403\u4f01\u4e1a\u4fe1\u8d56\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u4f7f\u7528 Edge Impulse\uff0c\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u3001\u5de5\u7a0b\u5e08\u548c\u9886\u57df\u4e13\u5bb6\u53ef\u4ee5\u5229\u7528\u673a\u5668\u5b66\u4e60\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u89e3\u51b3\u5b9e\u9645\u95ee\u9898\uff0c\u65e0\u9700\u535a\u58eb\u5b66\u4f4d\u6216\u9ad8\u7ea7\u5d4c\u5165\u5f0f\u5de5\u7a0b\u6280\u80fd\u3002\u4ece\u5165\u95e8\u5230\u751f\u4ea7\u73af\u5883\u4e2d\u7684 MLOps\uff0cEdge Impulse \u63d0\u4f9b\u4e86\u4ece MCU \u5230 CPU \u7684\u5e7f\u6cdb\u786c\u4ef6\u4e0a\u7684\u6700\u5927\u6548\u7387\u548c\u901f\u5ea6\u3002")),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://raw.githubusercontent.com/MakerGram/workshops/main/docs/tiny-ml-workshop/img/edgeimpulse/EI_homepage.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u4f7f\u7528 Edge Impulse\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u76f4\u63a5\u4ece\u8bbe\u5907\u6536\u96c6\u6570\u636e\u96c6"),(0,r.yg)("li",{parentName:"ul"},"\u4ece\u5176\u4ed6\u6765\u6e90\uff08\u5982 .zip \u6587\u4ef6\u3001\u901a\u8fc7 API \u6216\u5176\u4ed6\u7b2c\u4e09\u65b9\u4e91\u4e0a\u4f20\uff09\u6536\u96c6\u6570\u636e\u96c6"),(0,r.yg)("li",{parentName:"ul"},"\u521b\u5efa\u6d4b\u8bd5\u548c\u8bad\u7ec3\u6570\u636e\uff0c\u5e76\u5c06\u5b83\u4eec\u5206\u7c7b\u5230\u4e0d\u540c\u7684\u6807\u7b7e\u4e2d"),(0,r.yg)("li",{parentName:"ul"},"\u8bad\u7ec3\u6211\u4eec\u7684\u6a21\u578b"),(0,r.yg)("li",{parentName:"ul"},"\u9009\u62e9\u5408\u9002\u7684\u673a\u5668\u5b66\u4e60\u7b97\u6cd5 - Edge Impulse \u6839\u636e\u6211\u4eec\u7684\u6570\u636e\u96c6\u63a8\u8350\u673a\u5668\u5b66\u4e60\u7b97\u6cd5"),(0,r.yg)("li",{parentName:"ul"},"\u5c06\u6a21\u578b\u90e8\u7f72\u5230\u6211\u4eec\u7684\u786c\u4ef6\u4e0a"),(0,r.yg)("li",{parentName:"ul"},"\u4e0e\u7248\u672c\u63a7\u5236\u7684 TinyML \u9879\u76ee\u534f\u4f5c"),(0,r.yg)("li",{parentName:"ul"},"\u8fd8\u6709\u66f4\u591a\u529f\u80fd\uff0c\u5e2e\u52a9\u60a8\u6784\u5efa TinyML \u5e94\u7528\u7a0b\u5e8f\u3002")),(0,r.yg)("h3",{id:"\u5feb\u901f\u4e0a\u624b\u4f53\u9a8c"},"\u5feb\u901f\u4e0a\u624b\u4f53\u9a8c"),(0,r.yg)("p",null,"\u5728\u8be6\u7ec6\u5b66\u4e60 Edge Impulse \u7684\u5b8c\u6574\u8fc7\u7a0b\u4e4b\u524d\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684\u9884\u751f\u6210 Arduino \u5e93\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 Arduino \u7a0b\u5e8f\u4ece\u8349\u56fe\u4e0a\u4f20\u5e76\u67e5\u770b XIAO ESP32S3 Sense \u7684\u7ed3\u679c\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://raw.githubusercontent.com/salmanfarisvp/TinyML/main/EdgeImpulse/src/img/EdegeImpulse-lib.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h3",{id:"\u5728-arduino-\u4e0a\u8bbe\u7f6e-xiao-esp32s3-sense"},"\u5728 Arduino \u4e0a\u8bbe\u7f6e XIAO ESP32S3 Sense"),(0,r.yg)("p",null,"\u5728\u4f7f\u7528 Edge Impulse \u5e93\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5728 Arduino IDE \u4e0a\u8bbe\u7f6e XIAO ESP32S3\uff0c\u8bf7\u6309\u7167 ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/xiao_esp32s3_getting_started/"},"\u6b64\u5904\u7684\u6307\u5357")," \u8fdb\u884c\u64cd\u4f5c\u3002"),(0,r.yg)("h4",{id:"\u7f16\u8bd1\u5e76\u4e0a\u4f20-blink-\u793a\u4f8b"},"\u7f16\u8bd1\u5e76\u4e0a\u4f20 Blink \u793a\u4f8b"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},"// setup \u51fd\u6570\u5728\u6309\u4e0b\u590d\u4f4d\u6216\u7ed9\u677f\u5b50\u4f9b\u7535\u65f6\u8fd0\u884c\u4e00\u6b21\nvoid setup() {\n  // \u521d\u59cb\u5316\u6570\u5b57\u5f15\u811a LED_BUILTIN \u4e3a\u8f93\u51fa\u6a21\u5f0f\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// loop \u51fd\u6570\u4f1a\u4e00\u76f4\u91cd\u590d\u8fd0\u884c\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);  // \u70b9\u4eae LED\uff08HIGH \u4e3a\u7535\u538b\u6c34\u5e73\uff09\n  delay(1000);                      // \u7b49\u5f85\u4e00\u79d2\n  digitalWrite(LED_BUILTIN, LOW);   // \u7184\u706d LED\uff08LOW \u4e3a\u7535\u538b\u6c34\u5e73\uff09\n  delay(1000);                      // \u7b49\u5f85\u4e00\u79d2\n}\n")),(0,r.yg)("p",null,"\u786e\u4fdd\u5728\u4e0a\u4f20\u4e4b\u524d\u9009\u62e9\u6b63\u786e\u7684\u677f\u5b50\u548c\u7aef\u53e3\u3002"),(0,r.yg)("h4",{id:"\u5f85\u529e\u4e8b\u9879"},"\u5f85\u529e\u4e8b\u9879"),(0,r.yg)("ul",{className:"contains-task-list"},(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u5728 Arduino IDE \u4e0a\u5b89\u88c5 XIAO ESP32S3 \u677f"),(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u7f16\u8bd1\u5e76\u4e0a\u4f20 Blink \u793a\u4f8b\u5230 XIAO ESP32S3")),(0,r.yg)("h3",{id:"\u53ef\u7528\u7684-edge-impulse-\u5e93"},"\u53ef\u7528\u7684 Edge Impulse \u5e93"),(0,r.yg)("p",null,"\u6211\u4eec\u8fd8\u5728\u5e76\u884c\u63a8\u8fdb\u5236\u4f5c\u4e00\u4e9b\u5df2\u9a8c\u8bc1\u548c\u7f16\u8f91\u8fc7\u7684 Edge Impulse \u5bfc\u51fa Arduino \u5e93\uff0c\u8fd9\u4e9b\u5e93\u53ef\u4ee5\u76f4\u63a5\u4e0e XIAO ESP32S3 Sense \u914d\u5408\u4f7f\u7528\u3002\u4f7f\u7528\u8fd9\u4e9b\u5e93\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u62e5\u6709\u66f4\u591a\u7684\u63a7\u5236\u6743\u5e76\u505a\u51fa\u51b3\u7b56\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/salmanfarisvp/TinyML/raw/main/XIAO-esp32-S3-Sense/KeyWordSpotting(KWS)/src/lib/XIAO_Esp32_KWS_inferencing.zip"},"\u8bed\u97f3\u5173\u952e\u5b57\u8bc6\u522b\uff08\u662f\u4e0e\u5426\uff09Arduino \u5e93")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/tinyml-topic/res/xiao-esp32s3-fruits-classify_inferencing.zip"},"\u6c34\u679c\u8bc6\u522b\uff08\u82f9\u679c\u3001\u9999\u8549\u3001\u8461\u8404\uff09Arduino \u5e93"))),(0,r.yg)("h3",{id:"\u5982\u4f55\u4f7f\u7528-edge-impulse-arduino-\u5e93"},"\u5982\u4f55\u4f7f\u7528 Edge Impulse Arduino \u5e93"),(0,r.yg)("p",null,"\u5b83\u5c31\u50cf\u4e00\u4e2a\u901a\u7528\u7684 Arduino \u5e93\uff0c\u6211\u4eec\u9700\u8981\u5148\u5c06\u5176\u5b89\u88c5\u5230 Arduino IDE \u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u793a\u4f8b\u4ee3\u7801\u8fd0\u884c\u6f14\u793a\u3002"),(0,r.yg)("h3",{id:"\u8bed\u97f3\u5173\u952e\u5b57\u8bc6\u522b\u662f\u4e0e\u5426arduino-\u5e93"},"\u8bed\u97f3\u5173\u952e\u5b57\u8bc6\u522b\uff08\u662f\u4e0e\u5426\uff09Arduino \u5e93"),(0,r.yg)("h4",{id:"\u6f14\u793a"},"\u6f14\u793a"),(0,r.yg)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/oa0BGRXnb8w",title:"YouTube \u89c6\u9891\u64ad\u653e\u5668",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}),(0,r.yg)("h3",{id:"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684"},"\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff01"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://raw.githubusercontent.com/salmanfarisvp/TinyML/main/XIAO-esp32-S3-Sense/KeyWordSpotting(KWS)/src/img/KWS_Diagram.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h4",{id:"\u6b65\u9aa4-1-\u4e0b\u8f7d-kws-\u6f14\u793a\u5e93"},"\u6b65\u9aa4 1. \u4e0b\u8f7d KWS \u6f14\u793a\u5e93"),(0,r.yg)("p",null,"\u4e0b\u8f7d ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/salmanfarisvp/TinyML/raw/main/XIAO-esp32-S3-Sense/KeyWordSpotting(KWS)/src/lib/XIAO_esp32S3_YesNo_inferencing.zip"},"\u8bed\u97f3\u5173\u952e\u5b57\u8bc6\u522b\uff08\u662f\u4e0e\u5426\uff09Arduino \u5e93")," \u5e93\uff08.Zip \u6587\u4ef6\uff09\u3002"),(0,r.yg)("h4",{id:"\u6b65\u9aa4-2-\u5c06-zip-\u5e93\u6dfb\u52a0\u5230-arduino-ide"},"\u6b65\u9aa4 2. \u5c06 ZIP \u5e93\u6dfb\u52a0\u5230 Arduino IDE"),(0,r.yg)("p",null,"\u7531\u4e8e\u60a8\u5df2\u4e0b\u8f7d\u4e86 ZIP \u5e93\uff0c\u6253\u5f00 Arduino IDE\uff0c\u70b9\u51fb ",(0,r.yg)("strong",{parentName:"p"},"\u8349\u56fe > \u5305\u542b\u5e93 > \u6dfb\u52a0 .ZIP \u5e93"),"\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Get_Started_With_Arduino/img/Add_Zip.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,'\u9009\u62e9\u60a8\u521a\u521a\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\uff0c\u5982\u679c\u5e93\u5b89\u88c5\u6b63\u786e\uff0c\u60a8\u5c06\u770b\u5230\u901a\u77e5\u7a97\u53e3\u663e\u793a "Library added to your libraries"\uff0c\u8fd9\u610f\u5473\u7740\u5e93\u5df2\u6210\u529f\u5b89\u88c5\u3002'),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Get_Started_With_Arduino/img/upload_complete.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h4",{id:"\u6b65\u9aa4-3-\u8fd0\u884c\u63a8\u7406\u8349\u56fe"},"\u6b65\u9aa4 3. \u8fd0\u884c\u63a8\u7406\u8349\u56fe"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/* Edge Impulse Arduino \u793a\u4f8b\n * Copyright (c) 2022 EdgeImpulse Inc.\n *\n * \u5179\u6388\u4e88\u4efb\u4f55\u83b7\u5f97\u672c\u8f6f\u4ef6\u53ca\u76f8\u5173\u6587\u6863\u6587\u4ef6\uff08"\u8f6f\u4ef6"\uff09\u526f\u672c\u7684\u4eba\uff0c\u514d\u8d39\u4f7f\u7528\u3001\u590d\u5236\u3001\u4fee\u6539\u3001\u5408\u5e76\u3001\u53d1\u5e03\u3001\u5206\u53d1\u3001\u518d\u8bb8\u53ef\u548c/\u6216\u9500\u552e\u672c\u8f6f\u4ef6\u7684\u526f\u672c\uff0c\u5e76\u5141\u8bb8\u88ab\u6388\u6743\u4eba\u6309\u7167\u4ee5\u4e0b\u6761\u4ef6\u4f7f\u7528\u672c\u8f6f\u4ef6\uff1a\n *\n * \u4e0a\u8ff0\u7248\u6743\u58f0\u660e\u548c\u672c\u8bb8\u53ef\u58f0\u660e\u5e94\u5305\u62ec\u5728\u8f6f\u4ef6\u7684\u6240\u6709\u526f\u672c\u6216\u91cd\u8981\u90e8\u5206\u4e2d\u3002\n *\n * \u672c\u8f6f\u4ef6\u6309 "\u539f\u6837" \u63d0\u4f9b\uff0c\u4e0d\u9644\u4efb\u4f55\u5f62\u5f0f\u7684\u660e\u793a\u6216\u6697\u793a\u7684\u62c5\u4fdd\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u5bf9\u9002\u9500\u6027\u3001\u7279\u5b9a\u7528\u9014\u7684\u9002\u7528\u6027\u548c\u4e0d\u4fb5\u6743\u7684\u62c5\u4fdd\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f5c\u8005\u6216\u7248\u6743\u6301\u6709\u4eba\u4e0d\u5bf9\u56e0\u4f7f\u7528\u672c\u8f6f\u4ef6\u6216\u5176\u4ed6\u76f8\u5173\u884c\u4e3a\u5f15\u8d77\u7684\u4efb\u4f55\u7d22\u8d54\u3001\u635f\u5bb3\u6216\u5176\u4ed6\u8d23\u4efb\u8d1f\u8d23\uff0c\u65e0\u8bba\u662f\u5728\u5408\u540c\u8bc9\u8bbc\u3001\u4fb5\u6743\u884c\u4e3a\u6216\u5176\u4ed6\u65b9\u9762\u3002\n *\n * \u672c\u4ee3\u7801\u7531 Marcelo Rovai \u4fee\u6539\u4ee5\u5728 XIAO ESP32S3 \u4e0a\u8fd0\u884c\n * 29May23\n * \u4fee\u6539\u8005\uff1aSalman Faris\n * 14Aug23\n */\n\n// \u5982\u679c\u60a8\u7684\u76ee\u6807\u8bbe\u5907\u5185\u5b58\u6709\u9650\uff0c\u79fb\u9664\u6b64\u5b8f\u53ef\u4ee5\u8282\u7701 10K RAM\n#define EIDSP_QUANTIZE_FILTERBANK 0\n\n/*\n ** \u6ce8\u610f\uff1a\u5982\u679c\u9047\u5230 TFLite \u5806\u6808\u5206\u914d\u95ee\u9898\u3002\n **\n ** \u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u52a8\u6001\u5185\u5b58\u788e\u7247\u5316\u3002\n ** \u5c1d\u8bd5\u5728 boards.local.txt \u4e2d\u5b9a\u4e49 "-DEI_CLASSIFIER_ALLOCATION_STATIC"\uff08\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8bf7\u521b\u5efa\uff09\n ** \u5e76\u5c06\u8be5\u6587\u4ef6\u590d\u5236\u5230\n ** `<ARDUINO_CORE_INSTALL_PATH>/arduino/hardware/<mbed_core>/<core_version>/`\u3002\n **\n ** \u8bf7\u53c2\u89c1\n ** (https://support.arduino.cc/hc/en-us/articles/360012076960-Where-are-the-installed-cores-located-)\n ** \u67e5\u627e Arduino \u5b89\u88c5\u6838\u5fc3\u7684\u4f4d\u7f6e\u3002\n **\n ** \u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf4\u660e\u8be5\u6a21\u578b\u548c\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u5185\u5b58\u4e0d\u8db3\u3002\n */\n\n/* \u5305\u542b\u5934\u6587\u4ef6 ---------------------------------------------------------------- */\n#include <XIAO_esp32S3_YesNo_inferencing.h>\n\n#include <I2S.h>\n#define SAMPLE_RATE 16000U\n#define SAMPLE_BITS 16\n\n/** \u97f3\u9891\u7f13\u51b2\u533a\u3001\u6307\u9488\u548c\u9009\u62e9\u5668 */\ntypedef struct {\n  int16_t *buffer;\n  uint8_t buf_ready;\n  uint32_t buf_count;\n  uint32_t n_samples;\n} inference_t;\n\nstatic inference_t inference;\nstatic const uint32_t sample_buffer_size = 2048;\nstatic signed short sampleBuffer[sample_buffer_size];\nstatic bool debug_nn = false;  // \u8bbe\u7f6e\u4e3a true \u53ef\u67e5\u770b\u4f8b\u5982\u4ece\u539f\u59cb\u4fe1\u53f7\u751f\u6210\u7684\u7279\u5f81\nstatic bool record_status = true;\n\n/**\n * @brief      Arduino setup \u51fd\u6570\n */\nvoid setup() {\n  // \u5728\u6b64\u5904\u653e\u7f6e\u60a8\u7684\u8bbe\u7f6e\u4ee3\u7801\uff0c\u4ec5\u8fd0\u884c\u4e00\u6b21\uff1a\n  Serial.begin(115200);\n\n  pinMode(LED_BUILTIN, OUTPUT);\n  // \u6ce8\u91ca\u6389\u4ee5\u4e0b\u4e00\u884c\u4ee5\u53d6\u6d88\u7b49\u5f85 USB \u8fde\u63a5\uff08\u539f\u751f USB \u9700\u8981\uff09\n  while (!Serial)\n    ;\n  Serial.println("Edge Impulse \u63a8\u7406\u6f14\u793a");\n\n  I2S.setAllPins(-1, 42, 41, -1, -1);\n  if (!I2S.begin(PDM_MONO_MODE, SAMPLE_RATE, SAMPLE_BITS)) {\n    Serial.println("\u521d\u59cb\u5316 I2S \u5931\u8d25\uff01");\n    while (1)\n      ;\n  }\n\n  // \u63a8\u7406\u8bbe\u7f6e\u6982\u8ff0\uff08\u6765\u81ea model_metadata.h\uff09\n  ei_printf("\u63a8\u7406\u8bbe\u7f6e\uff1a\\n");\n  ei_printf("\\t\u95f4\u9694\uff1a");\n  ei_printf_float((float)EI_CLASSIFIER_INTERVAL_MS);\n  ei_printf(" \u6beb\u79d2\u3002\\n");\n  ei_printf("\\t\u5e27\u5927\u5c0f\uff1a%d\\n", EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE);\n  ei_printf("\\t\u6837\u672c\u957f\u5ea6\uff1a%d \u6beb\u79d2\u3002\\n", EI_CLASSIFIER_RAW_SAMPLE_COUNT / 16);\n  ei_printf("\\t\u7c7b\u522b\u6570\u91cf\uff1a%d\\n", sizeof(ei_classifier_inferencing_categories) / sizeof(ei_classifier_inferencing_categories[0]));\n\n  ei_printf("\\n2\u79d2\u540e\u5f00\u59cb\u8fde\u7eed\u63a8\u7406...\\n");\n  ei_sleep(2000);\n\n  if (microphone_inference_start(EI_CLASSIFIER_RAW_SAMPLE_COUNT) == false) {\n    ei_printf("\u9519\u8bef\uff1a\u65e0\u6cd5\u5206\u914d\u97f3\u9891\u7f13\u51b2\u533a\uff08\u5927\u5c0f %d\uff09\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u6a21\u578b\u7684\u7a97\u53e3\u957f\u5ea6\u95ee\u9898\\r\\n", EI_CLASSIFIER_RAW_SAMPLE_COUNT);\n    return;\n  }\n\n  ei_printf("\u5f55\u97f3\u4e2d...\\n");\n}\n\n\n/** \n * @brief      Arduino \u4e3b\u51fd\u6570\u3002\u8fd0\u884c\u63a8\u7406\u5faa\u73af\u3002\n */\nvoid loop() {\n  bool m = microphone_inference_record();\n  if (!m) {\n    ei_printf("\u9519\u8bef\uff1a\u5f55\u97f3\u5931\u8d25...\\n");\n    return;\n  }\n\n  signal_t signal;\n  signal.total_length = EI_CLASSIFIER_RAW_SAMPLE_COUNT;\n  signal.get_data = &microphone_audio_signal_get_data;\n  ei_impulse_result_t result = { 0 };\n\n  EI_IMPULSE_ERROR r = run_classifier(&signal, &result, debug_nn);\n  if (r != EI_IMPULSE_OK) {\n    ei_printf("\u9519\u8bef\uff1a\u8fd0\u884c\u5206\u7c7b\u5668\u5931\u8d25 (%d)\\n", r);\n    return;\n  }\n\n  int pred_index = 0;    // \u521d\u59cb\u5316 pred_index\n  float pred_value = 0;  // \u521d\u59cb\u5316 pred_value\n\n  // \u6253\u5370\u9884\u6d4b\u7ed3\u679c\n  ei_printf("\u9884\u6d4b\u7ed3\u679c ");\n  ei_printf("(DSP: %d \u6beb\u79d2, \u5206\u7c7b: %d \u6beb\u79d2, \u5f02\u5e38: %d \u6beb\u79d2)",\n            result.timing.dsp, result.timing.classification, result.timing.anomaly);\n  ei_printf(": \\n");\n  for (size_t ix = 0; ix < EI_CLASSIFIER_LABEL_COUNT; ix++) {\n    ei_printf("    %s: ", result.classification[ix].label);\n    ei_printf_float(result.classification[ix].value);\n    ei_printf("\\n");\n\n    if (result.classification[ix].value > pred_value) {\n      pred_index = ix;\n      pred_value = result.classification[ix].value;\n    }\n  }\n\n    // \u663e\u793a\u63a8\u7406\u7ed3\u679c\n    if ((pred_index == 0 && (pred_value > 0.8))) {\n      digitalWrite(LED_BUILTIN, HIGH);  // \u6253\u5f00 LED\n    } else if ((pred_index == 2) && (pred_value > 0.8)) {\n      digitalWrite(LED_BUILTIN, LOW);  // \u5173\u95ed LED\n    } else {\n      // \u65e0\u64cd\u4f5c\n    }\n\n#if EI_CLASSIFIER_HAS_ANOMALY == 1\n    ei_printf("    \u5f02\u5e38\u5f97\u5206: ");\n    ei_printf_float(result.anomaly);\n    ei_printf("\\n");\n#endif\n  }\n\n  static void audio_inference_callback(uint32_t n_bytes) {\n    for (int i = 0; i < n_bytes >> 1; i++) {\n      inference.buffer[inference.buf_count++] = sampleBuffer[i];\n\n      if (inference.buf_count >= inference.n_samples) {\n        inference.buf_count = 0;\n        inference.buf_ready = 1;\n      }\n    }\n  }\n\n  static void capture_samples(void *arg) {\n\n    const int32_t i2s_bytes_to_read = (uint32_t)arg;\n    size_t bytes_read = i2s_bytes_to_read;\n\n    while (record_status) {\n\n      /* \u4ece i2s \u4e00\u6b21\u6027\u8bfb\u53d6\u6570\u636e */\n      esp_i2s::i2s_read(esp_i2s::I2S_NUM_0, (void *)sampleBuffer, i2s_bytes_to_read, &bytes_read, 100);\n\n      if (bytes_read <= 0) {\n        ei_printf("I2S \u8bfb\u53d6\u9519\u8bef\uff1a%d", bytes_read);\n      } else {\n        if (bytes_read < i2s_bytes_to_read) {\n          ei_printf("I2S \u8bfb\u53d6\u90e8\u5206\u6570\u636e");\n        }\n\n        // \u7f29\u653e\u6570\u636e\uff08\u5426\u5219\u58f0\u97f3\u592a\u5c0f\uff09\n        for (int x = 0; x < i2s_bytes_to_read / 2; x++) {\n          sampleBuffer[x] = (int16_t)(sampleBuffer[x]) * 8;\n        }\n\n        if (record_status) {\n          audio_inference_callback(i2s_bytes_to_read);\n        } else {\n          break;\n        }\n      }\n    }\n    vTaskDelete(NULL);\n  }\n\n  /**\n * @brief      \u521d\u59cb\u5316\u63a8\u7406\u7ed3\u6784\u5e76\u8bbe\u7f6e/\u542f\u52a8 PDM\n *\n * @param[in]  n_samples  \u6837\u672c\u6570\u91cf\n *\n * @return     { \u8fd4\u56de\u503c\u63cf\u8ff0 }\n */\n  static bool microphone_inference_start(uint32_t n_samples) {\n    inference.buffer = (int16_t *)malloc(n_samples * sizeof(int16_t));\n\n    if (inference.buffer == NULL) {\n      return false;\n    }\n\n    inference.buf_count = 0;\n    inference.n_samples = n_samples;\n    inference.buf_ready = 0;\n\n    //    if (i2s_init(EI_CLASSIFIER_FREQUENCY)) {\n    //        ei_printf("\u542f\u52a8 I2S \u5931\u8d25\uff01");\n    //    }\n\n    ei_sleep(100);\n\n    record_status = true;\n\n    xTaskCreate(capture_samples, "CaptureSamples", 1024 * 32, (void *)sample_buffer_size, 10, NULL);\n\n    return true;\n  }\n\n\n  /**\n * @brief      \u7b49\u5f85\u65b0\u6570\u636e\n *\n * @return     \u5b8c\u6210\u65f6\u8fd4\u56de True\n */\n  static bool microphone_inference_record(void) {\n    bool ret = true;\n\n    while (inference.buf_ready == 0) {\n      delay(10);\n    }\n\n    inference.buf_ready = 0;\n    return ret;\n  }\n\n  /**\n * \u83b7\u53d6\u539f\u59cb\u97f3\u9891\u4fe1\u53f7\u6570\u636e\n */\n  static int microphone_audio_signal_get_data(size_t offset, size_t length, float *out_ptr) {\n    numpy::int16_to_float(&inference.buffer[offset], out_ptr, length);\n\n    return 0;\n  }\n\n  /**\n * @brief      \u505c\u6b62 PDM \u5e76\u91ca\u653e\u7f13\u51b2\u533a\n */\n  static void microphone_inference_end(void) {\n    free(sampleBuffer);\n    ei_free(inference.buffer);\n  }\n\n\n#if !defined(EI_CLASSIFIER_SENSOR) || EI_CLASSIFIER_SENSOR != EI_CLASSIFIER_SENSOR_MICROPHONE\n#error "\u5f53\u524d\u4f20\u611f\u5668\u4e0d\u9002\u7528\u4e8e\u6b64\u6a21\u578b\u3002"\n#endif\n\n')),(0,r.yg)("p",null,"\u590d\u5236\u4e0a\u8ff0\u4ee3\u7801\u6216\u4ece ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/salmanfarisvp/TinyML/blob/main/XIAO-esp32-S3-Sense/KeyWordSpotting(KWS)/src/XIAO_esp32_s3_sense_kWS_Yes_No.ino"},"\u8fd9\u91cc")," \u4e0b\u8f7d\u4ee3\u7801\u5e76\u5c06\u5176\u4e0a\u4f20\u5230 XIAO\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'\n // \u6253\u5370\u9884\u6d4b\u7ed3\u679c\n  ei_printf("\u9884\u6d4b\u7ed3\u679c ");\n  ei_printf("(DSP: %d \u6beb\u79d2, \u5206\u7c7b: %d \u6beb\u79d2, \u5f02\u5e38: %d \u6beb\u79d2)",\n            result.timing.dsp, result.timing.classification, result.timing.anomaly);\n  ei_printf(": \\n");\n  for (size_t ix = 0; ix < EI_CLASSIFIER_LABEL_COUNT; ix++) {\n    ei_printf("    %s: ", result.classification[ix].label);\n    ei_printf_float(result.classification[ix].value);\n    ei_printf("\\n");\n\n    if (result.classification[ix].value > pred_value) {\n      pred_index = ix;\n      pred_value = result.classification[ix].value;\n    }\n  }\n\n    // \u663e\u793a\u63a8\u7406\u7ed3\u679c\n    if ((pred_index == 0 && (pred_value > 0.8))) {\n      digitalWrite(LED_BUILTIN, HIGH);  // \u6253\u5f00 LED\n    } else if ((pred_index == 2) && (pred_value > 0.8)) {\n      digitalWrite(LED_BUILTIN, LOW);  // \u5173\u95ed LED\n    } else {\n      // \u65e0\u64cd\u4f5c\n    }\n\n')),(0,r.yg)("p",null,"\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u4f55\u5904\u505a\u51fa\u4e86\u51b3\u5b9a\u6765 ",(0,r.yg)("strong",{parentName:"p"},"\u6253\u5f00")," \u548c ",(0,r.yg)("strong",{parentName:"p"},"\u5173\u95ed")," ",(0,r.yg)("strong",{parentName:"p"},"LED"),"\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u6b64\u5904\u6dfb\u52a0\u5176\u4ed6\u903b\u8f91\uff0c\u4f7f\u5f97 KWS \u80fd\u591f\u63a7\u5236\u6211\u4eec\u7684\u9879\u76ee\u3002"),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"\u6c34\u679c\u8bc6\u522b\u82f9\u679c\u9999\u8549\u8461\u8404arduino-\u5e93"},"\u6c34\u679c\u8bc6\u522b\uff08\u82f9\u679c\u3001\u9999\u8549\u3001\u8461\u8404\uff09Arduino \u5e93"),(0,r.yg)("h4",{id:"\u7b2c-1-\u6b65\u4e0b\u8f7d\u6c34\u679c\u8bc6\u522b\u5e93"},"\u7b2c 1 \u6b65\uff1a\u4e0b\u8f7d\u6c34\u679c\u8bc6\u522b\u5e93"),(0,r.yg)("p",null,"\u4e0b\u8f7d ",(0,r.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/tinyml-topic/res/xiao-esp32s3-fruits-classify_inferencing.zip"},"\u6c34\u679c\u8bc6\u522b\uff08\u82f9\u679c\u3001\u9999\u8549\u3001\u8461\u8404\uff09Arduino \u5e93")," \u4f5c\u4e3a .Zip \u6587\u4ef6\u3002"),(0,r.yg)("h4",{id:"\u7b2c-2-\u6b65\u5c06-zip-\u5e93\u6dfb\u52a0\u5230-arduino-ide"},"\u7b2c 2 \u6b65\uff1a\u5c06 ZIP \u5e93\u6dfb\u52a0\u5230 Arduino IDE\u3002"),(0,r.yg)("p",null,"\u4e0b\u8f7d\u4e86 ZIP \u5e93\u540e\uff0c\u6253\u5f00 Arduino IDE\uff0c\u70b9\u51fb ",(0,r.yg)("strong",{parentName:"p"},"\u8349\u56fe > \u5305\u542b\u5e93 > \u6dfb\u52a0 .ZIP \u5e93"),"\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Get_Started_With_Arduino/img/Add_Zip.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u9009\u62e9\u4f60\u521a\u521a\u4e0b\u8f7d\u7684 ZIP \u6587\u4ef6\uff0c\u5982\u679c\u5e93\u5b89\u88c5\u6b63\u786e\uff0c\u4f60\u4f1a\u5728\u63d0\u793a\u7a97\u53e3\u770b\u5230\u201c\u5e93\u5df2\u6210\u529f\u6dfb\u52a0\u5230\u4f60\u7684\u5e93\u201d\u4fe1\u606f\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Get_Started_With_Arduino/img/upload_complete.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h4",{id:"\u7b2c-3-\u6b65\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801"},"\u7b2c 3 \u6b65\uff1a\u8fd0\u884c\u793a\u4f8b\u4ee3\u7801"),(0,r.yg)("p",null,"\u4f60\u53ef\u4ee5\u5728 ",(0,r.yg)("strong",{parentName:"p"},"\u6587\u4ef6 -> \u793a\u4f8b -> xiao-esp323-fruits-classify_inferencing -> XIAO-ESP32S3-Sense")," \u4e2d\u627e\u5230\u793a\u4f8b\u4ee3\u7801\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://raw.githubusercontent.com/salmanfarisvp/TinyML/main/XIAO-esp32-S3-Sense/Image%20Recognition/src/img/fruitClassifications_Lib_path.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h4",{id:"\u5c1d\u8bd5\u6f14\u793a"},"\u5c1d\u8bd5\u6f14\u793a\u3002"),(0,r.yg)("p",null,"\u4ece ",(0,r.yg)("a",{parentName:"p",href:"https://www.kaggle.com/kritikseth/fruit-and-vegetable-image-recognition"},"\u8fd9\u91cc")," \u6253\u5f00\u6570\u636e\u96c6\u6837\u672c\u9875\u9762\uff0c\u67e5\u770b\u6c34\u679c\u56fe\u50cf\uff0c\u7136\u540e\u5c06 XIAO ESP32S3 \u6444\u50cf\u5934\u5bf9\u51c6\u6c34\u679c\u56fe\u50cf\uff0c\u67e5\u770b\u5c4f\u5e55\u4e0a\u7684\u7ed3\u679c\u3002"),(0,r.yg)("h1",{id:"\u5f85\u529e\u4e8b\u9879-1"},"\u5f85\u529e\u4e8b\u9879"),(0,r.yg)("ul",{className:"contains-task-list"},(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u5728 Arduino \u4e0a\u5b89\u88c5 XIAO ESPS3"),(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u7f16\u8bd1\u5e76\u4e0a\u4f20"),(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u5b89\u88c5 KWS Arduino \u5e93\u5e76\u8fd0\u884c\u793a\u4f8b"),(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u5b89\u88c5\u56fe\u50cf\u8bc6\u522b\u5e93\u5e76\u8fd0\u884c\u793a\u4f8b")),(0,r.yg)("h2",{id:"\u8d44\u6e90"},"\u8d44\u6e90"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[GITHUB]")," ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/edgelab-model-zoo/tree/main/detection"},"SenseCraft \u6a21\u578b\u52a9\u624b\u6a21\u578b")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[GITHUB]")," ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/Mjrovai/XIAO-ESP32S3-Sense"},"\u9879\u76ee GitHub")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[EDGE-IMPULSE]")," ",(0,r.yg)("a",{parentName:"li",href:"https://studio.edgeimpulse.com/public/270277/latest"},"Edge Impulse KWS \u6f14\u793a")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[EDGE-IMPULSE]")," ",(0,r.yg)("a",{parentName:"li",href:"https://studio.edgeimpulse.com/public/269519/latest"},"Edge Impulse \u6c34\u679c\u5206\u7c7b\u6f14\u793a"))))}g.isMDXComponent=!0}}]);