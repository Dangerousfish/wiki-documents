"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8129],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),c=a,y=d["".concat(l,".").concat(c)]||d[c]||g[c]||i;return n?r.createElement(y,o(o({ref:t},u),{},{components:n})):r.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},63233:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(9668),a=(n(96540),n(15680));const i={description:"Enhance your IoT applications with our Raspberry Pi 4G LTE and GNSS HAT module. This integrated solution delivers robust cellular connectivity and accurate real-time positioning, ideal for tracking assets, monitoring remote environments, and optimizing field operations.",title:"Getting Started with Raspberry Pi 4G HAT GNSS Functionalities",keywords:["Raspberry Pi Hat","Getting started","IIoT","GNSS","Edge Computing"],image:"https://files.seeedstudio.com/wiki/4g_hat_raspberry_pi_eg25_gl/gnss_setup.webp",slug:"/raspberry_pi_4g_hat_gnss_functionlities",last_update:{date:"12/12/2024",author:"Kasun Thushara"}},o=void 0,s={unversionedId:"Network/RaspberryPi_Devices/LTE_CAT_4_EG25_GL_4G_HAT_for_Raspberry_Pi/Applications/getting_start_with_raspberry_pi_4g_hat_and_quectel_gnss",id:"Network/RaspberryPi_Devices/LTE_CAT_4_EG25_GL_4G_HAT_for_Raspberry_Pi/Applications/getting_start_with_raspberry_pi_4g_hat_and_quectel_gnss",title:"Getting Started with Raspberry Pi 4G HAT GNSS Functionalities",description:"Enhance your IoT applications with our Raspberry Pi 4G LTE and GNSS HAT module. This integrated solution delivers robust cellular connectivity and accurate real-time positioning, ideal for tracking assets, monitoring remote environments, and optimizing field operations.",source:"@site/docs/Network/RaspberryPi_Devices/LTE_CAT_4_EG25_GL_4G_HAT_for_Raspberry_Pi/Applications/getting_start_with_raspberry_pi_4g_hat_and_quectel_gnss.md",sourceDirName:"Network/RaspberryPi_Devices/LTE_CAT_4_EG25_GL_4G_HAT_for_Raspberry_Pi/Applications",slug:"/raspberry_pi_4g_hat_gnss_functionlities",permalink:"/raspberry_pi_4g_hat_gnss_functionlities",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Network/RaspberryPi_Devices/LTE_CAT_4_EG25_GL_4G_HAT_for_Raspberry_Pi/Applications/getting_start_with_raspberry_pi_4g_hat_and_quectel_gnss.md",tags:[],version:"current",lastUpdatedBy:"Kasun Thushara",lastUpdatedAt:1733961600,formattedLastUpdatedAt:"Dec 12, 2024",frontMatter:{description:"Enhance your IoT applications with our Raspberry Pi 4G LTE and GNSS HAT module. This integrated solution delivers robust cellular connectivity and accurate real-time positioning, ideal for tracking assets, monitoring remote environments, and optimizing field operations.",title:"Getting Started with Raspberry Pi 4G HAT GNSS Functionalities",keywords:["Raspberry Pi Hat","Getting started","IIoT","GNSS","Edge Computing"],image:"https://files.seeedstudio.com/wiki/4g_hat_raspberry_pi_eg25_gl/gnss_setup.webp",slug:"/raspberry_pi_4g_hat_gnss_functionlities",last_update:{date:"12/12/2024",author:"Kasun Thushara"}},sidebar:"ProductSidebar",previous:{title:"Sending and Receiving SMS Messages with Quectel 4G Raspberry pi Hat",permalink:"/send_receive_sms_raspberry_pi_4g_lte_hat"},next:{title:"Mobile Internet for Your Pi - RNDIS 4G LTE Setup",permalink:"/raspberry_pi_4g_hat_rndis_mobile_internet"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Hardaware Preperation",id:"hardaware-preperation",level:2},{value:"Hardware preparation",id:"hardware-preparation",level:2},{value:"The Setup",id:"the-setup",level:2},{value:"Using GNSS with Raspberry Pi 4G LTE Hat or Windows Qcom Tool",id:"using-gnss-with-raspberry-pi-4g-lte-hat-or-windows-qcom-tool",level:2},{value:"Step 1: Turn on GNSS",id:"step-1-turn-on-gnss",level:3},{value:"Step 2: Obtain Positioning Information",id:"step-2-obtain-positioning-information",level:3},{value:"Step 3: Turn off GNSS",id:"step-3-turn-off-gnss",level:3},{value:"Python Code Implementation",id:"python-code-implementation",level:2},{value:"Step 1. Prepare the Directory and Virtual Environment",id:"step-1-prepare-the-directory-and-virtual-environment",level:3},{value:"Step 2. Prepare the Python Script",id:"step-2-prepare-the-python-script",level:3},{value:"Step 3. Run the Script",id:"step-3-run-the-script",level:3},{value:"Resources",id:"resources",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],u={toc:p},d="wrapper";function g(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"introduction"},"Introduction"),(0,a.yg)("p",null,"The integration of GNSS into the 4G LTE module enhances its capabilities, enabling precise real-time positioning and reliable communication for IoT applications. With support for multi-constellation GNSS systems, the module delivers accurate and dependable location tracking, even in remote or underserved areas. These features make it ideal for scenarios like asset tracking, fleet management, and real-time remote monitoring.\nPaired with 4G LTE connectivity, this solution ensures seamless data transmission to cloud or control systems, enabling efficient management of critical use cases such as wildlife conservation, agriculture automation, and emergency response. This combination offers a scalable and cost-effective approach to location-based automation, suitable for industries requiring mobility and accessibility."),(0,a.yg)("h2",{id:"hardaware-preperation"},"Hardaware Preperation"),(0,a.yg)("p",null,"You need to connect your GNSS antenna. Furthermore, we will use a Python API to obtain the exact location in a human-readable and understandable format. Additionally, a 4G antenna should be installed."),(0,a.yg)("h2",{id:"hardware-preparation"},"Hardware preparation"),(0,a.yg)("div",{class:"table-center"},(0,a.yg)("table",{align:"center"},(0,a.yg)("tr",null,(0,a.yg)("th",null,"Raspberry Pi 5"),(0,a.yg)("th",null,"GPS Antenna"),(0,a.yg)("th",null,"Raspberry Pi 4G LTE CAT4 HAT")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/-/1-102110919-raspberry-pi-5-8gb-45font.jpg",style:{width:250,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/-/1-110061521-gps-antenna-kit-for-reterminal-dm-4g-module-45font.jpg",style:{width:250,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/_/1_23_1.jpg",style:{width:250,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Raspberry-Pi-5-8GB-p-5810.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/GPS-Antenna-Kit-for-reTerminal-DM-4G-Module-p-5774.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/LTE-CAT-4-EG25-GL-HAT-for-Raspberry-Pi-p-6325.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))))))),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"If the necessary drivers for communicating with AT commands are not installed, you will need to ",(0,a.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/getting_started_raspberry_pi_4g_lte_hat/#software-preparation"},"install them"))),(0,a.yg)("h2",{id:"the-setup"},"The Setup"),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/4g_hat_raspberry_pi_eg25_gl/gnss_setup.png",style:{width:800}})),(0,a.yg)("h2",{id:"using-gnss-with-raspberry-pi-4g-lte-hat-or-windows-qcom-tool"},"Using GNSS with Raspberry Pi 4G LTE Hat or Windows Qcom Tool"),(0,a.yg)("h3",{id:"step-1-turn-on-gnss"},"Step 1: Turn on GNSS"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Open Minicom on Raspberry Pi or Qcom Tool on Windows via USB.")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"sudo minicom -D /dev/ttyUSB2 #for minicom on raspberry\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Enter the following command to activate GNSS:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"AT+QGPS=1\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Expected Response"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"OK\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This turns on the GNSS functionality."),(0,a.yg)("li",{parentName:"ul"},'After activation, NMEA sentences will be output from the "usbnmea" port by default.')),(0,a.yg)("h3",{id:"step-2-obtain-positioning-information"},"Step 2: Obtain Positioning Information"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"To retrieve the GNSS coordinates and other information, enter:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"AT+QGPSLOC=0\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Example Response"),":"),(0,a.yg)("p",null,"+QGPSLOC: 063416.400,3143.2951N,11713.0655E,0.6,224.9,2,162.57,17.6,9.5,110620,07 OK"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Explanation of the Response"),":",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"063416.400: UTC Time (HHMMSS.SSS format)"),(0,a.yg)("li",{parentName:"ul"},"3143.2951N: Latitude (31\xb043.2951'N)"),(0,a.yg)("li",{parentName:"ul"},"11713.0655E: Longitude (117\xb013.0655'E)"),(0,a.yg)("li",{parentName:"ul"},"0.6: Horizontal Dilution of Precision (HDOP)"),(0,a.yg)("li",{parentName:"ul"},"224.9: Altitude in meters"),(0,a.yg)("li",{parentName:"ul"},"2: Position fix type (2 = 2D fix, 3 = 3D fix)"),(0,a.yg)("li",{parentName:"ul"},"Other parameters provide detailed GNSS data.")))),(0,a.yg)("h3",{id:"step-3-turn-off-gnss"},"Step 3: Turn off GNSS"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"After retrieving the required data, deactivate GNSS to save power by entering:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"AT+QGPSEND\n")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Expected Response")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"OK\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"This command shuts down the GNSS module, conserving resources.")),(0,a.yg)("h2",{id:"python-code-implementation"},"Python Code Implementation"),(0,a.yg)("h3",{id:"step-1-prepare-the-directory-and-virtual-environment"},"Step 1. Prepare the Directory and Virtual Environment"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Open a terminal on your Raspberry Pi."),(0,a.yg)("li",{parentName:"ul"},"Create a new project folder and navigate into it:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"mkdir GNSS_EX\ncd GNSS_EX\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Set up a Python virtual environment:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python3 -m venv --system-site-packages env\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Activate the virtual environment:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"source env/bin/activate\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Install the required libraries:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"pip install pyserial geopy\n")),(0,a.yg)("h3",{id:"step-2-prepare-the-python-script"},"Step 2. Prepare the Python Script"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Open the ",(0,a.yg)("strong",{parentName:"p"},"Thonny Python IDE")," (pre-installed on Raspberry Pi).")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Create a new file in Thonny and paste the provided code into the editor.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},"Update the usb_port parameter to match your Raspberry Pi's serial port for the 4G HAT. Typically, it might be ",(0,a.yg)("inlineCode",{parentName:"p"},"/dev/ttyUSB2")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"/dev/ttyUSB3"),". Example:"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'usb_port = "/dev/ttyUSB2"\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Save the file as test_gnss.py in the ",(0,a.yg)("strong",{parentName:"li"},"GNSS_EX")," folder.")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},'\nimport serial\nimport time\nfrom geopy.geocoders import Nominatim\n\n\ndef send_at_command(serial_port, command, delay=1):\n    """Send an AT command and read the response."""\n    serial_port.write((command + \'\\r\\n\').encode())\n    time.sleep(delay)\n    response = serial_port.read_all().decode()\n    print(f"Command: {command}\\nResponse: {response}")\n    return response\n\n\ndef parse_coordinates(response):\n    """Parse coordinates from AT+QGPSLOC response."""\n    if "+QGPSLOC:" in response:\n        try:\n            data = response.split(":")[1].strip().split(",")\n            # Extract raw coordinates (with N/S/E/W)\n            latitude_raw, longitude_raw = data[1], data[2]\n\n            # Correct parsing by removing N/S/E/W at the end\n            latitude = convert_to_decimal(latitude_raw[:-1], \'N\' in latitude_raw)\n            longitude = convert_to_decimal(longitude_raw[:-1], \'E\' in longitude_raw)\n\n            print(f"Latitude: {latitude}, Longitude: {longitude}")\n            return latitude, longitude\n        except (IndexError, ValueError) as e:\n            print(f"Error parsing coordinates: {e}")\n            return None, None\n    return None, None\n\n\ndef convert_to_decimal(coord, positive=True):\n    """Convert NMEA-style coordinate to decimal format."""\n    # Split the coordinate into degrees and minutes\n    degrees = int(float(coord) // 100)\n    minutes = float(coord) % 100\n    decimal = degrees + (minutes / 60)\n\n    # If it\'s in the Southern or Western hemisphere, make it negative\n    return decimal if positive else -decimal\n\n\ndef get_location(lat, lon):\n    """Get a human-readable location using geopy."""\n    geolocator = Nominatim(user_agent="gnss_locator")\n    try:\n        location = geolocator.reverse((lat, lon), exactly_one=True)\n        return location.address if location else "Location not found"\n    except Exception as e:\n        print(f"Geocoding error: {e}")\n        return "Error retrieving location"\n\n\ndef automate_gnss(port, baudrate=9600):\n    """Automate GNSS commands and fetch location."""\n    try:\n        with serial.Serial(port, baudrate, timeout=1) as ser:\n            print("Serial port connected.")\n\n            # Turn on GNSS\n            send_at_command(ser, "AT+QGPS=1", delay=2)\n\n            # Get positioning information\n            response = send_at_command(ser, "AT+QGPSLOC=0", delay=2)\n            latitude, longitude = parse_coordinates(response)\n\n            if latitude and longitude:\n                print(f"Coordinates: Latitude = {latitude}, Longitude = {longitude}")\n                location = get_location(latitude, longitude)\n                print(f"Location: {location}")\n            else:\n                print("Unable to retrieve coordinates.")\n\n            # Turn off GNSS\n            send_at_command(ser, "AT+QGPSEND", delay=2)\n            print("GNSS process completed.")\n\n    except serial.SerialException as e:\n        print(f"Error: {e}")\n\n\n# Set your USB port (e.g., \'/dev/ttyUSB0\' or \'COM3\' on Windows)\nusb_port = "/dev/ttyUSB2"  # Update based on your system\nautomate_gnss(usb_port)\n\n\n')),(0,a.yg)("h3",{id:"step-3-run-the-script"},"Step 3. Run the Script"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Open a terminal, ensure you're in the project directory:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cd GNSS_EX\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Activate the virtual environment:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"source env/bin/activate\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Run the script using Python:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"python test_gnss.py\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The output ")),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/4g_hat_raspberry_pi_eg25_gl/gnss_output.PNG",style:{width:800}})),(0,a.yg)("h2",{id:"resources"},"Resources"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"[Web Page]")," ",(0,a.yg)("a",{parentName:"p",href:"https://www.quectel.com/product/lte-eg25-g/"},"LTE EG25-G"))),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"[Web Page]")," ",(0,a.yg)("a",{parentName:"p",href:"https://www.quectel.com/download/quectel_ec2xeg9xeg2x-gem05_series_gnss_application_note_v1-4/"},"GNSS AT Commands Manual V1.4")))),(0,a.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,a.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,a.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,a.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}g.isMDXComponent=!0}}]);