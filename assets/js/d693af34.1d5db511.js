"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[16229],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>h});var a=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},g=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,g=r(e,["components","mdxType","originalType","parentName"]),p=u(n),c=i,h=p["".concat(s,".").concat(c)]||p[c]||d[c]||o;return n?a.createElement(h,l(l({ref:t},g),{},{components:n})):a.createElement(h,l({ref:t},g))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[p]="string"==typeof e?e:i,l[1]=r;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>l});var a=n(96540),i=n(20053);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.A)(o.tabItem,l),hidden:n},t)}},11470:(e,t,n)=>{n.d(t,{A:()=>P});var a=n(9668),i=n(96540),o=n(20053),l=n(23104),r=n(56347),s=n(57485),u=n(31682),g=n(89466);function p(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.W6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(o),(0,i.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[l,r]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=h({queryString:n,groupId:a}),[p,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,g.Dv)(n);return[a,(0,i.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),y=(()=>{const e=s??p;return c({value:e,tabValues:o})?e:null})();(0,i.useLayoutEffect)((()=>{y&&r(y)}),[y]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);r(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var y=n(92303);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:r,selectValue:s,tabValues:u}=e;const g=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.a_)(),d=e=>{const t=e.currentTarget,n=g.indexOf(t),a=u[n].value;a!==r&&(p(t),s(a))},c=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=g.indexOf(e.currentTarget)+1;t=g[n]??g[0];break}case"ArrowLeft":{const n=g.indexOf(e.currentTarget)-1;t=g[n]??g[g.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.A)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>g.push(e),onKeyDown:c,onClick:d},l,{className:(0,o.A)("tabs__item",w.tabItem,l?.className,{"tabs__item--active":r===t})}),n??t)})))}function N(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function f(e){const t=m(e);return i.createElement("div",{className:(0,o.A)("tabs-container",w.tabList)},i.createElement(v,(0,a.A)({},e,t)),i.createElement(N,(0,a.A)({},e,t)))}function P(e){const t=(0,y.A)();return i.createElement(f,(0,a.A)({key:String(t)},e))}},37475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>u,toc:()=>p});var a=n(9668),i=(n(96540),n(15680)),o=n(11470),l=n(19365);const r={description:"Hardware and Interfaces Usage for reComputer Industrial J30 Series and J40 Series",title:"reComputer Industrial J40, J30 Hardware and Interfaces Usage",tags:["reComputer Industrial"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage",last_update:{date:"05/16/2023",author:"Lakshantha"}},s=void 0,u={unversionedId:"Edge/NVIDIA_Jetson/reComputer_Jetson_Series/reComputer_Industrial/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage",id:"Edge/NVIDIA_Jetson/reComputer_Jetson_Series/reComputer_Industrial/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage",title:"reComputer Industrial J40, J30 Hardware and Interfaces Usage",description:"Hardware and Interfaces Usage for reComputer Industrial J30 Series and J40 Series",source:"@site/docs/Edge/NVIDIA_Jetson/reComputer_Jetson_Series/reComputer_Industrial/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage.md",sourceDirName:"Edge/NVIDIA_Jetson/reComputer_Jetson_Series/reComputer_Industrial",slug:"/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage",permalink:"/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Edge/NVIDIA_Jetson/reComputer_Jetson_Series/reComputer_Industrial/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage.md",tags:[{label:"reComputer Industrial",permalink:"/tags/re-computer-industrial"}],version:"current",lastUpdatedBy:"Lakshantha",lastUpdatedAt:1684195200,formattedLastUpdatedAt:"May 16, 2023",frontMatter:{description:"Hardware and Interfaces Usage for reComputer Industrial J30 Series and J40 Series",title:"reComputer Industrial J40, J30 Hardware and Interfaces Usage",tags:["reComputer Industrial"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/reComputer_Industrial_J40_J30_Hardware_Interfaces_Usage",last_update:{date:"05/16/2023",author:"Lakshantha"}},sidebar:"ProductSidebar",previous:{title:"reComputer Industrial J20 Hardware and Interfaces Usage",permalink:"/reComputer_Industrial_J20_Hardware_Interfaces_Usage"},next:{title:"Getting Started with reComputer Mini",permalink:"/recomputer_jetson_mini_getting_started"}},g={},p=[{value:"CSI Cameras",id:"csi-cameras",level:2},{value:"Connection Overview",id:"connection-overview",level:3},{value:"Usage",id:"usage",level:3},{value:"RTC",id:"rtc",level:2},{value:"Connection Overview",id:"connection-overview-1",level:3},{value:"Usage",id:"usage-1",level:3},{value:"M.2 Key M",id:"m2-key-m",level:2},{value:"Connection Overview",id:"connection-overview-2",level:3},{value:"Usage",id:"usage-2",level:3},{value:"mini PCIe",id:"mini-pcie",level:2},{value:"4G Module Connection Overview",id:"4g-module-connection-overview",level:3},{value:"4G Module Usage - Test Dialing",id:"4g-module-usage---test-dialing",level:3},{value:"4G Module Usage - Connect to Internet",id:"4g-module-usage---connect-to-internet",level:3},{value:"EC25 module",id:"ec25-module",level:4},{value:"EC20 module",id:"ec20-module",level:4},{value:"LoRa Module Connection Overview",id:"lora-module-connection-overview",level:3},{value:"LoRa Module Usage - Testing LoRa RF",id:"lora-module-usage---testing-lora-rf",level:3},{value:"LoRa Module Usage - Connect to TTN",id:"lora-module-usage---connect-to-ttn",level:3},{value:"M.2 Key B",id:"m2-key-b",level:2},{value:"5G Module Connection Overview",id:"5g-module-connection-overview",level:3},{value:"5G Module Usage - Test Dialing",id:"5g-module-usage---test-dialing",level:3},{value:"DI/ DO",id:"di-do",level:2},{value:"DI/ DO Pin Assignment Table",id:"di-do-pin-assignment-table",level:3},{value:"Connection Overview for DI",id:"connection-overview-for-di",level:3},{value:"Usage for DI",id:"usage-for-di",level:3},{value:"Connection Overview for DO",id:"connection-overview-for-do",level:3},{value:"Usage for DO",id:"usage-for-do",level:3},{value:"CAN",id:"can",level:2},{value:"Connection Overview with USB to CAN Adapter",id:"connection-overview-with-usb-to-can-adapter",level:3},{value:"Usage with USB to CAN Adapter",id:"usage-with-usb-to-can-adapter",level:3},{value:"Connection Overview with reTerminal DM",id:"connection-overview-with-reterminal-dm",level:3},{value:"Usage with reTerminal DM",id:"usage-with-reterminal-dm",level:3},{value:"RS232/ RS422/ RS485 interfaces",id:"rs232-rs422-rs485-interfaces",level:2},{value:"General Connection Overview",id:"general-connection-overview",level:3},{value:"RS232 Connection Overview",id:"rs232-connection-overview",level:3},{value:"RS232 Usage",id:"rs232-usage",level:3},{value:"RS422 Connection Overview",id:"rs422-connection-overview",level:3},{value:"RS422 Usage",id:"rs422-usage",level:3},{value:"RS485 Connection Overview",id:"rs485-connection-overview",level:3},{value:"RS485 Usage",id:"rs485-usage",level:3},{value:"Gigabit Ethernet Connectors",id:"gigabit-ethernet-connectors",level:2},{value:"USB",id:"usb",level:2},{value:"Usage",id:"usage-3",level:3},{value:"Configurable LED",id:"configurable-led",level:2},{value:"Usage",id:"usage-4",level:3},{value:"Monitor System Performance",id:"monitor-system-performance",level:2},{value:"WiFi and Bluetooth",id:"wifi-and-bluetooth",level:2},{value:"Connection Overview",id:"connection-overview-3",level:3},{value:"Usage",id:"usage-5",level:3},{value:"TPM",id:"tpm",level:2},{value:"Connection Overview",id:"connection-overview-4",level:3},{value:"Usage",id:"usage-6",level:3},{value:"Max Performance on reComputer Industrial",id:"max-performance-on-recomputer-industrial",level:2},{value:"GPIO Table",id:"gpio-table",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],d={toc:p},c="wrapper";function h(e){let{components:t,...n}=e;return(0,i.yg)(c,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"This wiki introduces the various different hardware and interfaces on the reComputer Industrial J4012, J4011, J3011, J3010 and how to use them to expand your project ideas."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/2.png"})),(0,i.yg)("h2",{id:"csi-cameras"},"CSI Cameras"),(0,i.yg)("p",null,"reComputer Industrial is equipped with ",(0,i.yg)("strong",{parentName:"p"},"2x 2-lane 15pin MIPI CSI camera connectors")," and the below cameras are supported"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"IMX219 cameras"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Raspberry-Pi-Camera-Module-V2.html"},"Raspberry Pi Camera V2")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-77-Camera-77-FOV-Applicable-for-Jetson-Nano-p-4608.html"},"IMX219-77 8MP Camera with 77\xb0 FOV")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX-219-CMOS-camera-module-M12-and-CS-camera-available-p-5372.html"},"IMX219 M12/CS mount CMOS Camera Module")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-83-Stereo-Camera-8MP-Binocular-Camera-Module-Depth-Vision-Applicable-for-Jetson-Nano-p-4610.html"},"IMX219-83 8MP 3D Stereo Camera Module")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-77IR-Camera-77-FOV-Infrared-Applicable-for-Jetson-Nano-p-4607.html"},"IMX219-77IR 8MP IR Night Vision Camera with 77\xb0 FOV")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX-219-CMOS-camera-module-M12-and-CS-camera-available-p-5372.html"},"IMX219 M12/CS mount CMOS Camera Module")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"IMX477 cameras"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Raspberry-Pi-High-Quality-Cam-p-4463.html"},"Raspberry Pi High Quality Camera")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Raspberry-Pi-HQ-Camera-M12-mount-p-5578.html"},"Raspberry Pi HQ Camera - M12 mount")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/High-Quality-Camera-For-Raspberry-Pi-Compute-Module-Jetson-Nano-p-4729.html"},"High Quality Camera for Raspberry Pi"))))),(0,i.yg)("h3",{id:"connection-overview"},"Connection Overview"),(0,i.yg)("p",null,"Here the 2 CSI camera connectors are marked as ",(0,i.yg)("strong",{parentName:"p"},"CAM0 and CAM1"),". You can either connect one camera to any connector out of the 2 or connect 2 cameras to both the connectors at the same time."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Gently pull out the black color lock on the CSI connector"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"200",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/5.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Insert the 15-pin ribbon cable into the connector making sure the gold fingers are facing downwards"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/6.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Push in the black color lock to lock the ribbon cable in place"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/10.png"})),(0,i.yg)("h3",{id:"usage"},"Usage"),(0,i.yg)("p",null,"First you need to configure the board to load the appropriate driver for the specific camera that you will be using. For this JetPack system has an in-built tool to support IMX219 an IMX477 cameras."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Open the terminal and execute the following"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo /opt/nvidia/jetson-io/jetson-io.py\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Configure Jetson Nano CSI Connector")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/119.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Configure for compatible hardware")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/120.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Select the camera that you want to use"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/121.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Save pin changes")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/122.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Save and reboot to reconfigure pins")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/123.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 7:")," Press any key on the keyboard and the device will reboot with the applied camera configuration"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/124.jpg"})),(0,i.yg)("p",null,"You can use CSI cameras in 2 different methods. Follow the below commands according to the camera connector."),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Method 1",label:"Method 1",mdxType:"TabItem"},(0,i.yg)("p",null,"For CAM0 port"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"nvgstcapture-1.0 sensor-id=0 \n")),(0,i.yg)("p",null,"For CAM1 port"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"nvgstcapture-1.0 sensor-id=1  \n")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"If you want to change further settings of the camera, you can type ",(0,i.yg)("strong",{parentName:"p"},'"nvgstcapture-1.0 --help"')," to access all the configurable options available"))),(0,i.yg)(l.A,{value:"Method 2",label:"Method 2",mdxType:"TabItem"},(0,i.yg)("p",null,"For CAM0 port"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"gst-launch-1.0 nvarguscamerasrc sensor-id=0 sensor-mode=0 ! 'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=20/1, format=NV12' ! nvvidconv ! xvimagesink\n")),(0,i.yg)("p",null,"For CAM1 port"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"gst-launch-1.0 nvarguscamerasrc sensor-id=1 sensor-mode=0 ! 'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=20/1, format=NV12' ! nvvidconv ! xvimagesink\n")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"If you want to change further settings of the camera, you can update the arguments such as ",(0,i.yg)("strong",{parentName:"p"},"width, height, framerate, format"),", etc.")))),(0,i.yg)("h2",{id:"rtc"},"RTC"),(0,i.yg)("p",null,"reComputer Industrial is equipped with 2 different ways to connect to an RTC battery"),(0,i.yg)("h3",{id:"connection-overview-1"},"Connection Overview"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Method 1:")),(0,i.yg)("p",null,"Connect a ",(0,i.yg)("strong",{parentName:"p"},"3V CR1220 coin cell battery")," to the RTC socket on the board as shown below. Make sure the ",(0,i.yg)("strong",{parentName:"p"},"positive (+)")," end of the battery is facing upwards"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/11.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Method 2:")),(0,i.yg)("p",null,"Connect a ",(0,i.yg)("strong",{parentName:"p"},"3V CR2302 coin cell battery with JST connector")," to the 2-pin 1.25mm JST socket on the board as shown below"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"450",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/12.jpg"})),(0,i.yg)("h3",{id:"usage-1"},"Usage"),(0,i.yg)("admonition",{type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"Please note that if your reComputer device has already been updated to JetPack 6 or later, the RTC will function normally without any additional configuration. If you are using JetPack 5, you will need to refer to the following content to configure the clock synchronization service.")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Connect an RTC battery as mentioned above"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Turn on reComputer Industrial"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," On the Ubuntu Desktop, click the drop-down menu at the top right corner, navigate to ",(0,i.yg)("inlineCode",{parentName:"p"},"Settings > Date & Time"),", connect to a network via an Ethernet cable and select ",(0,i.yg)("strong",{parentName:"p"},"Automatic Date & Time")," to obtain the date/ time automatically"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/13.png"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"If you have not connected to internet via Ethernet, you can manually set the date/ time here")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Open a terminal window, and execute the below command to check the hardware clock time "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo hwclock\n")),(0,i.yg)("p",null,"You will see the output something like below which is not the correct date/ time"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/14.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Change the hardware clock time to the current system clock time by entering the below command"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo hwclock --systohc\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," Remove any Ethernet cables connected to make sure it will not grab the time from the internet and reboot the board "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo reboot\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 7:")," Check hardware clock time to verify that the date/ time stays the same eventhough the device was powered off "),(0,i.yg)("p",null,"Now we will create a script to always sync the system clock from the hardware clock in each boot."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 8:")," Create a new shell script using any text editor of your preference. Here we use ",(0,i.yg)("strong",{parentName:"p"},"vi")," text editor"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo vi /usr/bin/hwtosys.sh \n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 9:")," Enter ",(0,i.yg)("strong",{parentName:"p"},"insert mode")," by pressing ",(0,i.yg)("strong",{parentName:"p"},"i"),", copy and paste the following content inside the file"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"#!/bin/bash\n\nsudo hwclock --hctosys\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 10:")," Make the script executable"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo chmod +x /usr/bin/hwtosys.sh \n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 11:")," Create a systemd file"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo nano /lib/systemd/system/hwtosys.service \n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 12:")," Add the following inside the file "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"[Unit]\nDescription=Change system clock from hardware clock\n\n[Service]\nExecStart=/usr/bin/hwtosys.sh\n\n[Install]\nWantedBy=multi-user.target\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 13:")," Reload systemctl daemon"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl daemon-reload \n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 14:")," Enable the newly created service to start on boot and start the service"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl enable hwtosys.service\nsudo systemctl start hwtosys.service\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 15:")," Verify the script is up and running as a systemd service"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl status hwtosys.service\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 16:")," Reboot the board and you will the system clock is now in sync with the hardware clock "),(0,i.yg)("h2",{id:"m2-key-m"},"M.2 Key M"),(0,i.yg)("p",null,"Out of the box, reComputer Industrial includes a 128GB SSD connected to the M.2 Key M slot, which is pre-installed with JetPack system."),(0,i.yg)("h3",{id:"connection-overview-2"},"Connection Overview"),(0,i.yg)("p",null,"If you want to remove the included SSD and install a new one, you can follow the steps below. Here we only recommend to use Seeed SSDs with ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/M-2-2280-SSD-128GB-p-5332.html"},"128GB"),", ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-256GB-p-5333.html"},"256GB")," and ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-512GB-p-5334.html"},"512GB")," storage because we have only tested those SSDs. Further this interface supports PCIe Gen4.0 SSDs."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Remove the pre-installed SSD screw")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/15.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Remove the SSD by sliding away from the SSD connector")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/16.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Insert a new SSD and tighten back the screw")),(0,i.yg)("h3",{id:"usage-2"},"Usage"),(0,i.yg)("p",null,"We will explain how to do a simple benchmark on the connected SSD "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Check the write speed by executing the below command")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo dd if=/dev/zero of=/home/nvidia/test bs=1M count=512 conv=fdatasync\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Check the read speed by executing the below commands. Make sure to execute this after executing the above command for write speed.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'sudo sh -c "sync && echo 3 > /proc/sys/vm/drop_caches"\nsudo dd if=/home/nvidia/test of=/dev/null bs=1M count=512\n')),(0,i.yg)("h2",{id:"mini-pcie"},"mini PCIe"),(0,i.yg)("p",null,"reComputer Industrial comes with a mini PCIe connector that supports 4G and LoRa modules. However, you can only connect either a 4G module or a LoRa module at once. "),(0,i.yg)("h3",{id:"4g-module-connection-overview"},"4G Module Connection Overview"),(0,i.yg)("p",null,"Currently this board supports EC25EUXGA and EC20CEHCLG modules."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Power off the board if it is already on")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Remove the included standoff. This standoff is only needed if you are using the M.2 Key B interface"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/110.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Slide in the 4G module to the mini PCIe slot, use the pre-installed screws and screw them to the 2 holes to secure the 4G module in place")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/17.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Connect an antenna to the the antenna connector labelled as ",(0,i.yg)("strong",{parentName:"li"},"MAIN"),". Here you need to use an IPEX connector")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/18.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5:")," Insert a 4G-enabled nano SIM card to the SIM card slot on the board making sure the gold surface of the SIM card is facing down. Here insert the card all the way in so that it will bounce back after hitting the internal spring and lock in place.")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/19.png"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"If you want to remove the SIM card, push the card in to hit the internal spring so that the SIM will come out of the slot")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6:")," Add a jumper between ",(0,i.yg)("strong",{parentName:"li"},"SIM_MUX_SEL")," and ",(0,i.yg)("strong",{parentName:"li"},"GND")," pins on the ",(0,i.yg)("strong",{parentName:"li"},"J8 (Control and UART) Header"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/20.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6:")," Power on the board")),(0,i.yg)("h3",{id:"4g-module-usage---test-dialing"},"4G Module Usage - Test Dialing"),(0,i.yg)("p",null,"When using the EC25 module, the module will automatically start and will be ready to use. However, when using the EC20 module, you need to reset the module for it to work"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," If you are using EC25 module, you can skip this step. However if you are using EC20 module, enter the following commands to access GPIO309 pin which is responsible to reset the 4G module."),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo su \ncd /sys/class/gpio\necho 309 > export \ncd gpio309\necho out > direction\necho 1 > value\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo gpioset --mode=wait gpiochip2 9=1\n")))),(0,i.yg)("p",null,"For EC25 module, LED2 will light up in green as soon as the board is booted up. For EC20 module, LED2 will light up in green after resetting the module as explained above"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/118.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Install minicom"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo apt update\nsudo apt install minicom -y\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Enter the serial console of the connected 4G module so that we can enter AT commands and interact with the 4G module"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo minicom -D /dev/ttyUSB2 -b 115200\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Press ",(0,i.yg)("strong",{parentName:"p"},"Ctrl+A")," and then press ",(0,i.yg)("strong",{parentName:"p"},"E")," to turn on local echo "),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Enter the command ",(0,i.yg)("strong",{parentName:"p"},'"AT"'),' and press enter. If you see the response as "OK", the 4G module is working properly'),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/22.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," Enter the command ",(0,i.yg)("strong",{parentName:"p"},'"ATI"')," to check the module information"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/23.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 7:")," To test the module, enter the below command to call another phone number "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"ATD<phone_number>;\n")),(0,i.yg)("p",null,"And you will see the below output"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/24.jpg"})),(0,i.yg)("p",null,"If the entered phone number can receive the call, the module is working as expected"),(0,i.yg)("h3",{id:"4g-module-usage---connect-to-internet"},"4G Module Usage - Connect to Internet"),(0,i.yg)("h4",{id:"ec25-module"},"EC25 module"),(0,i.yg)("p",null,"If you are using the EC25 module, follow the below steps "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," After opening the serial console of the 4G module as explained above (4G Module Usage - Test Dialing section), execute the following command to connect to the internet. Here replace ",(0,i.yg)("strong",{parentName:"li"},"YOUR_APN")," with the APN of your network provider")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'AT+CGDCONT=1,"IP","YOUR_APN"\n')),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/89.jpg"})),(0,i.yg)("p",null,"On successful connection, it should output ",(0,i.yg)("strong",{parentName:"p"},"OK")," as you can see from the image above"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Restart the 4G module by executing the following")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"AT+CFUN=1,1\n")),(0,i.yg)("p",null,"Now you will lose connection to the 4G module on the serial terminals"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Close ",(0,i.yg)("strong",{parentName:"p"},"minicom")," by pressing ",(0,i.yg)("strong",{parentName:"p"},"CTRL + A")," and then ",(0,i.yg)("strong",{parentName:"p"},"Q"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Type ",(0,i.yg)("strong",{parentName:"p"},"ifconfig")," and you will see an IP address on the ",(0,i.yg)("strong",{parentName:"p"},"usb0")," interface"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/93.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5:")," You can try to ping a website as follows to check whether there is internet connectivity")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"ping -I usb0 www.bing.com -c 5\n")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/94.png"})),(0,i.yg)("h4",{id:"ec20-module"},"EC20 module"),(0,i.yg)("p",null,"If you are using the EC20 module, follow the below steps"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," If you have already reset the 4G module as explained in the previous section (4G Module Usage - Test Dialing section) for EC20 module, you can skip this step. However, if you have not yet done it, please do it now")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Enter the serial console of the 4G module and enter the following command to set to ECM mode"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'AT+QCFG="usbnet",1\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Reset the 4G module")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Inside the 4G module console, execute the following command to connect to the internet. Here replace ",(0,i.yg)("strong",{parentName:"p"},"YOUR_APN")," with the APN of your network provider"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'AT+CGDCONT=1,"IP","YOUR_APN"\n')),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6:")," Type ",(0,i.yg)("strong",{parentName:"li"},"ifconfig")," and you will see an IP address on the ",(0,i.yg)("strong",{parentName:"li"},"usb1")," interface")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/90.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 7:")," You can try to ping a URL as follows to check whether there is internet connectivity")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"750",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/92.png"})),(0,i.yg)("h3",{id:"lora-module-connection-overview"},"LoRa Module Connection Overview"),(0,i.yg)("p",null,"Currently this board supports WM1302 SPI module. You can either use ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/WM1302-LoRaWAN-Gateway-Module-SPI-US915-SKY66420-p-5455.html"},"US version")," or ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/WM1302-LoRaWAN-Gateway-Module-SPI-EU868-p-4889.html"},"EU version")," which is available on our Bazaar."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Power off the board if is already on")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Slide in the LoRa module to the mini PCIe slot and use the pre-installed screws and screw them to the 2 holes to secure the 4G module in place"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/25.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Connect an antenna to the the antenna connector. Here you need to use an IPEX connector")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/26.png"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Make sure there is no jumper between ",(0,i.yg)("strong",{parentName:"p"},"SIM_MUX_SEL")," and ",(0,i.yg)("strong",{parentName:"p"},"GND")," pins on the ",(0,i.yg)("strong",{parentName:"p"},"J8 (Control and UART) Header"),". This jumper is only needed when using 4G modules")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Power on the board")),(0,i.yg)("h3",{id:"lora-module-usage---testing-lora-rf"},"LoRa Module Usage - Testing LoRa RF"),(0,i.yg)("p",null,"When the LoRa module is connected, you will see the green and blue LEDs on the module light up"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/27.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Enter the below command to check whether the LoRa module is detected by the system")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"i2cdetect -r -y 7\n")),(0,i.yg)("p",null,"If you see the below output, the module is detected by the system"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/29.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Enter the below commands to compile and build the LoRa signals transmitting tool")),(0,i.yg)("admonition",{type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"Please note that this ",(0,i.yg)("strong",{parentName:"p"},"LoRa signals transmitting tool")," is only applicable to Jetpack5. If you want to test the LoRa module functionality in Jetpack6, please refer to the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/OSHW-Jetson-Series/blob/main/reComputer%20Jetson%20carrier%20board/reComputer%20Industrial%20J201/Schematic/reComputer%20Industrial%20J201_V1.2.pdf"},"schematic")," and ",(0,i.yg)("a",{parentName:"p",href:"https://developer.nvidia.com/downloads/jetson-orin-nx-and-orin-nano-series-pinmux-config-template"},"pinmux")," to determine the pin names, and use the ",(0,i.yg)("inlineCode",{parentName:"p"},"gpioset")," command to set the pin state.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/lakshanthad/sx1302_hal\ncd sx1302_hal\nmake\ncd libloragw\ncp ../tools/reset_lgw.sh .\nsudo ./test_loragw_hal_tx -r 1250 -m LORA -f 867.1 -s 12 -b 125 -n 1000 -z 100 --dig 3 --pa 0 --pwid 13 -d /dev/spidev2.0\n")),(0,i.yg)("p",null,"If you see the below result and the LED on the LoRa module turns RED, that means the module is trasmitting RF signals successfully"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"750",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/78.jpg"})),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/28.png"})),(0,i.yg)("p",null,"To stop transmitting, you can press ",(0,i.yg)("strong",{parentName:"p"},"CTRL + C")," on the keyboard."),(0,i.yg)("h3",{id:"lora-module-usage---connect-to-ttn"},"LoRa Module Usage - Connect to TTN"),(0,i.yg)("p",null,"Now we will connect to TTN (The Things Network) and use the reComputer Industrial as a TTN LoRaWAN gateway"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Enter the below to make the packet forwarder ready")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cd ..\ncd packet_forwarder\ncp ../tools/reset_lgw.sh .\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Run the following according to the LoRa module you are using. Here we have tested SPI US915 version")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo ./lora_pkt_fwd -c global_conf.json.sx1250.US915\n")),(0,i.yg)("p",null,"However, the commands for different other modules are as follows"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"# USB 915\nsudo ./lora_pkt_fwd -c global_conf.json.sx1250.US915.USB\n\n# SPI EU868\nsudo ./lora_pkt_fwd -c global_conf.json.sx1250.EU868\n\n# USB EU868\nsudo ./lora_pkt_fwd -c global_conf.json.sx1250.EU868.USB\n")),(0,i.yg)("p",null,"After running the above command, you will see the below output with last line showing the ",(0,i.yg)("strong",{parentName:"p"},"concentrator EUI")," information. Please keep this information because we will use it later when setting up the gateway with TTN"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/79.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Visit ",(0,i.yg)("a",{parentName:"li",href:"https://console.cloud.thethings.network"},"this URL")," to enter the TTN console and select a region of your choice")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/80.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Login if you already have an account, or sign up for a new account if you do not have one")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"450",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/81.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5:")," Click ",(0,i.yg)("strong",{parentName:"li"},"Go to gateways"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/82.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6:")," Click ",(0,i.yg)("strong",{parentName:"li"},"+ Register gateway"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/83.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 7:")," Enter the ",(0,i.yg)("strong",{parentName:"li"},"Concentrator EUI")," that you obtained before inside the ",(0,i.yg)("strong",{parentName:"li"},"Gateway EUI")," section and click ",(0,i.yg)("strong",{parentName:"li"},"Confirm"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/84.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 8:")," Enter the ",(0,i.yg)("strong",{parentName:"li"},"Frequency plan")," according to the LoRa module you are using. Here we are using US915 verison of the module and therefore have selected ",(0,i.yg)("strong",{parentName:"li"},"United Stated 902-928 MHz, FSB 2 (used by TTN)"),". After that click ",(0,i.yg)("strong",{parentName:"li"},"Register gateway"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/85.jpg"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"The ",(0,i.yg)("strong",{parentName:"p"},"Gateway ID")," has been filled automatically for you. However, you can change it to anything you prefer. ",(0,i.yg)("strong",{parentName:"p"},"Gateway name")," is not a must to fill. However, you can fill it as well according to your preference")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 9:")," Make note of the ",(0,i.yg)("strong",{parentName:"li"},"Gateway Server Address")," on the main homepage of the gateway")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/86.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 9:")," On the reTerminal Industrial, edit the ",(0,i.yg)("strong",{parentName:"p"},"global_conf_json")," file that we used along with the ",(0,i.yg)("strong",{parentName:"p"},"lora_pkt_fwd")," command. Here you need to change the ",(0,i.yg)("strong",{parentName:"p"},"gateway_ID"),", ",(0,i.yg)("strong",{parentName:"p"},"server_address"),", ",(0,i.yg)("strong",{parentName:"p"},"serv_port_up")," and ",(0,i.yg)("strong",{parentName:"p"},"serv_port_down")," options as follows "),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"gateway_ID: Concentrator EUI from device"),(0,i.yg)("li",{parentName:"ul"},"server_address: Gateway Server Address from TTN"),(0,i.yg)("li",{parentName:"ul"},"serv_port_up: 1700"),(0,i.yg)("li",{parentName:"ul"},"serv_port_down: 1700")))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/87.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 10:")," Rerun the packet forwarder")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo ./lora_pkt_fwd -c global_conf.json.sx1250.US915\n")),(0,i.yg)("p",null,"If you see the below output, that means the device has successfully connected with TTN"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/88.jpg"})),(0,i.yg)("h2",{id:"m2-key-b"},"M.2 Key B"),(0,i.yg)("p",null,"reComputer Industrial comes with a M.2 Key B connector that supports 4G and 5G modules. Currently we have tested ",(0,i.yg)("strong",{parentName:"p"},"SIM8202G-M2 5G module")),(0,i.yg)("h3",{id:"5g-module-connection-overview"},"5G Module Connection Overview"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Power off the board if it is already on")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Make sure the standoff is in place and then remove the top screw on the standoff"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/111.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Slide in the 5G module to the M.2 Key B slot and screw in the standoff screw to secure the 5G module in place (talk about standoff)")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/112.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Connect 4 antennas to the the antenna connectors on the module. Here you need to use an IPEX 4 connector")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/113.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Insert a 5G-enabled nano SIM card to the SIM card slot on the board making sure the gold surface of the SIM card is facing down. Here insert the card all the way in so that it will bounce back after hitting the internal spring and lock in place.")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/19.png"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"If you want to remove the SIM card, push the card in to hit the internal spring so that the SIM will come out of the slot")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5:")," Power on the board")),(0,i.yg)("h3",{id:"5g-module-usage---test-dialing"},"5G Module Usage - Test Dialing"),(0,i.yg)("p",null,"When using the SIM8202G-M2 5G module, the module will not automatically start. So we first need to toggle a few GPIOs to make it start"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Enter the following to start the 5G module"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo su \ncd /sys/class/gpio\necho 309 > export \ncd gpio309\necho out > direction\necho 0 > value\n\ncd..\necho 341 > export \ncd PEE.02\necho out > direction\necho 1 > value\n\ncd..\necho 330 > export \ncd PCC.02\necho out > direction\necho 0 > value\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo gpioset --mode=wait gpiochip2 9=0\nsudo gpioset --mode=wait gpiochip1 25=1\nsudo gpioset --mode=wait gpiochip1 14=0\n")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Please open multiple terminals to run these commands, and make sure each terminal window remains active.")))),(0,i.yg)("p",null,"Once the above is executed, LED2 will light up in green as below "),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/117.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Install minicom"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo apt update\nsudo apt install minicom -y\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Enter the serial console of the connected 5G module so that we can enter AT commands and interact with the 5G module"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo minicom -D /dev/ttyUSB2 -b 115200\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Enter the command ",(0,i.yg)("strong",{parentName:"p"},'"AT"'),' and press enter. If you see the response as "OK", the 5G module is working properly'),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/107.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Enter the command ",(0,i.yg)("strong",{parentName:"p"},'"ATI"')," to check the module information"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/108.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," To test the module, enter the below command to call another phone number "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"ATD<phone_number>;\n")),(0,i.yg)("p",null,"And you will see the below output"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/109.png"})),(0,i.yg)("h2",{id:"di-do"},"DI/ DO"),(0,i.yg)("p",null,"reComputer Industrial supports 4 digital input and 4 digital output channels, all of which are optically isolated to effectively protect the mainboard from voltage spikes or other electrical disturbances. There is also a CAN interface on this same connector which we will discuss later in this wiki"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/37.png"})),(0,i.yg)("h3",{id:"di-do-pin-assignment-table"},"DI/ DO Pin Assignment Table"),(0,i.yg)("table",null,(0,i.yg)("thead",null,(0,i.yg)("tr",null,(0,i.yg)("th",null,"Type"),(0,i.yg)("th",null,"Label Name"),(0,i.yg)("th",null,"Schematic Signal"),(0,i.yg)("th",null,"Module Pin Number"),(0,i.yg)("th",null,"BGA Number"),(0,i.yg)("th",null,"GPIO Number"),(0,i.yg)("th",null,"V/A Limits"),(0,i.yg)("th",null,"Note"))),(0,i.yg)("tbody",null,(0,i.yg)("tr",null,(0,i.yg)("td",{rowSpan:4},"Input"),(0,i.yg)("td",null,"DI1"),(0,i.yg)("td",null,"DI_1_GPIO01"),(0,i.yg)("td",null,"118"),(0,i.yg)("td",null,"PQ.05"),(0,i.yg)("td",null,"453"),(0,i.yg)("td",{rowSpan:4},"12V/ 20mA current in total"),(0,i.yg)("td",{rowSpan:4},"12V Digital Input, ground signal needs to",(0,i.yg)("br",null),"be connected to GND_DI (Pin2/4/6)")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"DI2"),(0,i.yg)("td",null,"DI_2_GPIO09"),(0,i.yg)("td",null,"211"),(0,i.yg)("td",null,"PAC.06"),(0,i.yg)("td",null,"492")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"DI3"),(0,i.yg)("td",null,"DI_3_GPIO11"),(0,i.yg)("td",null,"216"),(0,i.yg)("td",null,"PQ.06"),(0,i.yg)("td",null,"454")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"DI4"),(0,i.yg)("td",null,"DI_4_GPIO13"),(0,i.yg)("td",null,"228"),(0,i.yg)("td",null,"PH.00"),(0,i.yg)("td",null,"391")),(0,i.yg)("tr",null,(0,i.yg)("td",{rowSpan:4},"Output"),(0,i.yg)("td",null,"DO1"),(0,i.yg)("td",null,"DO_1_GPIO"),(0,i.yg)("td",null,"193"),(0,i.yg)("td",null,"PI.00"),(0,i.yg)("td",null,"399"),(0,i.yg)("td",{rowSpan:4},"40V/40mA load per pin"),(0,i.yg)("td",{rowSpan:4},"Digital output, maximum withstand",(0,i.yg)("br",null),"voltage 40V, ground signal needs to be",(0,i.yg)("br",null),"connected to GND_DO(Pin8/10)")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"DO2"),(0,i.yg)("td",null,"DO_2_GPIO"),(0,i.yg)("td",null,"195"),(0,i.yg)("td",null,"PI.01"),(0,i.yg)("td",null,"400")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"DO3"),(0,i.yg)("td",null,"DO_3_GPIO"),(0,i.yg)("td",null,"197"),(0,i.yg)("td",null,"PI.02"),(0,i.yg)("td",null,"401")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"DO4"),(0,i.yg)("td",null,"DO_4_GPIO"),(0,i.yg)("td",null,"199"),(0,i.yg)("td",null,"PH.07"),(0,i.yg)("td",null,"398")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"CAN"),(0,i.yg)("td",null,"CH"),(0,i.yg)("td",{colSpan:5,rowSpan:2},"/"),(0,i.yg)("td",{rowSpan:2},"CAN bus with standard differential signals, ",(0,i.yg)("br",null),"ground signal needs to be connected to GND_ISO (Pin 12)")),(0,i.yg)("tr",null,(0,i.yg)("td",null),(0,i.yg)("td",null,"CL")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"Ground"),(0,i.yg)("td",null,"GND_DI"),(0,i.yg)("td",{colSpan:5,rowSpan:3},"/"),(0,i.yg)("td",null,"The reference ground signal for the 12V Digital",(0,i.yg)("br",null),"Input, which is also the return path for the DI")),(0,i.yg)("tr",null,(0,i.yg)("td",null),(0,i.yg)("td",null,"GND_DO"),(0,i.yg)("td",null,"The reference ground signal of the digital output, which is also the return path of the DO")),(0,i.yg)("tr",null,(0,i.yg)("td",null),(0,i.yg)("td",null,"CG"),(0,i.yg)("td",null,"The reference ground signal for CAN")))),(0,i.yg)("admonition",{type:"danger"},(0,i.yg)("p",{parentName:"admonition"},"Please note that the pin numbers in the table above are only valid for Jetpack5. We can obtain the pin numbers for Jetpack6 in the following ways:"),(0,i.yg)("ol",{parentName:"admonition"},(0,i.yg)("li",{parentName:"ol"},"Use the ",(0,i.yg)("inlineCode",{parentName:"li"},"gpioinfo")," command to get the GPIO table."),(0,i.yg)("li",{parentName:"ol"},"Check the ",(0,i.yg)("strong",{parentName:"li"},"BGA Number")," to find the corresponding pin number on Jetpack6."))),(0,i.yg)("h3",{id:"connection-overview-for-di"},"Connection Overview for DI"),(0,i.yg)("p",null,"You can make the connection for DI by following the diagram below. It is better to add a resistor in series for the DI line. Here we have tested with a 4.7k\u03a9 resistor connected to the DI1 pin."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/38.png"})),(0,i.yg)("h3",{id:"usage-for-di"},"Usage for DI"),(0,i.yg)("p",null,"You need to input a voltage of 12V on the DI line in order to get detected as an input"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Make the connetions as shown above to ",(0,i.yg)("strong",{parentName:"p"},"DI1 pin")," and input ",(0,i.yg)("strong",{parentName:"p"},"12V")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Open and check the status for DI1 as follows:"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo su \ncd /sys/class/gpio\necho 453 > export \ncd PQ.05\n\ncat value\n")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"You can refer the ",(0,i.yg)("strong",{parentName:"p"},"DI/ DO Pin Assignment Table")," to find the GPIO number and BGA number. In the above example, for DI1 pin, GPIO number is 453 and BGA number is PQ.05"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo gpioget gpiochip0 105\n")))),(0,i.yg)("p",null,"If it outputs 0, that means there is 12V input. If it outputs 1, that means there is no input voltage."),(0,i.yg)("h3",{id:"connection-overview-for-do"},"Connection Overview for DO"),(0,i.yg)("p",null,"You can make the connection for DO by following the diagram below. It is better to add a resistor in series for the DO line. Here we have tested with a 4.7k\u03a9 resistor"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/39.png"})),(0,i.yg)("h3",{id:"usage-for-do"},"Usage for DO"),(0,i.yg)("p",null,"Here you need to connect a load as mentioned in the above diagram. The easiest way to test this would be to connect a multimeter if you have access to one, or else connect a load that requires less than 40V maximum voltage"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Make the connetions as shown above to ",(0,i.yg)("strong",{parentName:"p"},"DO1 pin")," and input ",(0,i.yg)("strong",{parentName:"p"},"40V as max")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Open and turn on the GPIO for D01 as follows:"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo su \ncd /sys/class/gpio\necho 399 > export \ncd PI.00\necho out > direction\n\necho 1 > value\n")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"You can refer the ",(0,i.yg)("strong",{parentName:"p"},"DI/ DO Pin Assignment Table")," to find the GPIO number and BGA number. In the above example, for DO1 pin, GPIO number is 399 and BGA number is PI.00"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo gpioset --mode=wait gpiochip0 51=1\n")))),(0,i.yg)("p",null,"If the load is turned on or the multimeter outputs the voltage that you have input, the test it is functioning properly."),(0,i.yg)("h2",{id:"can"},"CAN"),(0,i.yg)("p",null,"reComputer Industrial features a CAN interface that supports the CAN FD (Controller Area Network Flexible Data-Rate) protocol at 5Mbps. The CAN interface is isolated using capacitive isolation, which provides excellent EMI protection and ensures reliable communication in industrial and automation applications. A terminal resistor of 120\u03a9 has been installed by default and you can toggle this resistor ON and OFF using GPIO."),(0,i.yg)("p",null,"Note: The CAN interface uses an isolated power supply, which means that the ground signal for external devices connected to the CAN interface should be connected to the CG pin"),(0,i.yg)("h3",{id:"connection-overview-with-usb-to-can-adapter"},"Connection Overview with USB to CAN Adapter"),(0,i.yg)("p",null,"To test and interface with CAN bus, connect a USB to CAN adapter to the CAN connectors on the board as shown below"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/40.png"})),(0,i.yg)("p",null,"Here we have used ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/USB-CAN-Analyzer-p-2888.html"},"USB to CAN Analyzer Adapter with USB Cable")," available on our Bazaar."),(0,i.yg)("h3",{id:"usage-with-usb-to-can-adapter"},"Usage with USB to CAN Adapter"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Download the driver for the USB to CAN adapter you are using from the manufacturer's website and install it. In our case, according to the adapter that we used, the drivers can be found ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/SeeedDocument/USB-CAN-Analyzer/tree/master/res/Driver/driver%20for%20USBCAN(CHS40)/windows-driver"},"here"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Some adapters also come with the necessary software for the PC in order to communicate with the CAN device. In our case, according to the adapter that we used, we have downloaded and installed the software which can be found ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/SeeedDocument/USB-CAN-Analyzer/tree/master/res/Program"},"here"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Open a terminal window on the reComputer Industrial and execute the following commands to configure and enable the CAN interface"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo modprobe mttcan\nsudo ip link set can0 type can bitrate 125000\nsudo ip link set can0 up\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Type ",(0,i.yg)("strong",{parentName:"li"},"ifconfig")," on the terminal and you will see the CAN interface in enabled")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/41.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5:")," Open the CAN software that you have installed before. In this case, we will open the software that we installed according to the CAN adapter that we are using")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/42.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6:")," Connect the USB to CAN adapter to the PC and open ",(0,i.yg)("strong",{parentName:"li"},"Device Manager")," by searching it on windows search bar. Now you will see the connected adapter under ",(0,i.yg)("strong",{parentName:"li"},"Ports (COM & LPT)"),". Make a note of the serial port listed here. According to the below image, the serial port is ",(0,i.yg)("strong",{parentName:"li"},"COM9"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/43.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 7:")," Open the CAN software, click ",(0,i.yg)("strong",{parentName:"li"},"Refresh")," next to ",(0,i.yg)("strong",{parentName:"li"},"COM")," section, click the drop-down-menu and select the serial port according to the connected adapter. Keep the ",(0,i.yg)("strong",{parentName:"li"},"COM bps")," at default and click ",(0,i.yg)("strong",{parentName:"li"},"Open"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"250",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/44.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 8:")," Keep the ",(0,i.yg)("strong",{parentName:"li"},"Mode")," and ",(0,i.yg)("strong",{parentName:"li"},"CAN bps")," at default, change the ",(0,i.yg)("strong",{parentName:"li"},"Type")," to ",(0,i.yg)("strong",{parentName:"li"},"Standard frame")," and click ",(0,i.yg)("strong",{parentName:"li"},"Set and Start"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"250",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/45.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 9:")," On reComputer Industrial, execute the following command to send a CAN signal to the PC")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cansend can0 123#abcdabcd\n")),(0,i.yg)("p",null,"Now you will see the above signal received by the software as shown below"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/46.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 10:")," On reComputer Industrial, execute the following command to wait for receiving CAN signals from the PC")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"candump can0 &\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 11:")," On the CAN software, click ",(0,i.yg)("strong",{parentName:"li"},"Send a single frame"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/47.png"})),(0,i.yg)("p",null,"Now you will see it received by reComputer Industrial as follows"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"750",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/50.png"})),(0,i.yg)("h3",{id:"connection-overview-with-reterminal-dm"},"Connection Overview with reTerminal DM"),(0,i.yg)("p",null,"If you have access to a ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/reTerminal-DM-p-5616.html"},"reTerminal DM"),", you can communicate with it directly because reTerminal DM also has a CAN interface."),(0,i.yg)("p",null,"Refer to the below image to connect reComputer Industrial and reTerminal DM via CAN"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/49.png"})),(0,i.yg)("h3",{id:"usage-with-reterminal-dm"},"Usage with reTerminal DM"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Before using reTerminal DM, visit ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/reterminal-dm"},"this wiki")," to get started with reTerminal DM")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Open a terminal window on the reComputer Industrial and execute the following commands to configure and enable the CAN interface"))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo modprobe mttcan\nsudo ip link set can0 type can bitrate 125000\nsudo ip link set can0 up\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Open a terminal window on the reTerminal DM and execute the following commands to configure and enable the CAN interface")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo modprobe mttcan\nsudo ip link set can0 type can bitrate 125000\nsudo ip link set can0 up\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Open a terminal window on the reTerminal DM and execute the following commands to configure and enable the CAN interface")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo modprobe mttcan\nsudo ip link set can0 type can bitrate 125000\nsudo ip link set can0 up\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5:")," If you type ",(0,i.yg)("strong",{parentName:"li"},"ifconfig")," on both devices, you will see the CAN interfaces are enabled ")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/41.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6:")," On the reTerminal DM, execute the following to wait for receiving CAN signals from the reComputer Industrial")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"candump can0 &\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 7:")," On the reComputer Industrial, execute the following command to send a CAN signal to the reTerminal Industrial")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cansend can0 123#abcdabcd\n")),(0,i.yg)("p",null,"Now you will see it received by reTerminal DM as follows"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"750",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/50.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 8:")," Repeat ",(0,i.yg)("strong",{parentName:"li"},"step 6 and step 7")," but interchanging the devices. Use reTerminal DM to send CAN signals and use reComputer Industrial to receive them")),(0,i.yg)("h2",{id:"rs232-rs422-rs485-interfaces"},"RS232/ RS422/ RS485 interfaces"),(0,i.yg)("p",null,"reComputer Industrial has a DB9 connector which supports RS232, RS422 and RS485 communication protocols and there is a DIP switch panel onboard to switch between the different interface options"),(0,i.yg)("p",null,"You can see the DIP switch panel as below:"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/51.png"})),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Make sure to remove the yellow plastic cover before using the DIP switch panel")),(0,i.yg)("p",null,"And the below table explains the different modes based on the DIP switch positions "),(0,i.yg)("table",null,(0,i.yg)("thead",null,(0,i.yg)("tr",null,(0,i.yg)("th",null),(0,i.yg)("th",null,"MODE_0"),(0,i.yg)("th",null,"MODE_1"),(0,i.yg)("th",null,"MODE_2"),(0,i.yg)("th",null,"Mode"),(0,i.yg)("th",null,"Status"))),(0,i.yg)("tbody",null,(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/52.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"RS-422 Full Duplex"),(0,i.yg)("td",null,"1T/1R RS-422")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/53.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"1"),(0,i.yg)("td",null,"Pure RS-232"),(0,i.yg)("td",null,"3T/5R RS-232")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/54.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"1"),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"RS-485 Half Duplex"),(0,i.yg)("td",null,"1T/1R RS-485 ,TX ENABLE Low Active")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/55.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"1"),(0,i.yg)("td",null,"1"),(0,i.yg)("td",null,"RS-485 Half Duplex"),(0,i.yg)("td",null,"1T/1R RS-485 ,TX ENABLE High Active")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/56.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"1"),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"RS-422 Full Duplex"),(0,i.yg)("td",null,"1T/1R RS-422 with termination resistor")),(0,i.yg)("tr",null,(0,i.yg)("td",{rowSpan:3},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/57.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",{rowSpan:3},"1"),(0,i.yg)("td",{rowSpan:3},"0"),(0,i.yg)("td",{rowSpan:3},"1"),(0,i.yg)("td",{rowSpan:3},"Pure RS-232"),(0,i.yg)("td",null,"1T/1R RS-232 co-exists with RS485")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"application without the need for the bus")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"switch IC (for special usage).")),(0,i.yg)("tr",null,(0,i.yg)("td",{rowSpan:2},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/58.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",{rowSpan:2},"1"),(0,i.yg)("td",{rowSpan:2},"1"),(0,i.yg)("td",{rowSpan:2},"0"),(0,i.yg)("td",{rowSpan:2},"RS-485 Half Duplex"),(0,i.yg)("td",null,"1T/1R RS-485 with termination resistor")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"TX ENABLE Low Active")),(0,i.yg)("tr",null,(0,i.yg)("td",{rowSpan:2},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/59.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",{rowSpan:2},"1"),(0,i.yg)("td",{rowSpan:2},"1"),(0,i.yg)("td",{rowSpan:2},"1"),(0,i.yg)("td",null,"Low Power"),(0,i.yg)("td",{rowSpan:2},"All I/O pins are High Impedance")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"Shutdown")))),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("p",{parentName:"admonition"},"Out of the box, the default mode of the switches will be set to RS485 with 010 from factory")),(0,i.yg)("p",null,"The above table takes into account the first three switches of the DIP switch panel. However, the fourth switch is responsible to toggle the slew rate which is directly related to the data rate "),(0,i.yg)("table",null,(0,i.yg)("thead",null,(0,i.yg)("tr",null,(0,i.yg)("th",null),(0,i.yg)("th",null,"Status"),(0,i.yg)("th",null,"Note"))),(0,i.yg)("tbody",null,(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/62.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"1"),(0,i.yg)("td",null,"SLEW= Vcc",(0,i.yg)("br",null),"This RS232/RS422/RS485 Multiprotocol Transceiver limits the communication rateas follows :",(0,i.yg)("br",null),"RS-232: MaximumData Rate is 1.5Mbps",(0,i.yg)("br",null),"RS-485/RS-422; MaximumData Rate is 10Mbps",(0,i.yg)("br",null),"The actual Maximum Data Rate depends on the Jetson SO Mused")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/63.png",alt:"Image",width:200,height:127})),(0,i.yg)("td",null,"0"),(0,i.yg)("td",null,"SLEW = GND",(0,i.yg)("br",null),"RS-232: Maximum Data Rate is 250Kbps",(0,i.yg)("br",null),"RS-485/RS-422: Maximum Data Rate is 250kbps")))),(0,i.yg)("p",null,"Here we will be using USB to RS232, RS485 and RS422 adapters in order to test the interfaces. So before moving on, you need to install a serial terminal application on your PC. Here we recommend you to install ",(0,i.yg)("strong",{parentName:"p"},"Putty")," which is easy to setup and use."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Visit ",(0,i.yg)("a",{parentName:"li",href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"},"this website")," and download Putty according to your PC architecture ")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"500",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/60.png"})),(0,i.yg)("p",null,"Here we have selected Putty according to the PC that we used which is a X86 windows 64-bit machine"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Open the downloaded setup and go through the prompts to install the application")),(0,i.yg)("h3",{id:"general-connection-overview"},"General Connection Overview"),(0,i.yg)("p",null,"You can refer to the pin numbering of DB9 connector and the table to make the connections"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"300",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/61.png"})),(0,i.yg)("table",null,(0,i.yg)("thead",null,(0,i.yg)("tr",null,(0,i.yg)("th",null,"MODE"),(0,i.yg)("th",null,"001/101"),(0,i.yg)("th",null,"000/100"),(0,i.yg)("th",null,"010/011/110"))),(0,i.yg)("tbody",null,(0,i.yg)("tr",null,(0,i.yg)("td",null,"PIN"),(0,i.yg)("td",null,"RS232"),(0,i.yg)("td",null,"RS422"),(0,i.yg)("td",null,"RS485")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"1"),(0,i.yg)("td",null),(0,i.yg)("td",null,"TXD-"),(0,i.yg)("td",null,"Data-")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"2"),(0,i.yg)("td",null,"RXD"),(0,i.yg)("td",null,"TXD+"),(0,i.yg)("td",null,"Data+")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"3"),(0,i.yg)("td",null,"TXD"),(0,i.yg)("td",null,"RXD+"),(0,i.yg)("td",null)),(0,i.yg)("tr",null,(0,i.yg)("td",null,"4"),(0,i.yg)("td",null),(0,i.yg)("td",null,"RXD-"),(0,i.yg)("td",null)),(0,i.yg)("tr",null,(0,i.yg)("td",null,"5"),(0,i.yg)("td",null,"GND"),(0,i.yg)("td",null,"GND"),(0,i.yg)("td",null,"GND")),(0,i.yg)("tr",null,(0,i.yg)("td",null,"6"),(0,i.yg)("td",null),(0,i.yg)("td",null),(0,i.yg)("td",null)),(0,i.yg)("tr",null,(0,i.yg)("td",null,"7"),(0,i.yg)("td",null,"RTS"),(0,i.yg)("td",null),(0,i.yg)("td",null)),(0,i.yg)("tr",null,(0,i.yg)("td",null,"8"),(0,i.yg)("td",null,"CTS"),(0,i.yg)("td",null),(0,i.yg)("td",null)),(0,i.yg)("tr",null,(0,i.yg)("td",null,"9"),(0,i.yg)("td",null),(0,i.yg)("td",null),(0,i.yg)("td",null)))),(0,i.yg)("h3",{id:"rs232-connection-overview"},"RS232 Connection Overview"),(0,i.yg)("p",null,"Here you can use a USB to RS232 adapter to test the interface. We have used ",(0,i.yg)("a",{parentName:"p",href:"https://www.amazon.com/UGREEN-Converter-Adapter-Chipset-Windows/dp/B00QUZY4UG?th=1"},"UGREEN USB to RS232 Adapter")," for our testing."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Turn off the board"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Here we have 2 options to set the DIP switches. Either in 001 mode or 101 mode. The switch positions for each mode is shown below"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"450",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/64.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Connect the USB to RS232 adapter to the DB9 connector. Here we have connected the adapter that we have mentioned above "),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/68.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Connect the other end to one of the USB ports on your PC"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Turn on the board"),(0,i.yg)("h3",{id:"rs232-usage"},"RS232 Usage"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," You may need to install a driver for the adapter that you are using or windows will automatically install the driver for you. Go to Device Manager by typing ",(0,i.yg)("strong",{parentName:"p"},"Device Manager")," inside windows search and check whether you can see the conenected adapter as a COM device."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/67.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," If you cannot see the adapter, you need to install the driver according to the adapter that you are using. You can generally find these drivers on the manufacturer website. For the adapter that we are using, you can ",(0,i.yg)("a",{parentName:"p",href:"https://www.ugreen.com/pages/download"},"this page"),", search for ",(0,i.yg)("strong",{parentName:"p"},"20201")," as the model number and download the driver accordingly "),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Open Putty on the PC, select the ",(0,i.yg)("strong",{parentName:"p"},"Terminal")," section set the following"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Local echo: Force on"),(0,i.yg)("li",{parentName:"ul"},"Local line editing: Force on")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/69.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Session"),", under ",(0,i.yg)("strong",{parentName:"p"},"Coonection type"),", select ",(0,i.yg)("strong",{parentName:"p"},"Serial"),", set the serial port number according to what you see on ",(0,i.yg)("strong",{parentName:"p"},"Device Manager"),", keep the Speed as default (9600) and click ",(0,i.yg)("strong",{parentName:"p"},"Open")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/71.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," On the reTerminal Industrial terminal window, type the following to send a signal from the reComputer to the PC"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'sudo chmod 777 /dev/ttyTHS0\nsudo echo "RS232 message from reComputer Industrial" > /dev/ttyTHS0\n'))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'sudo chmod 777 /dev/ttyTHS1\nsudo echo "RS232 message from reComputer Industrial" > /dev/ttyTHS1\n')))),(0,i.yg)("p",null,"Now you will see this message displayed on Putty"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/72.jpg"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," On the reTerminal Industrial terminal window, type the following to wait for receiving signals from the PC"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cat /dev/ttyTHS0\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cat /dev/ttyTHS1\n")))),(0,i.yg)("p",null,"On Putty, type anything, press ",(0,i.yg)("strong",{parentName:"p"},"ENTER")," and it will be displayed on the reComputer Industrial terminal window"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/73.png"})),(0,i.yg)("h3",{id:"rs422-connection-overview"},"RS422 Connection Overview"),(0,i.yg)("p",null,"Here you can use a USB to RS422 adapter to test the interface. We have used ",(0,i.yg)("a",{parentName:"p",href:"https://www.amazon.com/Adapter-Serial-Terminal-Ferrite-Windows/dp/B08SM5MX8K"},"DTech USB to RS485 Adapter")," for our testing."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Turn off the board"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Here we have 2 options to set the DIP switches. Either in 000 mode or 100 mode. The switch positions for each mode is shown below"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"450",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/65.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Connect the USB to RS422 adapter to the DB9 connector using Jumper wires as shown below. Here we have connected the adapter that we have mentioned above "),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/74.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Connect the other end to one of the USB ports on your PC"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Turn on the board"),(0,i.yg)("h3",{id:"rs422-usage"},"RS422 Usage"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," You may need to install a driver for the adapter that you are using or windows will automatically install the driver for you. Go to Device Manager by typing ",(0,i.yg)("strong",{parentName:"p"},"Device Manager")," inside windows search and check whether you can see the connected adapter as a COM device."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"450",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/75.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," If you cannot see the adapter, you need to install the driver according to the adapter that you are using. You can generally find these drivers on the manufacturer website. For the adapter that we are using, you can ",(0,i.yg)("a",{parentName:"p",href:"https://www.dtechelectronics.com/front/downloads/downloadssearch/user_downloadscat_id/0/search_value/rs485"},"this page")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Open Putty on the PC, select the ",(0,i.yg)("strong",{parentName:"p"},"Terminal")," section set the following"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Local echo: Force on"),(0,i.yg)("li",{parentName:"ul"},"Local line editing: Force on")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/69.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Session"),", under ",(0,i.yg)("strong",{parentName:"p"},"Coonection type"),", select ",(0,i.yg)("strong",{parentName:"p"},"Serial"),", set the serial port number according to what you see on ",(0,i.yg)("strong",{parentName:"p"},"Device Manager"),", keep the Speed as default (9600) and click ",(0,i.yg)("strong",{parentName:"p"},"Open")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/76.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," On the reTerminal Industrial terminal window, type the following to send a signal from the reComputer to the PC"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'sudo chmod 777 /dev/ttyTHS0\nsudo echo "RS422 message from reComputer Industrial" > /dev/ttyTHS0\n'))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'sudo chmod 777 /dev/ttyTHS1\nsudo echo "RS422 message from reComputer Industrial" > /dev/ttyTHS1\n')))),(0,i.yg)("p",null,"Now you will see this message displayed on Putty"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," On the reTerminal Industrial terminal window, type the following to wait for receiving signals from the PC"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cat /dev/ttyTHS0\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cat /dev/ttyTHS1\n")))),(0,i.yg)("p",null,"On Putty, type anything, press ",(0,i.yg)("strong",{parentName:"p"},"ENTER")," and it will be displayed on the reComputer Industrial terminal window"),(0,i.yg)("h3",{id:"rs485-connection-overview"},"RS485 Connection Overview"),(0,i.yg)("p",null,"Here you can use a USB to RS422 adapter to test the interface. We have used ",(0,i.yg)("a",{parentName:"p",href:"https://www.amazon.com/Adapter-Serial-Terminal-Ferrite-Windows/dp/B08SM5MX8K"},"DTech USB to RS485 Adapter")," for our testing."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Turn off the board"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Here we have 3 options to set the DIP switches. Either in 010 mode or 011 mode or 110 mode. The switch positions for each mode is shown below"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"650",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/66.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Connect the USB to RS422 adapter to the DB9 connector using Jumper wires as shown below. Here we have connected the adapter that we have mentioned above "),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"650",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/77.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Connect the other end to one of the USB ports on your PC"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," Turn on the board"),(0,i.yg)("h3",{id:"rs485-usage"},"RS485 Usage"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," You may need to install a driver for the adapter that you are using or windows will automatically install the driver for you. Go to Device Manager by typing ",(0,i.yg)("strong",{parentName:"p"},"Device Manager")," inside windows search and check whether you can see the conenected adapter as a COM device."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"450",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/75.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," If you cannot see the adapter, you need to install the driver according to the adapter that you are using. You can generally find these drivers on the manufacturer website. For the adapter that we are using, you can ",(0,i.yg)("a",{parentName:"p",href:"https://www.dtechelectronics.com/front/downloads/downloadssearch/user_downloadscat_id/0/search_value/rs485"},"this page")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Open Putty on the PC, select the ",(0,i.yg)("strong",{parentName:"p"},"Terminal")," section set the following"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Local echo: Force on"),(0,i.yg)("li",{parentName:"ul"},"Local line editing: Force on")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/69.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4:")," Select ",(0,i.yg)("strong",{parentName:"p"},"Session"),", under ",(0,i.yg)("strong",{parentName:"p"},"Coonection type"),", select ",(0,i.yg)("strong",{parentName:"p"},"Serial"),", set the serial port number according to what you see on ",(0,i.yg)("strong",{parentName:"p"},"Device Manager"),", keep the Speed as default (9600) and click ",(0,i.yg)("strong",{parentName:"p"},"Open")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"400",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/76.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 5:")," On the reTerminal Industrial terminal window, type the following to send a signal from the reComputer to the PC"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'sudo su \ncd /sys/class/gpio \necho 460 > export \ncd PR.04\necho out > direction\necho 0 > value\necho "RS485 message from reComputer Industrial" > /dev/ttyTHS0\n'))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'sudo chmod 777 /dev/ttyTHS1\nsudo gpioset gpiochip0 112=0\necho "RS485 message from reComputer Industrial" > /dev/ttyTHS1\n')))),(0,i.yg)("p",null,"Now you will see this message displayed on Putty"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 6:")," On the reTerminal Industrial terminal window, type the following to wait for receiving signals from the PC"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo su\ncd /sys/class/gpio\necho 460 > export\ncd PR.04\necho out > direction\necho 1 > value\ncat /dev/ttyTHS0\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo chmod 777 /dev/ttyTHS1\nsudo gpioset gpiochip0 112=1\ncat /dev/ttyTHS1\n")))),(0,i.yg)("p",null,"On Putty, type anything, press ",(0,i.yg)("strong",{parentName:"p"},"ENTER")," and it will be displayed on the reComputer Industrial terminal window"),(0,i.yg)("h2",{id:"gigabit-ethernet-connectors"},"Gigabit Ethernet Connectors"),(0,i.yg)("p",null,"There are two Gigabit Ethernet (10/100/1000M) Connectors on the reComputer Industrial and they function in different ways"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The leftmost connector is directy connected to the Jetson module and is able to provide PoE functionality with ",(0,i.yg)("strong",{parentName:"li"},"PSE 802.3 af, 15W")," specification. This means you can connect a PoE IP camera or any other PoE device to this port to provide power to the connected device."),(0,i.yg)("li",{parentName:"ul"},"The other connector is connected via a PCIe to Ethernet (LAN7430-I/Y9X) module ")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"350",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/36.png"})),(0,i.yg)("p",null,"There are 2 LEDs (green and yellow) on each Ethernet port which indicates the following"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Green LED: ON only when connected to 1000M network"),(0,i.yg)("li",{parentName:"ul"},"Yellow LED: Shows the network activity status")),(0,i.yg)("h2",{id:"usb"},"USB"),(0,i.yg)("p",null,"reComputer Industrial comes with 3x USB3.2 connectors onboard and has the following features:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"On the dual stacked USB connectors, the upper and lower USB ports share a current-limiting IC, with a total power supply capacity of 2.1A maximum output current (single can also be 2.1A). If over 2.1A, it will enter the over-current protection state."),(0,i.yg)("li",{parentName:"ul"},"On the single USB connector next to the dual stacked USB connectors, it has a total power supply capacity of 2.1A maximum output current. If over 2.1A, it will enter the over-current protection state."),(0,i.yg)("li",{parentName:"ul"},"Orin NX module comes with 3 USB3.2, only one of which is used in reComputer and converted to 3 ways. (USB3.1 TYPE-A x2 - J4 and USB3.1 TYPE-A\nx1 -J3)."),(0,i.yg)("li",{parentName:"ul"},"Only supports USB Host, not Device mode"),(0,i.yg)("li",{parentName:"ul"},"Provide 5V 2.1A"),(0,i.yg)("li",{parentName:"ul"},"Hot-swappable")),(0,i.yg)("h3",{id:"usage-3"},"Usage"),(0,i.yg)("p",null,"We will explain how to do a simple benchmark on a connected USB flash drive"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Check the write speed by executing the below command")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo dd if=/dev/zero of=/dev/$1 bs=100M count=10 conv=fdatasync\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Check the read speed by executing the below commands. Make sure to execute this after executing the above command for write speed.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},'sudo sh -c "sync && echo 3 > /proc/sys/vm/drop_caches"\nsudo dd if=/dev/$1 of=/dev/null bs=100M count=10\n')),(0,i.yg)("h2",{id:"configurable-led"},"Configurable LED"),(0,i.yg)("p",null,"There is a Green color LED located on the board as shown below. By default it is acting as the LED which shows the device is running properly. However, you can program this LED to turn ON and OFF by the system as well"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"250",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/21.png"})),(0,i.yg)("h3",{id:"usage-4"},"Usage"),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1:")," Enter the following commands on a terminal window to access the Green color LED"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo -i\ncd /sys/class/gpio\necho 329 > export \ncd PCC.01\necho out > direction \n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2:")," Turn OFF the LED"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"echo 0 > value \n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3:")," Turn ON the LED"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"echo 1 > value \n")),(0,i.yg)("p",null,"If you have finished using the LED, you can execute the following"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"cd ..\necho 329 > unexport\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("p",null,"Turn OFF the LED:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo gpioset gpiochip1 13=0\n")),(0,i.yg)("p",null,"Turn ON the LED:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo gpioset gpiochip1 13=1\n")))),(0,i.yg)("h2",{id:"monitor-system-performance"},"Monitor System Performance"),(0,i.yg)("p",null,"We can use ",(0,i.yg)("strong",{parentName:"p"},"jetson stats")," application to monitor the temperatures of the system components and check other system details such as "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"View CPU, GPU, RAM utilizations")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Change power modes")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Set to max clocks ")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Check JetPack information")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1:")," On the reComputer Industrial terminal windows, type the following "))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo apt update\nsudo apt install python3-pip -y\nsudo pip3 install jetson-stats\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Reboot the board")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo reboot\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3:")," Type the following on the terminal")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"jtop\n")),(0,i.yg)("p",null,"Now ",(0,i.yg)("strong",{parentName:"p"},"jtop")," application will open as follows"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/30.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4:")," Here you can cycle through the different pages of the applications and explore all the features!")),(0,i.yg)("h2",{id:"wifi-and-bluetooth"},"WiFi and Bluetooth"),(0,i.yg)("p",null,"reComputer Industrial does not come with WiFi and Bluetooth out-of-the-box. But there is a reserved section on the PCB so that a WiFi/ Bluetooth module can be soldered to the board. Here we have reserved the space to support a ",(0,i.yg)("strong",{parentName:"p"},"BL-M8723DU1")," module. "),(0,i.yg)("h3",{id:"connection-overview-3"},"Connection Overview"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," If you want to solder the ",(0,i.yg)("strong",{parentName:"li"},"BL-M8723DU1")," module by yourself, you can solder it. But we do not recommend this because if you damage the board in the process, the warranty will be void. What we recommend is to use our professional service to help you solder this module onto the board and you can send an email to ",(0,i.yg)("a",{parentName:"li",href:"mailto:order@seeed.cc"},"order@seeed.cc")," with your request.")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/31.jpg"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Connect two antennas to the two antenna connectors on the board for WiFi and Bluetooth. Here you need to use an IPEX connector")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/32.png"})),(0,i.yg)("h3",{id:"usage-5"},"Usage"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Turn on the board and once the device boots into Ubuntu Desktop, click on the drop-down menu at the top right corner, navigate to ",(0,i.yg)("inlineCode",{parentName:"li"},"Settings > Wi-Fi")," and toggle the button on the title bar to enable WiFi. After that select a WiFi network, enter the required password and connect to it")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/33.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," On the same window, choose ",(0,i.yg)("strong",{parentName:"li"},"Bluetooth")," and toggle the button on the title bar to enable Bluetooth. After that select a Bluetooth device to connect to it")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"1000",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/34.png"})),(0,i.yg)("h2",{id:"tpm"},"TPM"),(0,i.yg)("p",null,"reComputer Industrial comes with a TPM interface to connect an external TPM module. Here we have tested with a Infineon SLB9670 based TPM2.0 Module."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/114.jpg"})),(0,i.yg)("h3",{id:"connection-overview-4"},"Connection Overview"),(0,i.yg)("p",null,"Connect the TPM module to the TPM connector as shown below "),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/115.jpg"})),(0,i.yg)("h3",{id:"usage-6"},"Usage"),(0,i.yg)("p",null,"Check whether the TPM module is loaded properly by executing the below commands"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo dmesg | grep TPM\nls /dev/tpm* -l\n")),(0,i.yg)("p",null,"And you will see the output as follows"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"700",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/116.png"})),(0,i.yg)("h2",{id:"max-performance-on-recomputer-industrial"},"Max Performance on reComputer Industrial"),(0,i.yg)("p",null,"If you want to enable maximum performance on the reComputer Industrial, please follow the below instructions "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1:")," Enter the below command to enable the maximum power mode ")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo nvpmodel -m 0\n")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"600",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/35.jpg"})),(0,i.yg)("p",null,"Here it will ask to type ",(0,i.yg)("strong",{parentName:"p"},"YES")," in order to reboot the board  "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2:")," Once the board is booted, enter the following command to set the CPU clocks to the maximum frequency ")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh"},"sudo jetson_clocks\n")),(0,i.yg)("h2",{id:"gpio-table"},"GPIO Table"),(0,i.yg)("p",null,"You can access the GPIO table of the reComputer Industrial to get familiar with all the pin mappings."),(0,i.yg)(o.A,{mdxType:"Tabs"},(0,i.yg)(l.A,{value:"Jetpack5",label:"Jetpack5",mdxType:"TabItem"},(0,i.yg)("p",null,"Execute the following inside a terminal to access it"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"sudo cat /sys/kernel/debug/gpio\n")),(0,i.yg)("p",null,"And you will see the output as follows"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"gpiochip2: GPIOs 300-315, parent: i2c/1-0021, 1-0021, can sleep:\n gpio-300 (wl_dis              |gpio_xten_pin@0     ) out hi\n gpio-301 (hst_wake_wl         |gpio_xten_pin@1     ) out hi\n gpio-302 (wl_wake_hst         |gpio_xten_pin@2     ) out hi ACTIVE LOW\n gpio-303 (bt_dis              |gpio_xten_pin@3     ) out hi\n gpio-304 (hst_wake_bt         )\n gpio-305 (bt_wake_hst         )\n gpio-306 (spi0_rst_3v3        |gpio_xten_pin@6     ) out lo ACTIVE LOW\n gpio-307 (gpio_pin7           |gpio_xten_pin@7     ) out lo ACTIVE LOW\n gpio-308 (can_120R_en         )\n gpio-309 (M2B_PCIe_rst        )\n gpio-310 (USB_HUB_rst         |gpio_xten_pin@10    ) out hi\n gpio-311 (PCIe_ETH_rst        )\n gpio-312 (M2B_WOWWAN          )\n gpio-313 (M2B_DPR_3V3         )\n gpio-314 (SIM_MUX_SEL         )\n gpio-315 (gpio_pin15          )\n\ngpiochip1: GPIOs 316-347, parent: platform/c2f0000.gpio, tegra234-gpio-aon:\n gpio-316 (PAA.00              )\n gpio-317 (PAA.01              )\n gpio-318 (PAA.02              )\n gpio-319 (PAA.03              )\n gpio-320 (PAA.04              )\n gpio-321 (PAA.05              |fixed-regulators:reg) out hi\n gpio-322 (PAA.06              )\n gpio-323 (PAA.07              )\n gpio-324 (PBB.00              )\n gpio-325 (PBB.01              )\n gpio-326 (PBB.02              )\n gpio-327 (PBB.03              )\n gpio-328 (PCC.00              )\n gpio-329 (PCC.01              )\n gpio-330 (PCC.02              )\n gpio-331 (PCC.03              |mux                 ) out hi\n gpio-332 (PCC.04              )\n gpio-333 (PCC.05              )\n gpio-334 (PCC.06              )\n gpio-335 (PCC.07              )\n gpio-336 (PDD.00              )\n gpio-337 (PDD.01              )\n gpio-338 (PDD.02              )\n gpio-339 (PEE.00              )\n gpio-340 (PEE.01              )\n gpio-341 (PEE.02              )\n gpio-342 (PEE.03              )\n gpio-343 (PEE.04              |power-key           ) in  hi IRQ ACTIVE LOW\n gpio-344 (PEE.05              )\n gpio-345 (PEE.06              )\n gpio-346 (PEE.07              )\n gpio-347 (PGG.00              )\ngpiochip0: GPIOs 348-511, parent: platform/2200000.gpio, tegra234-gpio:\n gpio-348 (PA.00               |fixed-regulators:reg) out lo\n gpio-349 (PA.01               )\n gpio-350 (PA.02               )\n gpio-351 (PA.03               )\n gpio-352 (PA.04               )\n gpio-353 (PA.05               )\n gpio-354 (PA.06               )\n gpio-355 (PA.07               )\n gpio-356 (PB.00               )\n gpio-357 (PC.00               )\n gpio-358 (PC.01               )\n gpio-359 (PC.02               )\n gpio-360 (PC.03               )\n gpio-361 (PC.04               )\n gpio-362 (PC.05               )\n gpio-363 (PC.06               )\n gpio-364 (PC.07               )\n gpio-365 (PD.00               )\n gpio-366 (PD.01               )\n gpio-367 (PD.02               )\n gpio-368 (PD.03               )\n gpio-369 (PE.00               )\n gpio-370 (PE.01               )\n gpio-371 (PE.02               )\n gpio-372 (PE.03               )\n gpio-373 (PE.04               )\n gpio-374 (PE.05               )\n gpio-375 (PE.06               )\n gpio-376 (PE.07               )\n gpio-377 (PF.00               )\n gpio-378 (PF.01               )\n gpio-379 (PF.02               )\n gpio-380 (PF.03               )\n gpio-381 (PF.04               )\n gpio-382 (PF.05               )\n gpio-383 (PG.00               |force-recovery      ) in  hi IRQ ACTIVE LOW\n gpio-384 (PG.01               )\n gpio-385 (PG.02               )\n gpio-386 (PG.03               )\n gpio-387 (PG.04               )\n gpio-388 (PG.05               )\n gpio-389 (PG.06               )\n gpio-390 (PG.07               |cd                  ) in  lo IRQ\n gpio-391 (PH.00               )\n gpio-392 (PH.01               )\n gpio-393 (PH.02               )\n gpio-394 (PH.03               )\n gpio-395 (PH.04               )\n gpio-396 (PH.05               )\n gpio-397 (PH.06               )\n gpio-398 (PH.07               )\n gpio-399 (PI.00               )\n gpio-400 (PI.01               )\n gpio-401 (PI.02               )\n gpio-402 (PI.03               )\n gpio-403 (PI.04               )\n gpio-404 (PI.05               )\n gpio-405 (PI.06               )\n gpio-406 (PJ.00               )\n gpio-407 (PJ.01               )\n gpio-408 (PJ.02               )\n gpio-409 (PJ.03               )\n gpio-410 (PJ.04               )\n gpio-411 (PJ.05               )\n gpio-412 (PK.00               )\n gpio-413 (PK.01               )\n gpio-414 (PK.02               )\n gpio-415 (PK.03               )\n gpio-416 (PK.04               )\n gpio-417 (PK.05               )\n gpio-418 (PK.06               )\n gpio-419 (PK.07               )\n gpio-420 (PL.00               )\n gpio-421 (PL.01               )\n gpio-422 (PL.02               |nvidia,pex-wake     ) in  hi ACTIVE LOW\n gpio-423 (PL.03               )\n gpio-424 (PM.00               )\n gpio-425 (PM.01               )\n gpio-426 (PM.02               )\n gpio-427 (PM.03               )\n gpio-428 (PM.04               )\n gpio-429 (PM.05               )\n gpio-430 (PM.06               )\n gpio-431 (PM.07               )\n gpio-432 (PN.00               )\n gpio-433 (PN.01               )\n gpio-434 (PN.02               )\n gpio-435 (PN.03               )\n gpio-436 (PN.04               )\n gpio-437 (PN.05               )\n gpio-438 (PN.06               )\n gpio-439 (PN.07               )\n gpio-440 (PP.00               )\n gpio-441 (PP.01               )\n gpio-442 (PP.02               )\n gpio-443 (PP.03               )\n gpio-444 (PP.04               )\n gpio-445 (PP.05               )\n gpio-446 (PP.06               )\n gpio-447 (PP.07               )\n gpio-448 (PQ.00               )\n gpio-449 (PQ.01               )\n gpio-450 (PQ.02               )\n gpio-451 (PQ.03               )\n gpio-452 (PQ.04               )\n gpio-453 (PQ.05               )\n gpio-454 (PQ.06               )\n gpio-455 (PQ.07               )\n gpio-456 (PR.00               )\n gpio-457 (PR.01               )\n gpio-458 (PR.02               )\n gpio-459 (PR.03               )\n gpio-460 (PR.04               )\n gpio-461 (PR.05               )\n gpio-462 (PX.00               )\n gpio-463 (PX.01               )\n gpio-464 (PX.02               )\n gpio-465 (PX.03               )\n gpio-466 (PX.04               )\n gpio-467 (PX.05               )\n gpio-468 (PX.06               )\n gpio-469 (PX.07               )\n gpio-470 (PY.00               )\n gpio-471 (PY.01               )\n gpio-472 (PY.02               )\n gpio-473 (PY.03               )\n gpio-474 (PY.04               )\n gpio-475 (PY.05               )\n gpio-476 (PY.06               )\n gpio-477 (PY.07               )\n gpio-478 (PZ.00               )\n gpio-479 (PZ.01               |vbus                ) in  hi IRQ ACTIVE LOW\n gpio-480 (PZ.02               )\n gpio-481 (PZ.03               )\n gpio-482 (PZ.04               )\n gpio-483 (PZ.05               )\n gpio-484 (PZ.06               |cs_gpio             ) out lo\n gpio-485 (PZ.07               )\n gpio-486 (PAC.00              )\n gpio-487 (PAC.01              )\n gpio-488 (PAC.02              )\n gpio-489 (PAC.03              )\n gpio-490 (PAC.04              )\n gpio-491 (PAC.05              )\n gpio-492 (PAC.06              )\n gpio-493 (PAC.07              )\n gpio-494 (PAD.00              )\n gpio-495 (PAD.01              )\n gpio-496 (PAD.02              )\n gpio-497 (PAD.03              )\n gpio-498 (PAE.00              )\n gpio-499 (PAE.01              )\n gpio-500 (PAF.00              )\n gpio-501 (PAF.01              )\n gpio-502 (PAF.02              )\n gpio-503 (PAF.03              )\n gpio-504 (PAG.00              )\n gpio-505 (PAG.01              )\n gpio-506 (PAG.02              )\n gpio-507 (PAG.03              )\n gpio-508 (PAG.04              )\n gpio-509 (PAG.05              )\n gpio-510 (PAG.06              )\n gpio-511 (PAG.07              )\n"))),(0,i.yg)(l.A,{value:"Jetpack6",label:"Jetpack6",mdxType:"TabItem"},(0,i.yg)("p",null,"Execute the following inside a terminal to access it."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},"gpioinfo\n")),(0,i.yg)("p",null,"And you will see the output as follows"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-bash"},'seeed@seeed-desktop:~$ gpioinfo \ngpiochip0 - 164 lines:\n    line   0:      "PA.00" "regulator-vdd-3v3-sd" output active-high [used]\n    line   1:      "PA.01"       unused   input  active-high \n    line   2:      "PA.02"       unused   input  active-high \n    line   3:      "PA.03"       unused   input  active-high \n    line   4:      "PA.04"       unused   input  active-high \n    line   5:      "PA.05"       unused   input  active-high \n    line   6:      "PA.06"       unused   input  active-high \n    line   7:      "PA.07"       unused   input  active-high \n    line   8:      "PB.00"       unused   input  active-high \n    line   9:      "PC.00"       unused   input  active-high \n    line  10:      "PC.01"       unused   input  active-high \n    line  11:      "PC.02"       unused   input  active-high \n    line  12:      "PC.03"       unused   input  active-high \n    line  13:      "PC.04"       unused   input  active-high \n    line  14:      "PC.05"       unused   input  active-high \n    line  15:      "PC.06"       unused   input  active-high \n    line  16:      "PC.07"       unused   input  active-high \n    line  17:      "PD.00"       unused   input  active-high \n    line  18:      "PD.01"       unused   input  active-high \n    line  19:      "PD.02"       unused   input  active-high \n    line  20:      "PD.03"       unused   input  active-high \n    line  21:      "PE.00"       unused   input  active-high \n    line  22:      "PE.01"       unused   input  active-high \n    line  23:      "PE.02"       unused   input  active-high \n    line  24:      "PE.03"       unused   input  active-high \n    line  25:      "PE.04"       unused   input  active-high \n    line  26:      "PE.05"       unused   input  active-high \n    line  27:      "PE.06"       unused   input  active-high \n    line  28:      "PE.07"       unused   input  active-high \n    line  29:      "PF.00"       unused   input  active-high \n    line  30:      "PF.01"       unused   input  active-high \n    line  31:      "PF.02"       unused   input  active-high \n    line  32:      "PF.03"       unused   input  active-high \n    line  33:      "PF.04"       unused   input  active-high \n    line  34:      "PF.05"       unused   input  active-high \n    line  35:      "PG.00" "Force Recovery" input active-low [used]\n    line  36:      "PG.01"       unused   input  active-high \n    line  37:      "PG.02"    "Suspend"   input   active-low [used]\n    line  38:      "PG.03"       unused   input  active-high \n    line  39:      "PG.04"       unused   input  active-high \n    line  40:      "PG.05"       unused   input  active-high \n    line  41:      "PG.06"       unused   input  active-high \n    line  42:      "PG.07"       unused   input  active-high \n    line  43:      "PH.00"       unused   input  active-high \n    line  44:      "PH.01"       unused   input  active-high \n    line  45:      "PH.02"       unused   input  active-high \n    line  46:      "PH.03" "camera-control-output-low" output active-high [used]\n    line  47:      "PH.04"       unused   input  active-high \n    line  48:      "PH.05"       unused   input  active-high \n    line  49:      "PH.06"       unused  output  active-high \n    line  50:      "PH.07"       unused   input  active-high \n    line  51:      "PI.00"       unused  output  active-high \n    line  52:      "PI.01"       unused   input  active-high \n    line  53:      "PI.02"       unused   input  active-high \n    line  54:      "PI.03"       unused   input  active-high \n    line  55:      "PI.04"       unused   input  active-high \n    line  56:      "PI.05"       kernel   input  active-high [used]\n    line  57:      "PI.06"       unused   input  active-high \n    line  58:      "PJ.00"       unused   input  active-high \n    line  59:      "PJ.01"       unused   input  active-high \n    line  60:      "PJ.02"       unused   input  active-high \n    line  61:      "PJ.03"       unused   input  active-high \n    line  62:      "PJ.04"       unused   input  active-high \n    line  63:      "PJ.05"       unused   input  active-high \n    line  64:      "PK.00"       unused   input  active-high \n    line  65:      "PK.01"       unused   input  active-high \n    line  66:      "PK.02"       unused   input  active-high \n    line  67:      "PK.03"       unused   input  active-high \n    line  68:      "PK.04"       unused  output  active-high \n    line  69:      "PK.05"       unused  output  active-high \n    line  70:      "PK.06"       unused   input  active-high \n    line  71:      "PK.07"       unused   input  active-high \n    line  72:      "PL.00"       unused   input  active-high \n    line  73:      "PL.01"       unused   input  active-high \n    line  74:      "PL.02"       unused   input  active-high \n    line  75:      "PL.03"       unused   input  active-high \n    line  76:      "PM.00"       kernel   input  active-high [used]\n    line  77:      "PM.01"       unused   input  active-high \n    line  78:      "PM.02"       unused   input  active-high \n    line  79:      "PM.03"       unused   input  active-high \n    line  80:      "PM.04"       unused   input  active-high \n    line  81:      "PM.05"       unused   input  active-high \n    line  82:      "PM.06"       unused   input  active-high \n    line  83:      "PM.07"       unused   input  active-high \n    line  84:      "PN.00"       unused   input  active-high \n    line  85:      "PN.01"  "interrupt"   input  active-high [used]\n    line  86:      "PN.02"       unused   input  active-high \n    line  87:      "PN.03"       unused   input  active-high \n    line  88:      "PN.04"       unused   input  active-high \n    line  89:      "PN.05"       unused   input  active-high \n    line  90:      "PN.06"       unused   input  active-high \n    line  91:      "PN.07"       unused   input  active-high \n    line  92:      "PP.00"       unused   input  active-high \n    line  93:      "PP.01"       unused   input  active-high \n    line  94:      "PP.02"       unused   input  active-high \n    line  95:      "PP.03"       unused   input  active-high \n    line  96:      "PP.04"       unused   input  active-high \n    line  97:      "PP.05"       unused   input  active-high \n    line  98:      "PP.06"       unused   input  active-high \n    line  99:      "PP.07"       unused   input  active-high \n    line 100:      "PQ.00"       unused   input  active-high \n    line 101:      "PQ.01"       unused   input  active-high \n    line 102:      "PQ.02"       unused   input  active-high \n    line 103:      "PQ.03"       unused  output  active-high \n    line 104:      "PQ.04"       unused   input  active-high \n    line 105:      "PQ.05"       unused   input  active-high \n    line 106:      "PQ.06"       unused   input  active-high \n    line 107:      "PQ.07"       unused   input  active-high \n    line 108:      "PR.00"       unused   input  active-high \n    line 109:      "PR.01"       unused   input  active-high \n    line 110:      "PR.02"       unused   input  active-high \n    line 111:      "PR.03"       unused   input  active-high \n    line 112:      "PR.04"       unused   input  active-high \n    line 113:      "PR.05"       unused   input  active-high \n    line 114:      "PX.00"       kernel   input  active-high [used]\n    line 115:      "PX.01"       kernel   input  active-high [used]\n    line 116:      "PX.02"       unused   input  active-high \n    line 117:      "PX.03"       unused   input  active-high \n    line 118:      "PX.04"       unused   input  active-high \n    line 119:      "PX.05"       unused   input  active-high \n    line 120:      "PX.06"       unused   input  active-high \n    line 121:      "PX.07"       unused   input  active-high \n    line 122:      "PY.00"       unused   input  active-high \n    line 123:      "PY.01"       unused   input  active-high \n    line 124:      "PY.02"       unused   input  active-high \n    line 125:      "PY.03"       unused   input  active-high \n    line 126:      "PY.04"       unused   input  active-high \n    line 127:      "PY.05"       unused   input  active-high \n    line 128:      "PY.06"       unused   input  active-high \n    line 129:      "PY.07"       unused   input  active-high \n    line 130:      "PZ.00"       unused   input  active-high \n    line 131:      "PZ.01"       "vbus"   input   active-low [used]\n    line 132:      "PZ.02"       unused   input  active-high \n    line 133:      "PZ.03"       unused   input  active-high \n    line 134:      "PZ.04"       unused   input  active-high \n    line 135:      "PZ.05"       unused   input  active-high \n    line 136:      "PZ.06"   "spi0 CS0"  output   active-low [used]\n    line 137:      "PZ.07"       unused   input  active-high \n    line 138:     "PAC.00"       unused  output  active-high \n    line 139:     "PAC.01"       unused   input  active-high \n    line 140:     "PAC.02"       unused   input  active-high \n    line 141:     "PAC.03"       unused   input  active-high \n    line 142:     "PAC.04"       unused   input  active-high \n    line 143:     "PAC.05"       unused   input  active-high \n    line 144:     "PAC.06"       unused   input  active-high \n    line 145:     "PAC.07"       unused   input  active-high \n    line 146:     "PAD.00"       unused   input  active-high \n    line 147:     "PAD.01"       unused   input  active-high \n    line 148:     "PAD.02"       unused   input  active-high \n    line 149:     "PAD.03"       unused   input  active-high \n    line 150:     "PAE.00"       unused   input  active-high \n    line 151:     "PAE.01"       unused   input  active-high \n    line 152:     "PAF.00"       unused   input  active-high \n    line 153:     "PAF.01"       unused   input  active-high \n    line 154:     "PAF.02"       unused   input  active-high \n    line 155:     "PAF.03"       unused   input  active-high \n    line 156:     "PAG.00"       unused   input  active-high \n    line 157:     "PAG.01"       unused   input  active-high \n    line 158:     "PAG.02"       unused   input  active-high \n    line 159:     "PAG.03"       unused   input  active-high \n    line 160:     "PAG.04"       unused   input  active-high \n    line 161:     "PAG.05"       unused   input  active-high \n    line 162:     "PAG.06"       unused   input  active-high \n    line 163:     "PAG.07"       unused   input  active-high \ngpiochip1 - 32 lines:\n    line   0:     "PAA.00"       unused   input  active-high \n    line   1:     "PAA.01"       unused   input  active-high \n    line   2:     "PAA.02"       unused   input  active-high \n    line   3:     "PAA.03"       unused   input  active-high \n    line   4:     "PAA.04"       unused  output  active-high \n    line   5:     "PAA.05" "regulator-vdd-3v3-pcie" output active-high [used]\n    line   6:     "PAA.06"       unused   input  active-high \n    line   7:     "PAA.07"       unused   input  active-high \n    line   8:     "PBB.00"       unused   input  active-high \n    line   9:     "PBB.01"       unused   input  active-high \n    line  10:     "PBB.02"       unused   input  active-high \n    line  11:     "PBB.03"       unused  output  active-high \n    line  12:     "PCC.00"       unused  output  active-high \n    line  13:     "PCC.01"       unused  output  active-high \n    line  14:     "PCC.02"       unused  output  active-high \n    line  15:     "PCC.03"        "mux"  output  active-high [used]\n    line  16:     "PCC.04"       unused   input  active-high \n    line  17:     "PCC.05"       unused   input  active-high \n    line  18:     "PCC.06"       unused   input  active-high \n    line  19:     "PCC.07"       unused   input  active-high \n    line  20:     "PDD.00"       unused   input  active-high \n    line  21:     "PDD.01"       unused   input  active-high \n    line  22:     "PDD.02"       unused   input  active-high \n    line  23:     "PEE.00"       unused   input  active-high \n    line  24:     "PEE.01"       unused   input  active-high \n    line  25:     "PEE.02"       unused   input  active-high \n    line  26:     "PEE.03"       unused   input  active-high \n    line  27:     "PEE.04"      "Power"   input   active-low [used]\n    line  28:     "PEE.05"       unused   input  active-high \n    line  29:     "PEE.06"       unused   input  active-high \n    line  30:     "PEE.07"       unused   input  active-high \n    line  31:     "PGG.00"       unused   input  active-high \ngpiochip2 - 16 lines:\n    line   0:     "wl_dis" "gpio_xten_pin@0" output active-high [used]\n    line   1: "hst_wake_wl" "gpio_xten_pin@1" output active-high [used]\n    line   2: "wl_wake_hst" "gpio_xten_pin@2" output active-low [used]\n    line   3:     "bt_dis" "gpio_xten_pin@3" output active-high [used]\n    line   4: "hst_wake_bt" unused input active-high \n    line   5: "bt_wake_hst" unused input active-high \n    line   6: "spi0_rst_3v3" "gpio_xten_pin@6" output active-low [used]\n    line   7:  "gpio_pin7" "gpio_xten_pin@7" output active-low [used]\n    line   8: "can_120R_en" unused input active-high \n    line   9: "M2B_PCIe_rst" unused input active-high \n    line  10: "USB_HUB_rst" "gpio_xten_pin@10" output active-high [used]\n    line  11: "PCIe_ETH_rst" unused input active-high \n    line  12: "M2B_WOWWAN"       unused   input  active-high \n    line  13: "M2B_DPR_3V3" unused input active-high \n    line  14: "SIM_MUX_SEL" unused input active-high \n    line  15: "gpio_pin15"       unused   input  active-high \n')))),(0,i.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,i.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,i.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,i.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}h.isMDXComponent=!0}}]);