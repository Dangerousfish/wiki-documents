"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8281],{15680:(e,n,i)=>{i.d(n,{xA:()=>p,yg:()=>c});var t=i(96540);function r(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function a(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){r(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,r=function(e,n){if(null==e)return{};var i,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||(r[i]=e[i]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var o=t.createContext({}),_=function(e){var n=t.useContext(o),i=n;return e&&(i="function"==typeof e?e(n):a(a({},n),e)),i},p=function(e){var n=_(e.components);return t.createElement(o.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var i=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=_(i),g=r,c=d["".concat(o,".").concat(g)]||d[g]||u[g]||s;return i?t.createElement(c,a(a({ref:n},p),{},{components:i})):t.createElement(c,a({ref:n},p))}));function c(e,n){var i=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=i.length,a=new Array(s);a[0]=g;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var _=2;_<s;_++)a[_]=i[_];return t.createElement.apply(null,a)}return t.createElement.apply(null,i)}g.displayName="MDXCreateElement"},31021:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>_});var t=i(9668),r=(i(96540),i(15680));const s={description:"\u5173\u952e\u8bcd\u8bc6\u522b",title:"\u5173\u952e\u8bcd\u8bc6\u522b",keywords:["tinyml course"],image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/cn/tinyml_course_Key_Word_Spotting",last_update:{date:"11/27/2024",author:"Agnes"}},a=void 0,l={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_Key_Word_Spotting",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_Key_Word_Spotting",title:"\u5173\u952e\u8bcd\u8bc6\u522b",description:"\u5173\u952e\u8bcd\u8bc6\u522b",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_Key_Word_Spotting.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse",slug:"/cn/tinyml_course_Key_Word_Spotting",permalink:"/cn/tinyml_course_Key_Word_Spotting",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3_Sense/Edgeimpulse/CN_Key_Word_Spotting.md",tags:[],version:"current",lastUpdatedBy:"Agnes",lastUpdatedAt:1732665600,formattedLastUpdatedAt:"Nov 27, 2024",frontMatter:{description:"\u5173\u952e\u8bcd\u8bc6\u522b",title:"\u5173\u952e\u8bcd\u8bc6\u522b",keywords:["tinyml course"],image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/cn/tinyml_course_Key_Word_Spotting",last_update:{date:"11/27/2024",author:"Agnes"}},sidebar:"CNSidebar",previous:{title:"\u56fe\u50cf\u5206\u7c7b",permalink:"/cn/tinyml_course_Image_classification_project"},next:{title:"\u57fa\u4e8e XIAO ESP32S3 Sense \u7684\u5fae\u578b ChatGPT \u8bed\u97f3\u52a9\u624b",permalink:"/cn/xiao_esp32s3_speech2chatgpt"}},o={},_=[{value:"\u5728 XIAO ESP32S3 Sense \u4e0a\u5b9e\u73b0 Edge Impulse KWS \u5e94\u7528",id:"\u5728-xiao-esp32s3-sense-\u4e0a\u5b9e\u73b0-edge-impulse-kws-\u5e94\u7528",level:3},{value:"2.3.1 \u5165\u95e8",id:"231-\u5165\u95e8",level:4},{value:"\u786c\u4ef6",id:"\u786c\u4ef6",level:5},{value:"\u8f6f\u4ef6",id:"\u8f6f\u4ef6",level:5},{value:"2.3.2 \u6355\u83b7\uff08\u79bb\u7ebf\uff09\u97f3\u9891\u6570\u636e",id:"232-\u6355\u83b7\u79bb\u7ebf\u97f3\u9891\u6570\u636e",level:4},{value:"\u6b65\u9aa4 1. \u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3a .wav \u97f3\u9891\u6587\u4ef6\u5230 microSD \u5361\u3002",id:"\u6b65\u9aa4-1-\u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3a-wav-\u97f3\u9891\u6587\u4ef6\u5230-microsd-\u5361",level:5},{value:"2.3.3 \u8bad\u7ec3\u6570\u636e\u91c7\u96c6",id:"233-\u8bad\u7ec3\u6570\u636e\u91c7\u96c6",level:4},{value:"\u6b65\u9aa42. \u4e0a\u4f20\u6536\u96c6\u7684\u58f0\u97f3\u6570\u636e",id:"\u6b65\u9aa42-\u4e0a\u4f20\u6536\u96c6\u7684\u58f0\u97f3\u6570\u636e",level:5},{value:"\u6b65\u9aa43. \u521b\u5efaImpulse\uff08\u9884\u5904\u7406 / \u6a21\u578b\u5b9a\u4e49\uff09",id:"\u6b65\u9aa43-\u521b\u5efaimpulse\u9884\u5904\u7406--\u6a21\u578b\u5b9a\u4e49",level:5},{value:"\u6b65\u9aa4 4. \u9884\u5904\u7406\uff08MFCC\uff09",id:"\u6b65\u9aa4-4-\u9884\u5904\u7406mfcc",level:5},{value:"2.3.4 \u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b",id:"234-\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b",level:4},{value:"\u6b65\u9aa4 5. \u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3",id:"\u6b65\u9aa4-5-\u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3",level:5},{value:"2.3.5 \u90e8\u7f72\u5230XIAO ESP32S3 Sense",id:"235-\u90e8\u7f72\u5230xiao-esp32s3-sense",level:4},{value:"\u6b65\u9aa4 6. \u90e8\u7f72\u5230XIAO ESP32S3 Sense",id:"\u6b65\u9aa4-6-\u90e8\u7f72\u5230xiao-esp32s3-sense",level:5},{value:"\u7279\u522b\u611f\u8c22",id:"\u7279\u522b\u611f\u8c22",level:4}],p={toc:_},d="wrapper";function u(e){let{components:n,...i}=e;return(0,r.yg)(d,(0,t.A)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h3",{id:"\u5728-xiao-esp32s3-sense-\u4e0a\u5b9e\u73b0-edge-impulse-kws-\u5e94\u7528"},"\u5728 XIAO ESP32S3 Sense \u4e0a\u5b9e\u73b0 Edge Impulse KWS \u5e94\u7528"),(0,r.yg)("p",null,"\u672c\u6559\u7a0b\u5c06\u6307\u5bfc\u60a8\u5982\u4f55\u4f7f\u7528 TinyML \u5728 XIAO ESP32S3 Sense \u5fae\u63a7\u5236\u5668\u677f\u4e0a\u5b9e\u73b0\u5173\u952e\u5b57\u68c0\u6d4b\uff08KWS\uff09\u7cfb\u7edf\uff0c\u5e76\u901a\u8fc7 Edge Impulse \u5b8c\u6210\u6570\u636e\u6536\u96c6\u548c\u6a21\u578b\u8bad\u7ec3\u3002KWS \u5bf9\u4e8e\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\uff0c\u501f\u52a9 TinyML \u7684\u5f3a\u5927\u529f\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u66f4\u5c0f\u3001\u66f4\u4f4e\u529f\u8017\u7684\u8bbe\u5907\u4e0a\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002\u8ba9\u6211\u4eec\u4f7f\u7528 Edge Impulse \u548c XIAO ESP32S3 Sense \u6784\u5efa\u6211\u4eec\u81ea\u5df1\u7684 KWS \u7cfb\u7edf\uff01"),(0,r.yg)("h4",{id:"231-\u5165\u95e8"},"2.3.1 \u5165\u95e8"),(0,r.yg)("p",null,"\u5728\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\u4e4b\u524d\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u51c6\u5907\u6240\u9700\u7684\u8f6f\u4ef6\u548c\u786c\u4ef6\u3002"),(0,r.yg)("h5",{id:"\u786c\u4ef6"},"\u786c\u4ef6"),(0,r.yg)("p",null,"\u4e3a\u4e86\u987a\u5229\u8fdb\u884c\u6b64\u9879\u76ee\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u786c\u4ef6\uff1a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"XIAO ESP32S3 Sense"),(0,r.yg)("li",{parentName:"ul"},"microSD \u5361\uff08\u4e0d\u8d85\u8fc7 32GB\uff09"),(0,r.yg)("li",{parentName:"ul"},"microSD \u5361\u8bfb\u5361\u5668"),(0,r.yg)("li",{parentName:"ul"},"USB-C \u6570\u636e\u7ebf")),(0,r.yg)("p",null,"\u5c06 microSD \u5361\u63d2\u5165 microSD \u5361\u69fd\u3002\u8bf7\u6ce8\u610f\u63d2\u5165\u65b9\u5411\uff0c\u5e26\u6709\u91d1\u624b\u6307\u7684\u4e00\u9762\u5e94\u671d\u5185\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/66.jpg",style:{width:500,height:"auto"}})),(0,r.yg)("h5",{id:"\u8f6f\u4ef6"},"\u8f6f\u4ef6"),(0,r.yg)("p",null,"\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 XIAO ESP32S3 Sense\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u5728\u5f00\u59cb\u4e4b\u524d\u9605\u8bfb\u4ee5\u4e0b\u4e24\u4e2a Wiki \u9875\u9762\uff0c\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u5b83\uff1a"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32s3_getting_started/"},"Seeed Studio XIAO ESP32S3 \u5165\u95e8")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/xiao_esp32s3_sense_mic/"},"Seeed Studio XIAO ESP32S3 \u9ea6\u514b\u98ce\u4f7f\u7528\u8bf4\u660e"))),(0,r.yg)("h4",{id:"232-\u6355\u83b7\u79bb\u7ebf\u97f3\u9891\u6570\u636e"},"2.3.2 \u6355\u83b7\uff08\u79bb\u7ebf\uff09\u97f3\u9891\u6570\u636e"),(0,r.yg)("h5",{id:"\u6b65\u9aa4-1-\u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3a-wav-\u97f3\u9891\u6587\u4ef6\u5230-microsd-\u5361"},"\u6b65\u9aa4 1. \u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3a .wav \u97f3\u9891\u6587\u4ef6\u5230 microSD \u5361\u3002"),(0,r.yg)("p",null,"\u6211\u4eec\u5c06\u4f7f\u7528\u677f\u8f7d SD \u5361\u8bfb\u5361\u5668\u4fdd\u5b58 .wav \u97f3\u9891\u6587\u4ef6\uff0c\u9996\u5148\u9700\u8981\u542f\u7528 XIAO \u7684 PSRAM\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/94.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u7136\u540e\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u7a0b\u5e8f\u5230 XIAO ESP32S3\u3002"),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"\u6b64\u4ee3\u7801\u4f7f\u7528 Seeed XIAO ESP32S3 Sense \u677f\u7684 I2S \u63a5\u53e3\u5f55\u5236\u97f3\u9891\uff0c\u5c06\u5f55\u97f3\u4fdd\u5b58\u4e3a .wav \u6587\u4ef6\u5230 SD \u5361\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7\u4e32\u53e3\u76d1\u89c6\u5668\u53d1\u9001\u547d\u4ee4\u63a7\u5236\u5f55\u97f3\u8fc7\u7a0b\u3002\u97f3\u9891\u6587\u4ef6\u7684\u540d\u79f0\u662f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\uff08\u5e94\u8be5\u662f\u8bad\u7ec3\u65f6\u4f7f\u7528\u7684\u7c7b\u6807\u7b7e\uff09\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u591a\u6b21\u5f55\u5236\uff0c\u6bcf\u6b21\u5f55\u5236\u90fd\u4f1a\u4fdd\u5b58\u5728\u65b0\u6587\u4ef6\u4e2d\u3002\u4ee3\u7801\u8fd8\u5305\u62ec\u589e\u52a0\u5f55\u97f3\u97f3\u91cf\u7684\u529f\u80fd\u3002")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n * Seeed XIAO ESP32S3 Sense WAV \u5f55\u97f3\u5668 \n * \n * \u6ce8\u610f\uff1a\u8981\u6267\u884c\u6b64\u4ee3\u7801\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 ESP-32 \u82af\u7247\u7684 PSRAM \u529f\u80fd\uff0c\n * \u6240\u4ee5\u5728\u4e0a\u4f20\u4ee3\u7801\u524d\uff0c\u8bf7\u5148\u542f\u7528\u5b83\u3002\n * \u5de5\u5177 > PSRAM: "OPI PSRAM"\n * \n * \u7531 M.Rovai @May23 \u4fee\u6539\u81ea\u539f\u59cb Seeed \u4ee3\u7801\n*/\n\n#include <I2S.h>\n#include "FS.h"\n#include "SD.h"\n#include "SPI.h"\n\n// \u6839\u636e\u9700\u8981\u4fee\u6539\n#define RECORD_TIME   10  // \u79d2\uff0c\u6700\u5927\u503c\u4e3a 240\n#define WAV_FILE_NAME "data"\n\n// \u6700\u4f73\u914d\u7f6e\uff0c\u52ff\u66f4\u6539\n#define SAMPLE_RATE 16000U\n#define SAMPLE_BITS 16\n#define WAV_HEADER_SIZE 44\n#define VOLUME_GAIN 2\n\nint fileNumber = 1;\nString baseFileName;\nbool isRecording = false;\n\nvoid setup() {\n  Serial.begin(115200);\n  while (!Serial) ;\n  \n  I2S.setAllPins(-1, 42, 41, -1, -1);\n  if (!I2S.begin(PDM_MONO_MODE, SAMPLE_RATE, SAMPLE_BITS)) {\n    Serial.println("\u521d\u59cb\u5316 I2S \u5931\u8d25\uff01");\n    while (1) ;\n  }\n  if(!SD.begin(21)){\n    Serial.println("\u6302\u8f7d SD \u5361\u5931\u8d25\uff01");\n    while (1) ;\n  }\n  Serial.printf("\u8bf7\u8f93\u5165\u6807\u7b7e\u540d\u79f0\\n");\n  //record_wav();\n}\n\nvoid loop() {\n  if (Serial.available() > 0) {\n    String command = Serial.readStringUntil(\'\\n\');\n    command.trim();\n    if (command == "rec") {\n      isRecording = true;\n    } else {\n      baseFileName = command;\n      fileNumber = 1; // \u6bcf\u6b21\u8bbe\u7f6e\u65b0\u6807\u7b7e\u540d\u79f0\u65f6\u91cd\u7f6e\u6587\u4ef6\u7f16\u53f7\n      Serial.printf("\u53d1\u9001 \'rec\' \u5f00\u59cb\u5f55\u5236\u6807\u7b7e\\n");\n    }\n  }\n  if (isRecording && baseFileName != "") {\n    String fileName = "/" + baseFileName + "." + String(fileNumber) + ".wav";\n    fileNumber++;\n    record_wav(fileName);\n    delay(1000); // \u5ef6\u8fdf\u4ee5\u907f\u514d\u540c\u65f6\u5f55\u5236\u591a\u4e2a\u6587\u4ef6\n    isRecording = false;\n  }\n}\n\nvoid record_wav(String fileName)\n{\n  uint32_t sample_size = 0;\n  uint32_t record_size = (SAMPLE_RATE * SAMPLE_BITS / 8) * RECORD_TIME;\n  uint8_t *rec_buffer = NULL;\n  Serial.printf("\u5f00\u59cb\u5f55\u97f3...\\n");\n   \n  File file = SD.open(fileName.c_str(), FILE_WRITE);\n  // \u5199\u5165 WAV \u6587\u4ef6\u5934\n  uint8_t wav_header[WAV_HEADER_SIZE];\n  generate_wav_header(wav_header, record_size, SAMPLE_RATE);\n  file.write(wav_header, WAV_HEADER_SIZE);\n\n  // \u4f7f\u7528 PSRAM \u4e3a\u5f55\u97f3\u5206\u914d\u5185\u5b58\n  rec_buffer = (uint8_t *)ps_malloc(record_size);\n  if (rec_buffer == NULL) {\n    Serial.printf("\u5185\u5b58\u5206\u914d\u5931\u8d25\uff01\\n");\n    while(1) ;\n  }\n  Serial.printf("\u7f13\u51b2\u533a: %d \u5b57\u8282\\n", ESP.getPsramSize() - ESP.getFreePsram());\n\n  // \u5f00\u59cb\u5f55\u97f3\n  esp_i2s::i2s_read(esp_i2s::I2S_NUM_0, rec_buffer, record_size, &sample_size, portMAX_DELAY);\n  if (sample_size == 0) {\n    Serial.printf("\u5f55\u97f3\u5931\u8d25\uff01\\n");\n  } else {\n    Serial.printf("\u5f55\u97f3 %d \u5b57\u8282\\n", sample_size);\n  }\n\n  // \u589e\u52a0\u97f3\u91cf\n  for (uint32_t i = 0; i < sample_size; i += SAMPLE_BITS/8) {\n    (*(uint16_t *)(rec_buffer+i)) <<= VOLUME_GAIN;\n  }\n\n  // \u5199\u5165\u6570\u636e\u5230 WAV \u6587\u4ef6\n  Serial.printf("\u5199\u5165\u6587\u4ef6...\\n");\n  if (file.write(rec_buffer, record_size) != record_size)\n    Serial.printf("\u5199\u5165\u6587\u4ef6\u5931\u8d25\uff01\\n");\n\n  free(rec_buffer);\n  file.close();\n  Serial.printf("\u5f55\u97f3\u5b8c\u6210\uff1a\\n");\n  Serial.printf("\u53d1\u9001 \'rec\' \u83b7\u53d6\u65b0\u6837\u672c\uff0c\u6216\u8f93\u5165\u65b0\u6807\u7b7e\\n\\n");\n}\n\nvoid generate_wav_header(uint8_t *wav_header, uint32_t wav_size, uint32_t sample_rate) \n{\n  // \u53c2\u8003\u8d44\u6599\uff1ahttps://soundfile.sapp.org/doc/WaveFormat/\n  uint32_t file_size = wav_size + WAV_HEADER_SIZE - 8;\n  uint32_t byte_rate = SAMPLE_RATE * SAMPLE_BITS / 8;\n  const uint8_t set_wav_header[] = {\n    \'R\', \'I\', \'F\', \'F\', // ChunkID\n    file_size, file_size >> 8, file_size >> 16, file_size >> 24, // ChunkSize\n    \'W\', \'A\', \'V\', \'E\', // Format\n    \'f\', \'m\', \'t\', \' \', // Subchunk1ID\n    0x10, 0x00, 0x00, 0x00, // Subchunk1Size (PCM\u65f6\u4e3a16)\n    0x01, 0x00, // AudioFormat (PCM\u65f6\u4e3a1)\n    0x01, 0x00, // NumChannels (1\u901a\u9053)\n    sample_rate, sample_rate >> 8, sample_rate >> 16, sample_rate >> 24, // SampleRate\n    byte_rate, byte_rate >> 8, byte_rate >> 16, byte_rate >> 24, // ByteRate\n    0x02, 0x00, // BlockAlign\n    0x10, 0x00, // BitsPerSample (16\u4f4d)\n    \'d\', \'a\', \'t\', \'a\', // Subchunk2ID\n    wav_size, wav_size >> 8, wav_size >> 16, wav_size >> 24, // Subchunk2Size\n  };\n  memcpy(wav_header, set_wav_header, sizeof(set_wav_header));\n}\n')),(0,r.yg)("p",null,"\u73b0\u5728\uff0c\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230XIAO\uff0c\u5e76\u4ece\u5173\u952e\u8bcd\uff08\u5982hello\u548cstop\uff09\u4e2d\u83b7\u53d6\u6837\u672c\u3002\u60a8\u8fd8\u53ef\u4ee5\u6355\u83b7\u566a\u58f0\u548c\u5176\u4ed6\u8bcd\u6c47\u3002\u4e32\u53e3\u76d1\u89c6\u5668\u5c06\u63d0\u793a\u60a8\u8f93\u5165\u8981\u5f55\u5236\u7684\u6807\u7b7e\u3002"),(0,r.yg)("p",null,"\u53d1\u9001\u6807\u7b7e\uff08\u4f8b\u5982\uff0c",(0,r.yg)("strong",{parentName:"p"},"hello"),"\uff09\u3002\u7a0b\u5e8f\u5c06\u7b49\u5f85\u53e6\u4e00\u4e2a\u547d\u4ee4\uff1a",(0,r.yg)("strong",{parentName:"p"},"rec"),"\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/2.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u6bcf\u6b21\u53d1\u9001\u547d\u4ee4",(0,r.yg)("strong",{parentName:"p"},"rec"),"\u65f6\uff0c\u7a0b\u5e8f\u5c06\u5f00\u59cb\u5f55\u5236\u65b0\u7684\u6837\u672c\u3002\u6587\u4ef6\u5c06\u4fdd\u5b58\u4e3ahello.1.wav, hello.2.wav, hello.3.wav\u7b49\uff0c\u76f4\u5230\u53d1\u9001\u65b0\u7684\u6807\u7b7e\uff08\u4f8b\u5982\uff0c",(0,r.yg)("strong",{parentName:"p"},"stop"),"\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e94\u4e3a\u6bcf\u4e2a\u65b0\u6837\u672c\u53d1\u9001",(0,r.yg)("strong",{parentName:"p"},"rec"),"\u547d\u4ee4\uff0c\u8fd9\u4e9b\u6837\u672c\u5c06\u4fdd\u5b58\u4e3astop.1.wav, stop.2.wav, stop.3.wav\u7b49\u3002"),(0,r.yg)("p",null,"\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u83b7\u5f97\u4fdd\u5b58\u5728SD\u5361\u4e0a\u7684\u6587\u4ef6\u3002"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"\u6211\u4eec\u5efa\u8bae\u60a8\u4e3a\u6bcf\u4e2a\u6807\u7b7e\u51c6\u5907\u8db3\u591f\u7684\u58f0\u97f3\u6837\u672c\u3002\u60a8\u53ef\u4ee5\u5728\u6bcf\u6b21\u5341\u79d2\u7684\u5f55\u97f3\u8fc7\u7a0b\u4e2d\u591a\u6b21\u91cd\u590d\u5173\u952e\u8bcd\uff0c\u540e\u7eed\u6211\u4eec\u5c06\u5728\u6b65\u9aa4\u4e2d\u5bf9\u6837\u672c\u8fdb\u884c\u5207\u5206\u3002\u4f46\u5173\u952e\u8bcd\u4e4b\u95f4\u9700\u8981\u4fdd\u6301\u4e00\u5b9a\u95f4\u9694\u3002")),(0,r.yg)("h4",{id:"233-\u8bad\u7ec3\u6570\u636e\u91c7\u96c6"},"2.3.3 \u8bad\u7ec3\u6570\u636e\u91c7\u96c6"),(0,r.yg)("h5",{id:"\u6b65\u9aa42-\u4e0a\u4f20\u6536\u96c6\u7684\u58f0\u97f3\u6570\u636e"},"\u6b65\u9aa42. \u4e0a\u4f20\u6536\u96c6\u7684\u58f0\u97f3\u6570\u636e"),(0,r.yg)("p",null,"\u5f53\u539f\u59cb\u6570\u636e\u96c6\u88ab\u5b9a\u4e49\u548c\u6536\u96c6\u540e\uff0c\u6211\u4eec\u5e94\u8be5\u5728",(0,r.yg)("a",{parentName:"p",href:"https://edgeimpulse.com/"},"Edge Impulse"),"\u4e0a\u542f\u52a8\u4e00\u4e2a\u65b0\u9879\u76ee\u3002\u521b\u5efa\u9879\u76ee\u540e\uff0c\u5728",(0,r.yg)("strong",{parentName:"p"},"\u6570\u636e\u91c7\u96c6"),"\u90e8\u5206\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"\u4e0a\u4f20\u73b0\u6709\u6570\u636e"),"\u5de5\u5177\uff0c\u9009\u62e9\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/3.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u7136\u540e\u5c06\u5b83\u4eec\u4e0a\u4f20\u5230Studio\uff08\u60a8\u53ef\u4ee5\u81ea\u52a8\u5c06\u6570\u636e\u5212\u5206\u4e3a\u8bad\u7ec3/\u6d4b\u8bd5\u6570\u636e\uff09\u3002\u4e3a\u6240\u6709\u7c7b\u522b\u548c\u539f\u59cb\u6570\u636e\u91cd\u590d\u6b64\u64cd\u4f5c\u3002"),(0,r.yg)("p",null,"\u6570\u636e\u96c6\u4e2d\u7684\u6240\u6709\u6570\u636e\u90fd\u662f1\u79d2\u957f\u7684\uff0c\u4f46\u5728\u4e0a\u4e00\u8282\u4e2d\u5f55\u5236\u7684\u6837\u672c\u662f10\u79d2\u7684\uff0c\u5fc5\u987b\u5c06\u5176\u5207\u5206\u4e3a1\u79d2\u7684\u6837\u672c\u4ee5\u517c\u5bb9\u3002\u70b9\u51fb\u6837\u672c\u540d\u79f0\u540e\u7684\u4e09\u4e2a\u70b9\uff0c\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"\u5207\u5206\u6837\u672c"),"\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/5.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u8fdb\u5165\u5de5\u5177\u540e\uff0c\u5c06\u6570\u636e\u5207\u5206\u4e3a1\u79d2\u7684\u8bb0\u5f55\u3002\u5982\u679c\u9700\u8981\uff0c\u6dfb\u52a0\u6216\u5220\u9664\u6bb5\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/4.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u6b64\u8fc7\u7a0b\u5e94\u5bf9\u6240\u6709\u6837\u672c\u91cd\u590d\u8fdb\u884c\u3002"),(0,r.yg)("h5",{id:"\u6b65\u9aa43-\u521b\u5efaimpulse\u9884\u5904\u7406--\u6a21\u578b\u5b9a\u4e49"},"\u6b65\u9aa43. \u521b\u5efaImpulse\uff08\u9884\u5904\u7406 / \u6a21\u578b\u5b9a\u4e49\uff09"),(0,r.yg)("p",null,"Impulse\u5904\u7406\u539f\u59cb\u6570\u636e\uff0c\u4f7f\u7528\u4fe1\u53f7\u5904\u7406\u63d0\u53d6\u7279\u5f81\uff0c\u7136\u540e\u4f7f\u7528\u5b66\u4e60\u6a21\u5757\u6765\u5206\u7c7b\u65b0\u6570\u636e\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/6.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f7f\u75281\u79d2\u7a97\u53e3\u7684\u6570\u636e\u70b9\uff0c\u589e\u5f3a\u6570\u636e\uff0c\u5e76\u5c06\u8be5\u7a97\u53e3\u6bcf500ms\u6ed1\u52a8\u4e00\u6b21\u3002\u8bf7\u6ce8\u610f\uff0c",(0,r.yg)("strong",{parentName:"p"},"\u96f6\u586b\u5145\u6570\u636e"),"\u9009\u9879\u5df2\u8bbe\u7f6e\u3002\u8fd9\u5bf9\u4e8e\u586b\u5145\u5c0f\u4e8e1\u79d2\u7684\u6837\u672c\uff08\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u5c061000\u6beb\u79d2\u7a97\u53e3\u7f29\u77ed\u5230",(0,r.yg)("strong",{parentName:"p"},"\u5207\u5206\u5de5\u5177"),"\u4e2d\u7684\u503c\u4ee5\u907f\u514d\u566a\u58f0\u548c\u5c16\u5cf0\uff09\u975e\u5e38\u91cd\u8981\u3002"),(0,r.yg)("p",null,"\u6bcf\u4e2a1\u79d2\u7684\u97f3\u9891\u6837\u672c\u90fd\u5e94\u8fdb\u884c\u9884\u5904\u7406\u5e76\u8f6c\u6362\u4e3a\u56fe\u50cf\uff08\u4f8b\u5982\uff0c13 x 49 x 1\uff09\u3002\u6211\u4eec\u5c06\u4f7f\u7528MFCC\uff0c\u5b83\u901a\u8fc7Mel\u9891\u7387\u5012\u8c31\u7cfb\u6570\u4ece\u97f3\u9891\u4fe1\u53f7\u4e2d\u63d0\u53d6\u7279\u5f81\uff0c\u975e\u5e38\u9002\u5408\u4eba\u58f0\u3002"),(0,r.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"KERAS"),"\u8fdb\u884c\u5206\u7c7b\uff0c\u5b83\u901a\u8fc7\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u6211\u4eec\u7684\u6a21\u578b\u8fdb\u884c\u56fe\u50cf\u5206\u7c7b\u3002"),(0,r.yg)("h5",{id:"\u6b65\u9aa4-4-\u9884\u5904\u7406mfcc"},"\u6b65\u9aa4 4. \u9884\u5904\u7406\uff08MFCC\uff09"),(0,r.yg)("p",null,"\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u7528\u4e8e\u5728\u4e0b\u4e00\u9636\u6bb5\u8fdb\u884c\u8bad\u7ec3\u7684\u56fe\u50cf\u3002\u6211\u4eec\u53ef\u4ee5\u4fdd\u7559\u9ed8\u8ba4\u7684\u53c2\u6570\u503c\uff0c\u6216\u8005\u5229\u7528DSP\u7684",(0,r.yg)("strong",{parentName:"p"},"Autotuneparameters\u9009\u9879"),"\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u540e\u8005\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/7.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h4",{id:"234-\u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b"},"2.3.4 \u6784\u5efa\u673a\u5668\u5b66\u4e60\u6a21\u578b"),(0,r.yg)("h5",{id:"\u6b65\u9aa4-5-\u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3"},"\u6b65\u9aa4 5. \u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3"),(0,r.yg)("p",null,"\u6211\u4eec\u5c06\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08CNN\uff09\u6a21\u578b\u3002\u57fa\u672c\u67b6\u6784\u5b9a\u4e49\u4e3a\u4e24\u4e2a\u5377\u79ef\u5757Conv1D + \u6700\u5927\u6c60\u5316\uff08\u5206\u522b\u4f7f\u75288\u548c16\u4e2a\u795e\u7ecf\u5143\uff09\uff0c\u5e76\u8bbe\u7f6e0.25\u7684Dropout\u3002\u5728\u6700\u540e\u4e00\u5c42\uff0c\u7ecf\u8fc7Flatten\u5904\u7406\u540e\u6709\u56db\u4e2a\u795e\u7ecf\u5143\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u5bf9\u5e94\u4e00\u4e2a\u7c7b\u522b\u3002"),(0,r.yg)("p",null,"\u4f5c\u4e3a\u8d85\u53c2\u6570\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u7387\u8bbe\u7f6e\u4e3a0.005\uff0c\u5e76\u901a\u8fc7100\u4e2aepochs\u8fdb\u884c\u8bad\u7ec3\u3002\u6211\u4eec\u8fd8\u5c06\u52a0\u5165\u6570\u636e\u589e\u5f3a\uff0c\u4f8b\u5982\u6dfb\u52a0\u566a\u58f0\u3002\u7ed3\u679c\u4f3c\u4e4e\u4e0d\u9519\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/8.png",style:{width:600,height:"auto"}})),(0,r.yg)("h4",{id:"235-\u90e8\u7f72\u5230xiao-esp32s3-sense"},"2.3.5 \u90e8\u7f72\u5230XIAO ESP32S3 Sense"),(0,r.yg)("h5",{id:"\u6b65\u9aa4-6-\u90e8\u7f72\u5230xiao-esp32s3-sense"},"\u6b65\u9aa4 6. \u90e8\u7f72\u5230XIAO ESP32S3 Sense"),(0,r.yg)("p",null,"Edge Impulse\u5c06\u6253\u5305\u6240\u6709\u6240\u9700\u7684\u5e93\u3001\u9884\u5904\u7406\u51fd\u6570\u548c\u8bad\u7ec3\u6a21\u578b\uff0c\u5e76\u5c06\u5176\u4e0b\u8f7d\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002\u60a8\u5e94\u8be5\u9009\u62e9Arduino\u5e93\u9009\u9879\uff0c\u5e76\u5728\u5e95\u90e8\u9009\u62e9\u91cf\u5316\uff08Int8\uff09\uff0c\u7136\u540e\u70b9\u51fb\u201cBuild\u201d\u6309\u94ae\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/9.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u5c3d\u7ba1Edge Impulse\u5c1a\u672a\u53d1\u5e03\u5176\u7528\u4e8eESP32S3\u7684SDK\u6765\u652f\u6301ESP NN\u52a0\u901f\u5668\uff0c\u4f46\u5f97\u76ca\u4e8eDmitry Maslov\u7684\u8d21\u732e\uff0c\u6211\u4eec\u53ef\u4ee5\u6062\u590d\u5176\u6c47\u7f16\u4f18\u5316\uff0c\u5e76\u5c06\u5176\u4fee\u590d\u4e3aESP32-S3\u7684\u517c\u5bb9\u7248\u672c\u3002\u8be5\u89e3\u51b3\u65b9\u6848\u5c1a\u672a\u6b63\u5f0f\u53d1\u5e03\uff0c\u4e00\u65e6\u89e3\u51b3\u4e0e\u5176\u4ed6\u5f00\u53d1\u677f\u7684\u51b2\u7a81\uff0cEI\u5c06\u4f1a\u5c06\u5176\u5305\u542b\u5728EI SDK\u4e2d\u3002"),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"\u76ee\u524d\uff0c\u8fd9\u53ea\u9002\u7528\u4e8e\u975eEON\u7248\u672c\u3002\u56e0\u6b64\uff0c\u60a8\u8fd8\u5e94\u8be5\u786e\u4fdd\u672a\u9009\u4e2d",(0,r.yg)("strong",{parentName:"p"},"\u542f\u7528EON\u7f16\u8bd1\u5668"),"\u9009\u9879\u3002")),(0,r.yg)("p",null,"\u5f53\u9009\u62e9\u201cBuild\u201d\u6309\u94ae\u540e\uff0c\u4f1a\u521b\u5efa\u5e76\u4e0b\u8f7d\u4e00\u4e2aZip\u6587\u4ef6\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u3002"),(0,r.yg)("p",null,"\u5728\u4f7f\u7528\u4e0b\u8f7d\u7684\u5e93\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u542f\u7528",(0,r.yg)("strong",{parentName:"p"},"ESP NN"),"\u52a0\u901f\u5668\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4ece",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Mjrovai/XIAO-ESP32S3-Sense/blob/main/ESP-NN.zip"},"\u9879\u76eeGitHub"),"\u4e0b\u8f7d\u4e00\u4e2a\u521d\u6b65\u7248\u672c\uff0c\u89e3\u538b\u540e\u5c06ESP NN\u6587\u4ef6\u5939\u66ff\u6362\u4e3a\u60a8\u7684Arduino\u5e93\u6587\u4ef6\u5939\u4e2d\u7684",(0,r.yg)("inlineCode",{parentName:"p"},"src/edge-impulse-sdk/porting/espressif/ESP-NN"),"\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/10.png",style:{width:800,height:"auto"}})),(0,r.yg)("p",null,"\u5728\u60a8\u7684Arduino IDE\u4e2d\uff0c\u8f6c\u5230",(0,r.yg)("strong",{parentName:"p"},"Sketch"),"\u6807\u7b7e\uff0c\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"\u6dfb\u52a0.ZIP\u5e93"),"\u9009\u9879\uff0c\u7136\u540e\u9009\u62e9Edge Impulse\u4e0b\u8f7d\u7684.zip\u6587\u4ef6\u3002"),(0,r.yg)("p",null,"\u60a8\u53ef\u4ee5\u5728",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Mjrovai/XIAO-ESP32S3-Sense/tree/main/xiao_esp32s3_microphone_led"},"\u9879\u76ee\u7684GitHub"),"\u4e0a\u627e\u5230\u5b8c\u6574\u4ee3\u7801\u3002\u5c06\u8349\u56fe\u4e0a\u4f20\u5230\u60a8\u7684\u5f00\u53d1\u677f\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u5b9e\u9645\u63a8\u7406\u6d4b\u8bd5\u3002"),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"\u4ee3\u7801\u4e2d\u5bfc\u5165\u7684\u5e93\u9700\u8981\u66f4\u65b0\u4e3a\u60a8\u5b9e\u9645\u4f7f\u7528\u7684\u5e93\u540d\u79f0\u3002\u70b9\u4eaeLED\u7684\u903b\u8f91\u4e5f\u9700\u8981\u6839\u636e\u60a8\u5b9e\u9645\u8bad\u7ec3\u7684\u6807\u7b7e\u987a\u5e8f\u8fdb\u884c\u4fee\u6539\u3002")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/* Edge Impulse Arduino \u793a\u4f8b\n * \u7248\u6743\u6240\u6709 (c) 2022 EdgeImpulse Inc.\n *\n * \u7279\u6b64\u514d\u8d39\u6388\u6743\u4efb\u4f55\u83b7\u5f97\u6b64\u8f6f\u4ef6\u53ca\u76f8\u5173\u6587\u6863\u6587\u4ef6\uff08\u201c\u8f6f\u4ef6\u201d\uff09\u7684\u4eba\uff0c\u65e0\u9650\u5236\u5730\u4f7f\u7528\u3001\u590d\u5236\u3001\u4fee\u6539\u3001\u5408\u5e76\u3001\u53d1\u5e03\u3001\u5206\u53d1\u3001\u518d\u6388\u6743\u548c/\u6216\u9500\u552e\u8f6f\u4ef6\u526f\u672c\uff0c\u5e76\u5141\u8bb8\u5411\u5176\u63d0\u4f9b\u8f6f\u4ef6\u7684\u4eba\u5728\u4ee5\u4e0b\u6761\u4ef6\u4e0b\u8fdb\u884c\u8fd9\u4e9b\u64cd\u4f5c\uff1a\n *\n * \u4e0a\u8ff0\u7248\u6743\u58f0\u660e\u548c\u672c\u8bb8\u53ef\u58f0\u660e\u5e94\u5305\u62ec\u5728\u6240\u6709\u526f\u672c\u6216\u8f6f\u4ef6\u7684\u5b9e\u8d28\u6027\u90e8\u5206\u4e2d\u3002\n *\n * \u672c\u8f6f\u4ef6\u6309\u201c\u539f\u6837\u201d\u63d0\u4f9b\uff0c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u5f62\u5f0f\u7684\u660e\u793a\u6216\u6697\u793a\u7684\u62c5\u4fdd\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u9002\u9500\u6027\u3001\u9002\u7528\u4e8e\u7279\u5b9a\u76ee\u7684\u548c\u975e\u4fb5\u6743\u7684\u62c5\u4fdd\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u4f5c\u8005\u6216\u7248\u6743\u6301\u6709\u8005\u5747\u4e0d\u5bf9\u56e0\u4f7f\u7528\u672c\u8f6f\u4ef6\u6216\u4e0e\u672c\u8f6f\u4ef6\u7684\u4f7f\u7528\u6216\u5176\u4ed6\u4ea4\u6613\u6709\u5173\u7684\u4efb\u4f55\u7d22\u8d54\u3001\u635f\u5bb3\u6216\u5176\u4ed6\u8d23\u4efb\u8d1f\u8d23\uff0c\u65e0\u8bba\u662f\u5728\u5408\u540c\u8bc9\u8bbc\u3001\u4fb5\u6743\u884c\u4e3a\u6216\u5176\u4ed6\u65b9\u9762\u3002\n */\n\n/* \u5982\u679c\u60a8\u7684\u76ee\u6807\u5185\u5b58\u6709\u9650\uff0c\u53ef\u4ee5\u53bb\u6389\u6b64\u5b8f\u4ee5\u8282\u770110K RAM */\n#define EIDSP_QUANTIZE_FILTERBANK   0\n\n/*\n ** \u6ce8\u610f\uff1a\u5982\u679c\u9047\u5230TFLite\u5185\u5b58\u5206\u914d\u95ee\u9898\u3002\n **\n ** \u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u52a8\u6001\u5185\u5b58\u788e\u7247\u5316\u5f15\u8d77\u7684\u3002\n ** \u5c1d\u8bd5\u5728boards.local.txt\u4e2d\u5b9a\u4e49"-DEI_CLASSIFIER_ALLOCATION_STATIC"\uff08\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8bf7\u521b\u5efa\u5b83\uff09\uff0c\u5e76\u5c06\u8be5\u6587\u4ef6\u590d\u5236\u5230\n ** `<ARDUINO_CORE_INSTALL_PATH>/arduino/hardware/<mbed_core>/<core_version>/`\u3002\n **\n ** \u53c2\u89c1\n ** (https://support.arduino.cc/hc/en-us/articles/360012076960-Where-are-the-installed-cores-located-)\n ** \u67e5\u627eArduino\u5b89\u88c5\u6838\u5fc3\u7684\u4f4d\u7f6e\u3002\n **\n ** \u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u5219\u8868\u793a\u8be5\u6a21\u578b\u548c\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u7684\u5185\u5b58\u4e0d\u8db3\u3002\n */\n\n/* \u5305\u542b\u6587\u4ef6 ---------------------------------------------------------------- */\n#include <XIAO-ESP32S3-KWS_inferencing.h>\n\n#include <I2S.h>\n#define SAMPLE_RATE 16000U\n#define SAMPLE_BITS 16\n\n#define LED_BUILT_IN 21 \n\n/** \u97f3\u9891\u7f13\u51b2\u533a\u3001\u6307\u9488\u548c\u9009\u62e9\u5668 */\ntypedef struct {\n    int16_t *buffer;\n    uint8_t buf_ready;\n    uint32_t buf_count;\n    uint32_t n_samples;\n} inference_t;\n\nstatic inference_t inference;\nstatic const uint32_t sample_buffer_size = 2048;\nstatic signed short sampleBuffer[sample_buffer_size];\nstatic bool debug_nn = false; // \u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u53ef\u4ee5\u67e5\u770b\u4ece\u539f\u59cb\u4fe1\u53f7\u751f\u6210\u7684\u7279\u5f81\nstatic bool record_status = true;\n\n/** \n * @brief      Arduino \u8bbe\u7f6e\u51fd\u6570\n */\nvoid setup()\n{\n    // \u5728\u6b64\u5904\u653e\u7f6e\u60a8\u7684\u8bbe\u7f6e\u4ee3\u7801\uff0c\u53ea\u4f1a\u8fd0\u884c\u4e00\u6b21\uff1a\n    Serial.begin(115200);\n    // \u6ce8\u91ca\u6389\u4e0b\u9762\u4e00\u884c\u4ee5\u53d6\u6d88\u7b49\u5f85 USB \u8fde\u63a5\uff08\u5bf9\u4e8e\u539f\u751f USB \u5fc5\u987b\u9700\u8981\uff09\n    while (!Serial);\n    Serial.println("Edge Impulse \u63a8\u7406\u6f14\u793a");\n\n    pinMode(LED_BUILT_IN, OUTPUT); // \u8bbe\u7f6e\u5f15\u811a\u4e3a\u8f93\u51fa\n    digitalWrite(LED_BUILT_IN, HIGH); // \u5173\u95ed LED\n    \n    I2S.setAllPins(-1, 42, 41, -1, -1);\n    if (!I2S.begin(PDM_MONO_MODE, SAMPLE_RATE, SAMPLE_BITS)) {\n      Serial.println("\u521d\u59cb\u5316 I2S \u5931\u8d25!");\n    while (1) ;\n  }\n    \n    // \u63a8\u7406\u8bbe\u7f6e\u6458\u8981\uff08\u6765\u81ea model_metadata.h\uff09\n    ei_printf("\u63a8\u7406\u8bbe\u7f6e:\\n");\n    ei_printf("\\t\u95f4\u9694: ");\n    ei_printf_float((float)EI_CLASSIFIER_INTERVAL_MS);\n    ei_printf(" \u6beb\u79d2\u3002\\n");\n    ei_printf("\\t\u5e27\u5927\u5c0f: %d\\n", EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE);\n    ei_printf("\\t\u6837\u672c\u957f\u5ea6: %d \u6beb\u79d2\u3002\\n", EI_CLASSIFIER_RAW_SAMPLE_COUNT / 16);\n    ei_printf("\\t\u7c7b\u522b\u6570: %d\\n", sizeof(ei_classifier_inferencing_categories) / sizeof(ei_classifier_inferencing_categories[0]));\n\n    ei_printf("\\n\u5c06\u57282\u79d2\u540e\u5f00\u59cb\u8fde\u7eed\u63a8\u7406...\\n");\n    ei_sleep(2000);\n\n    if (microphone_inference_start(EI_CLASSIFIER_RAW_SAMPLE_COUNT) == false) {\n        ei_printf("\u9519\u8bef: \u65e0\u6cd5\u5206\u914d\u97f3\u9891\u7f13\u51b2\u533a\uff08\u5927\u5c0f %d\uff09\uff0c\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u6a21\u578b\u7684\u7a97\u53e3\u957f\u5ea6\u8bbe\u7f6e\u5bfc\u81f4\u7684\\r\\n", EI_CLASSIFIER_RAW_SAMPLE_COUNT);\n        return;\n    }\n\n    ei_printf("\u5f00\u59cb\u5f55\u97f3...\\n");\n}\n\n/**\n * @brief      Arduino \u4e3b\u51fd\u6570\u3002\u8fd0\u884c\u63a8\u7406\u5faa\u73af\u3002\n */\nvoid loop()\n{\n    bool m = microphone_inference_record();\n    if (!m) {\n        ei_printf("\u9519\u8bef: \u5f55\u97f3\u5931\u8d25...\\n");\n        return;\n    }\n\n    signal_t signal;\n    signal.total_length = EI_CLASSIFIER_RAW_SAMPLE_COUNT;\n    signal.get_data = &microphone_audio_signal_get_data;\n    ei_impulse_result_t result = { 0 };\n\n    EI_IMPULSE_ERROR r = run_classifier(&signal, &result, debug_nn);\n    if (r != EI_IMPULSE_OK) {\n        ei_printf("\u9519\u8bef: \u63a8\u7406\u5206\u7c7b\u5668\u5931\u8d25 (%d)\\n", r);\n        return;\n    }\n\n    int pred_index = 0;     // \u521d\u59cb\u5316 pred_index\n    float pred_value = 0;   // \u521d\u59cb\u5316 pred_value\n\n    // \u6253\u5370\u9884\u6d4b\u7ed3\u679c\n    ei_printf("\u9884\u6d4b\u7ed3\u679c ");\n    ei_printf("(DSP: %d \u6beb\u79d2, \u5206\u7c7b: %d \u6beb\u79d2, \u5f02\u5e38: %d \u6beb\u79d2)",\n        result.timing.dsp, result.timing.classification, result.timing.anomaly);\n    ei_printf(": \\n");\n    for (size_t ix = 0; ix < EI_CLASSIFIER_LABEL_COUNT; ix++) {\n        ei_printf("    %s: ", result.classification[ix].label);\n        ei_printf_float(result.classification[ix].value);\n        ei_printf("\\n");\n\n        if (result.classification[ix].value > pred_value){\n           pred_index = ix;\n           pred_value = result.classification[ix].value;\n      }\n    }\n    // \u663e\u793a\u63a8\u7406\u7ed3\u679c\n    if (pred_index == 3){\n      digitalWrite(LED_BUILT_IN, LOW); // \u6253\u5f00 LED\n    }\n    else{\n      digitalWrite(LED_BUILT_IN, HIGH); // \u5173\u95ed LED\n    }\n\n    \n#if EI_CLASSIFIER_HAS_ANOMALY == 1\n    ei_printf("    \u5f02\u5e38\u5206\u6570: ");\n    ei_printf_float(result.anomaly);\n    ei_printf("\\n");\n#endif\n}\n\nstatic void audio_inference_callback(uint32_t n_bytes) \n{\n    for(int i = 0; i < n_bytes>>1; i++) {\n        inference.buffer[inference.buf_count++] = sampleBuffer[i];\n\n        if(inference.buf_count >= inference.n_samples) {\n          inference.buf_count = 0;\n          inference.buf_ready = 1;\n        }\n    }\n}\n\nstatic void capture_samples(void* arg) {\n\n  const int32_t i2s_bytes_to_read = (uint32_t)arg;\n  size_t bytes_read = i2s_bytes_to_read;\n\n  while (record_status) {\n\n    /* \u4ece i2s \u4e00\u6b21\u6027\u8bfb\u53d6\u6570\u636e - \u9488\u5bf9 XIAO ESP32S3 Sense \u548c I2S.h \u5e93\u7684\u4fee\u6539 */\n    // i2s_read((i2s_port_t)1, (void*)sampleBuffer, i2s_bytes_to_read, &bytes_read, 100);\n    esp_i2s::i2s_read(esp_i2s::I2S_NUM_0, (void*)sampleBuffer, i2s_bytes_to_read, &bytes_read, 100);\n\n    if (bytes_read <= 0) {\n      ei_printf("I2S \u8bfb\u53d6\u9519\u8bef: %d", bytes_read);\n    }\n    else {\n        if (bytes_read < i2s_bytes_to_read) {\n        ei_printf("\u90e8\u5206 I2S \u8bfb\u53d6");\n        }\n\n        // \u8c03\u6574\u6570\u636e\u5927\u5c0f\uff08\u5426\u5219\u58f0\u97f3\u4f1a\u592a\u5c0f\uff09\n        for (int x = 0; x < i2s_bytes_to_read/2; x++) {\n            sampleBuffer[x] = (int16_t)(sampleBuffer[x]) * 8;\n        }\n\n        if (record_status) {\n            audio_inference_callback(i2s_bytes_to_read);\n        }\n        else {\n            break;\n        }\n    }\n  }\n  vTaskDelete(NULL);\n}\n\n/**\n * @brief      \u521d\u59cb\u5316\u63a8\u7406\u7ed3\u6784\u5e76\u8bbe\u7f6e/\u542f\u52a8 PDM\n *\n * @param[in]  n_samples  \u6837\u672c\u6570\u91cf\n *\n * @return     { \u8fd4\u56de\u503c\u63cf\u8ff0 }\n */\nstatic bool microphone_inference_start(uint32_t n_samples)\n{\n    inference.buffer = (int16_t *)malloc(n_samples * sizeof(int16_t));\n\n    if(inference.buffer == NULL) {\n        return false;\n    }\n\n    inference.buf_count  = 0;\n    inference.n_samples  = n_samples;\n    inference.buf_ready  = 0;\n\n    //    if (i2s_init(EI_CLASSIFIER_FREQUENCY)) {\n    //        ei_printf("I2S \u542f\u52a8\u5931\u8d25!");\n    //    }\n\n    ei_sleep(100);\n\n    record_status = true;\n\n    xTaskCreate(capture_samples, "CaptureSamples", 1024 * 32, (void*)sample_buffer_size, 10, NULL);\n\n    return true;\n}\n\n/**\n * @brief      \u7b49\u5f85\u65b0\u6570\u636e\n *\n * @return     \u5b8c\u6210\u65f6\u8fd4\u56de True\n */\nstatic bool microphone_inference_record(void)\n{\n    bool ret = true;\n\n    while (inference.buf_ready == 0) {\n        delay(10);\n    }\n\n    inference.buf_ready = 0;\n    return ret;\n}\n\n/**\n * \u83b7\u53d6\u539f\u59cb\u97f3\u9891\u4fe1\u53f7\u6570\u636e\n */\nstatic int microphone_audio_signal_get_data(size_t offset, size_t length, float *out_ptr)\n{\n    numpy::int16_to_float(&inference.buffer[offset], out_ptr, length);\n\n    return 0;\n}\n\n/**\n * @brief      \u505c\u6b62 PDM \u5e76\u91ca\u653e\u7f13\u51b2\u533a\n */\nstatic void microphone_inference_end(void)\n{\n    free(sampleBuffer);\n    ei_free(inference.buffer);\n}\n\n#if !defined(EI_CLASSIFIER_SENSOR) || EI_CLASSIFIER_SENSOR != EI_CLASSIFIER_SENSOR_MICROPHONE\n#error "\u5f53\u524d\u4f20\u611f\u5668\u7684\u6a21\u578b\u65e0\u6548\u3002"\n#endif\n')),(0,r.yg)("p",null,"\u8fd9\u4e2a\u60f3\u6cd5\u662f\uff0c\u5f53\u68c0\u6d4b\u5230\u5173\u952e\u8bcd ",(0,r.yg)("strong",{parentName:"p"},"HELLO")," \u65f6\uff0cLED \u4f1a\u4eae\u8d77\u3002\u540c\u6837\u5730\uff0c\u9664\u4e86\u70b9\u4eae LED\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u89e6\u53d1\u5916\u90e8\u8bbe\u5907\u7684\u201c\u4fe1\u53f7\u201d\uff0c\u6b63\u5982\u6211\u4eec\u5728\u4ecb\u7ecd\u4e2d\u6240\u770b\u5230\u7684\u3002"),(0,r.yg)("h1",{id:"\u5f85\u529e\u4e8b\u9879"},"\u5f85\u529e\u4e8b\u9879"),(0,r.yg)("ul",{className:"contains-task-list"},(0,r.yg)("li",{parentName:"ul",className:"task-list-item"},(0,r.yg)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u6784\u5efa\u4f60\u81ea\u5df1\u7684 KWS \u9879\u76ee\u5e76\u5728 XIAO ESP32S3 Sense \u4e0a\u8fd0\u884c\u3002")),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/11.png",style:{width:700,height:"auto"}})),(0,r.yg)("h4",{id:"\u7279\u522b\u611f\u8c22"},"\u7279\u522b\u611f\u8c22"),(0,r.yg)("p",null,"\u7279\u522b\u611f\u8c22 ",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("a",{parentName:"strong",href:"https://mjrobot.org/"},"MJRoBot (Marcelo Rovai)"))," \u63d0\u4f9b\u7684 XIAO ESP32S3 Sense \u8bbf\u95ee Edge Impulse \u7684\u6559\u7a0b\u5185\u5bb9\u3002\u539f\u59cb\u6587\u7ae0\u975e\u5e38\u8be6\u7ec6\uff0c\u5305\u542b\u4e86\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002"),(0,r.yg)("p",null,"\u5982\u679c\u60a8\u60f3\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u7684\u539f\u59cb\u5185\u5bb9\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6eda\u52a8\u4e0b\u65b9\u94fe\u63a5\u8bbf\u95ee\u539f\u6587\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.hackster.io/mjrobot/tinyml-made-easy-keyword-spotting-kws-5fa6e7#toc-capturing--offline--audio-data-with-the-xiao-esp32s3-sense-5"},"TinyML \u7b80\u5355\u5165\u95e8\uff1a\u5173\u952e\u8bcd\u68c0\u6d4b (KWS)"))),(0,r.yg)("p",null,"MJRoBot \u8fd8\u62e5\u6709\u8bb8\u591a\u5173\u4e8e XIAO ESP32S3 \u7684\u6709\u8da3\u9879\u76ee\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.hackster.io/mjrobot/exploring-machine-learning-with-the-new-xiao-esp32s3-6463e5"},"\u4e0e\u5168\u65b0\u7684 XIAO ESP32S3 \u4e00\u8d77\u63a2\u7d22\u673a\u5668\u5b66\u4e60")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.hackster.io/mjrobot/tinyml-made-easy-image-classification-cb42ae"},"TinyML \u7b80\u5355\u5165\u95e8\uff1a\u56fe\u50cf\u5206\u7c7b"))))}u.isMDXComponent=!0}}]);