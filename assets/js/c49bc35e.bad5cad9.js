"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[15211],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>y});var i=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),g=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=g(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=g(n),c=a,y=p["".concat(s,".").concat(c)]||p[c]||u[c]||o;return n?i.createElement(y,l(l({ref:t},d),{},{components:n})):i.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[p]="string"==typeof e?e:a,l[1]=r;for(var g=2;g<o;g++)l[g]=n[g];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5175:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>g});var i=n(9668),a=(n(96540),n(15680));const o={description:"Pin Multiplexing on Seeed Studio XIAO RP2350",title:"Pin Multiplexing",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/2350image.png",slug:"/XIAO_RP2350_Pin_Multiplexing",sidebar_position:2,last_update:{date:"11/02/2024",author:"Allen"}},l="Pin Multiplexing",r={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_RP2350/XIAO_RP2350_Pin_multiplexing",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_RP2350/XIAO_RP2350_Pin_multiplexing",title:"Pin Multiplexing",description:"Pin Multiplexing on Seeed Studio XIAO RP2350",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_RP2350/XIAO_RP2350_Pin_multiplexing.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_RP2350",slug:"/XIAO_RP2350_Pin_Multiplexing",permalink:"/XIAO_RP2350_Pin_Multiplexing",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_RP2350/XIAO_RP2350_Pin_multiplexing.md",tags:[],version:"current",lastUpdatedBy:"Allen",lastUpdatedAt:1730505600,formattedLastUpdatedAt:"Nov 2, 2024",sidebarPosition:2,frontMatter:{description:"Pin Multiplexing on Seeed Studio XIAO RP2350",title:"Pin Multiplexing",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/2350image.png",slug:"/XIAO_RP2350_Pin_Multiplexing",sidebar_position:2,last_update:{date:"11/02/2024",author:"Allen"}},sidebar:"ProductSidebar",previous:{title:"Getting Started with Seeed Studio XIAO RP2350(Arduino)",permalink:"/xiao_rp2350_arduino"},next:{title:"Seeed Studio XIAO RP2350 with C/C++ SDK",permalink:"/xiao-rp2350-c-cpp-sdk"}},s={},g=[{value:"Preparation",id:"preparation",level:2},{value:"Digital",id:"digital",level:2},{value:"Hardware Preparation",id:"hardware-preparation",level:3},{value:"Software Implementation",id:"software-implementation",level:3},{value:"Effect",id:"effect",level:3},{value:"Digital as PWM",id:"digital-as-pwm",level:2},{value:"Hardware Preparation",id:"hardware-preparation-1",level:3},{value:"Software Implementation",id:"software-implementation-1",level:3},{value:"Effect",id:"effect-1",level:3},{value:"Analog",id:"analog",level:2},{value:"Hadware Preparation",id:"hadware-preparation",level:3},{value:"Software Implementation",id:"software-implementation-2",level:3},{value:"Effect",id:"effect-2",level:3},{value:"UART",id:"uart",level:2},{value:"General Usage",id:"general-usage",level:3},{value:"Effect",id:"effect-3",level:3},{value:"Usage of Serial1",id:"usage-of-serial1",level:3},{value:"Effect",id:"effect-4",level:3},{value:"I2C",id:"i2c",level:2},{value:"Harware Preparation",id:"harware-preparation",level:3},{value:"Software Implementation",id:"software-implementation-3",level:3},{value:"Effect",id:"effect-5",level:3},{value:"SPI",id:"spi",level:2},{value:"Hadware Preparation",id:"hadware-preparation-1",level:3},{value:"Software Implementation",id:"software-implementation-4",level:3},{value:"Finish up",id:"finish-up",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],d={toc:g},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,i.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"pin-multiplexing"},"Pin Multiplexing"),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/2350image.png",style:{width:800,height:"auto"}})),(0,a.yg)("p",null,"Seeed Studio XIAO RP2350 has rich interfaces. There are ",(0,a.yg)("strong",{parentName:"p"},"19 digital I/O")," that can be used as ",(0,a.yg)("strong",{parentName:"p"},"PWM pins")," and ",(0,a.yg)("strong",{parentName:"p"},"3 analog inputs")," that can be used as ",(0,a.yg)("strong",{parentName:"p"},"ADC pins"),". It supports four serial communication interfaces such as ",(0,a.yg)("strong",{parentName:"p"},"UART, I2C and SPI"),". This wiki will be helpful to learn about these interfaces and implement them in your next projects!"),(0,a.yg)("h2",{id:"preparation"},"Preparation"),(0,a.yg)("p",null,"Currently, there are some issues with the pin usage of the XIAO RP2350 due to compatibility problems. We have fixed this issue, and the Raspberry Pi official library has been merged. The current version is 4.2.0, and the update will be completed in the next version, ",(0,a.yg)("strong",{parentName:"p"},"4.2.1"),"."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/12.png",style:{width:500,height:"auto"}})),(0,a.yg)("p",null,"In the meantime, please replace this file by going ",(0,a.yg)("strong",{parentName:"p"},"Arduino15/packages/rp2040/hardware/rp2040/4.2.0/variants/seeed_xiao_rp2350\uff08Your Arduino Library Address\uff09")," and ",(0,a.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/file.zip"},"clicking here to download the file"),". Once done, you can enjoy your work!"),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/3.png",style:{width:800,height:"auto"}})),(0,a.yg)("h2",{id:"digital"},"Digital"),(0,a.yg)("h3",{id:"hardware-preparation"},"Hardware Preparation"),(0,a.yg)("table",{align:"center"},(0,a.yg)("tr",null,(0,a.yg)("th",null,"Seeed Studio XIAO RP2350"),(0,a.yg)("th",null,"Seeed Studio Expansion Base for XIAO with Grove OLED"),(0,a.yg)("th",null,"Grove - LED")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/-/1-102010550-xiao-rp2350.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/h/t/httpsstatics3.seeedstudio.comseeedfile2018-09bazaar939479_1040300054.jpg",style:{width:600,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-RP2350-p-5944.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Red-LED.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))))),(0,a.yg)("p",null,"Please install XIAO RP2350 onto the expansion board, and connect the Grove LED to the ",(0,a.yg)("strong",{parentName:"p"},"A0/D0")," interface of the expansion board via a Grove cable. Finally, connect XIAO to the computer via a USB-C cable."),(0,a.yg)("h3",{id:"software-implementation"},"Software Implementation"),(0,a.yg)("p",null,"In this example, we will implement control of a relay's on/off state using a button connected to the XIAO expansion board. When the button is pressed, the relay turns on, and when the button is released, the relay turns off."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-c"},"//define which pin you use\nint LED_BUILTIN = D0;\n// the setup function runs once when you press reset or power the board\nvoid setup() {\n  // initialize digital pin LED_BUILTIN as an output.\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\n// the loop function runs over and over again forever\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);  // turn the LED on (HIGH is the voltage level)\n  delay(1000);                      // wait for a second\n  digitalWrite(LED_BUILTIN, LOW);   // turn the LED off by making the voltage LOW\n  delay(1000);                      // wait for a second\n}\n")),(0,a.yg)("h3",{id:"effect"},"Effect"),(0,a.yg)("p",null,"If everything goes smoothly, after uploading the program, you should see the following effect."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/1.gif",style:{width:500,height:"auto"}})),(0,a.yg)("h2",{id:"digital-as-pwm"},"Digital as PWM"),(0,a.yg)("p",null,"All GPIO pins on XIAO RP2350 support PWM output. Therefore, you can use any pin to output PWM to adjust the brightness of lights, control servos, and other functions."),(0,a.yg)("h3",{id:"hardware-preparation-1"},"Hardware Preparation"),(0,a.yg)("table",{align:"center"},(0,a.yg)("tr",null,(0,a.yg)("th",null,"Seeed Studio XIAO RP2350"),(0,a.yg)("th",null,"Seeed Studio Expansion Base for XIAO with Grove OLED"),(0,a.yg)("th",null,"Grove - LED")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/-/1-102010550-xiao-rp2350.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/h/t/httpsstatics3.seeedstudio.comseeedfile2018-09bazaar939479_1040300054.jpg",style:{width:600,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-RP2350-p-5944.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Red-LED.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))))),(0,a.yg)("p",null,"Please install XIAO RP2350 onto the expansion board, and connect the Grove LED to the ",(0,a.yg)("strong",{parentName:"p"},"A0/D0")," interface of the expansion board via a Grove cable. Finally, connect XIAO to the computer via a USB-C cable."),(0,a.yg)("h3",{id:"software-implementation-1"},"Software Implementation"),(0,a.yg)("p",null,"In this example, we will demonstrate how to use PWM output to control the brightness of a light."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"int LED_pin = D0;    // LED connected to digital pin 10\n\nvoid setup() {\n  // declaring LED pin as output\n  pinMode(LED_pin, OUTPUT);\n}\n\nvoid loop() {\n  // fade in from min to max in increments of 5 points:\n  for (int fadeValue = 0 ; fadeValue <= 255; fadeValue += 3) {\n    // sets the value (range from 0 to 255):\n    analogWrite(LED_pin, fadeValue);\n    // wait for 30 milliseconds to see the dimming effect\n    delay(30);\n  }\n\n  // fade out from max to min in increments of 5 points:\n  for (int fadeValue = 255 ; fadeValue >= 0; fadeValue -= 3) {\n    // sets the value (range from 0 to 255):\n    analogWrite(LED_pin, fadeValue);\n    // wait for 30 milliseconds to see the dimming effect\n    delay(30);\n  }\n}\n")),(0,a.yg)("h3",{id:"effect-1"},"Effect"),(0,a.yg)("p",null,"If the program runs successfully, you will see the following running effect."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/2.gif",style:{width:500,height:"auto"}})),(0,a.yg)("h2",{id:"analog"},"Analog"),(0,a.yg)("p",null,"XIAO MG24(Sense) Development Board  have to 12 bit ADC for high-resolution reading of analog sensor values , it can help us to read more accurate values."),(0,a.yg)("p",null,"Next , We will choose two sensors to reflect the characteristics of ADC . "),(0,a.yg)("h3",{id:"hadware-preparation"},"Hadware Preparation"),(0,a.yg)("table",{align:"center"},(0,a.yg)("tr",null,(0,a.yg)("th",null,"Seeed Studio XIAO RP2350"),(0,a.yg)("th",null,"Seeed Studio Expansion Base for XIAO with Grove OLED"),(0,a.yg)("th",null,"Grove - Loudness Sensor")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/-/1-102010550-xiao-rp2350.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/h/t/httpsstatics3.seeedstudio.comimagesproductloudness20sensor.jpg",style:{width:600,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-RP2350-p-5944.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Loudness-Sensor.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))))),(0,a.yg)("h3",{id:"software-implementation-2"},"Software Implementation"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"int loudness;\n\nvoid setup()\n{\n    Serial.begin(9600);// initialize Serial\n}\n\nvoid loop()\n{\n    loudness = analogRead(A0);// read analog data from A0 pin\n    Serial.println(loudness);\n    delay(200);\n}\n")),(0,a.yg)("h3",{id:"effect-2"},"Effect"),(0,a.yg)("p",null,"If everything goes smoothly, after uploading the program, you should see the following effect."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/5.png",style:{width:800,height:"auto"}})),(0,a.yg)("h2",{id:"uart"},"UART"),(0,a.yg)("p",null,"When working with Arduino IDE, Serial communication is an essential part of many projects. To\nuse Serial in Arduino IDE, you need to start by opening the Serial Monitor window. This can be done by clicking on the ",(0,a.yg)("strong",{parentName:"p"},"Serial Monitor")," icon in the toolbar or by pressing the ",(0,a.yg)("strong",{parentName:"p"},"Ctrl+Shift+M")," shortcut key."),(0,a.yg)("h3",{id:"general-usage"},"General Usage"),(0,a.yg)("p",null,"Some of the commonly used Serial functions include:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Serial.begin()")," -- which initializes the communication at a specified baud rate; "),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Serial.print()")," -- which sends data to the Serial port in a readable format; "),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Serial.write()")," -- which sends binary data to the Serial port;"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Serial.available()")," -- which checks if there is any data available to be read from the Serial port; "),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Serial.read()")," -- which reads a single byte of data from the Serial port; "),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Serial.flush()")," -- which waits for the transmission of outgoing serial data to complete. ")),(0,a.yg)("p",null,"By using these Serial functions, you can send and receive data between the Arduino board and your computer, which opens up many possibilities for creating interactive projects."),(0,a.yg)("p",null,"Here is an example program:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-c"},'void setup() {\n  // initialize serial communication at 9600 bits per second:\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  // send data to the serial port\n  Serial.println("Hello World!");\n\n  // read data from the serial port\n  if (Serial.available() > 0) {\n    // read the incoming byte:\n    char incomingByte = Serial.read();\n    // print the incoming byte to the serial monitor:\n    Serial.print("I received: ");\n    Serial.println(incomingByte);\n  }\n  \n  // wait for a second before repeating the loop\n  delay(1000);\n}\n')),(0,a.yg)("h3",{id:"effect-3"},"Effect"),(0,a.yg)("p",null,"If everything goes smoothly, after uploading the program, you should see the following effect."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/2.png",style:{width:500,height:"auto"}})),(0,a.yg)("h3",{id:"usage-of-serial1"},"Usage of Serial1"),(0,a.yg)("p",null,"According to the above XIAO RP2350 Pin diagrams for specific parameters, we can observe that there are TX and RX pin(D6,D7).\nThe usage is also very similar, but we need to use ",(0,a.yg)("strong",{parentName:"p"},"serial port monitoring tool")," to monitor D6,D7 pins to get data.\nSo next, we will use the D6,D7 pins to use ",(0,a.yg)("strong",{parentName:"p"},"serial1"),"."),(0,a.yg)("admonition",{type:"tip"},(0,a.yg)("p",{parentName:"admonition"},"Normally, we use ",(0,a.yg)("strong",{parentName:"p"},"Serial")," to communicate between device and your computer so that we can knowing what happening in your program."),(0,a.yg)("p",{parentName:"admonition"},"Base on that, you want to use this device to communicate with another devcie. In this case, we will use ",(0,a.yg)("strong",{parentName:"p"},"Serial1"),".")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-c"},'\nvoid setup() {\n    Serial1.begin(115200);\n}\n \nvoid loop() {\n  if(Serial1.available() > 0)\n  {\n    char incominByte = Serial1.read();\n    Serial1.print("I received : ");\n    Serial1.println(incominByte);\n  }\n  delay(1000);\n}\n')),(0,a.yg)("h3",{id:"effect-4"},"Effect"),(0,a.yg)("p",null,"If everything goes smoothly, after uploading the program, you should see the following effect."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/1.png",style:{width:500,height:"auto"}})),(0,a.yg)("h2",{id:"i2c"},"I2C"),(0,a.yg)("p",null,"XIAO RP2350 has an I2C interface that can be used for data transmission and parsing of many sensors, as well as for using some OLED screens."),(0,a.yg)("h3",{id:"harware-preparation"},"Harware Preparation"),(0,a.yg)("table",{align:"center"},(0,a.yg)("tr",null,(0,a.yg)("th",null,"Seeed Studio XIAO RP2350"),(0,a.yg)("th",null,"Seeed Studio Expansion Base for XIAO with Grove OLED"),(0,a.yg)("th",null,"Grove - DHT20 Temperature and Humidity Sensor")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/-/1-102010550-xiao-rp2350.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/1/0/101020932_preview-07-min_1.jpg",style:{width:600,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-RP2350-p-5944.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Temperature-Humidity-Sensor-V2-0-DHT20-p-4967.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))))),(0,a.yg)("p",null,"The DHT20 Sensor use I2C potocol, so we can use I2C port on XIAO Expansion Board to get sensor data."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/7.png",style:{width:500,height:"auto"}})),(0,a.yg)("h3",{id:"software-implementation-3"},"Software Implementation"),(0,a.yg)("p",null,"This example introduces how to get DHT20 sensor data via the Seeed Studio Expansion Base for XIAO RP2350."),(0,a.yg)("p",null,"Step 1. Install the Seeed Studio XIAO RP2350 on the Expansion board then conect the Type-C cable."),(0,a.yg)("p",null,"Step 2. Install the ",(0,a.yg)("strong",{parentName:"p"},"Grove Temperature And Humidity Sensor")," library."),(0,a.yg)("div",{class:"github_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"github_item",href:"https://github.com/Seeed-Studio/Grove_Temperature_And_Humidity_Sensor"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Download the Libraries")))," ",(0,a.yg)("svg",{"aria-hidden":"true",focusable:"false",role:"img",className:"mr-2",viewBox:"-3 10 9 1",width:16,height:16,fill:"currentColor",style:{textAlign:"center",display:"inline-block",userSelect:"none",verticalAlign:"text-bottom",overflow:"visible"}},(0,a.yg)("path",{d:"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"})))),(0,a.yg)("p",null,"Step 3. Add library to Arduino."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/10.png",style:{width:800,height:"auto"}})),(0,a.yg)("p",null,"Step 4. Open DHTtester Demo from the library you just downloaded."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/11.png",style:{width:800,height:"auto"}})),(0,a.yg)("p",null,"Because we use DHT20, so we need to uncomment DHT20 codes like the following code."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-c"},'// Example testing sketch for various DHT humidity/temperature sensors\n// Written by ladyada, public domain\n\n#include "Grove_Temperature_And_Humidity_Sensor.h"\n\n// Uncomment whatever type you\'re using!\n//#define DHTTYPE DHT11   // DHT 11\n// #define DHTTYPE DHT22   // DHT 22  (AM2302)\n//#define DHTTYPE DHT21   // DHT 21 (AM2301)\n//#define DHTTYPE DHT10   // DHT 10\n#define DHTTYPE DHT20   // DHT 20\n\n/*Notice: The DHT10 and DHT20 is different from other DHT* sensor ,it uses i2c interface rather than one wire*/\n/*So it doesn\'t require a pin.*/\n// #define DHTPIN 2     // what pin we\'re connected to\uff08DHT10 and DHT20 don\'t need define it\uff09\n// DHT dht(DHTPIN, DHTTYPE);   //   DHT11 DHT21 DHT22\nDHT dht(DHTTYPE);         //   DHT10 DHT20 don\'t need to define Pin\n\n// Connect pin 1 (on the left) of the sensor to +5V\n// Connect pin 2 of the sensor to whatever your DHTPIN is\n// Connect pin 4 (on the right) of the sensor to GROUND\n// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor\n\n\n#if defined(ARDUINO_ARCH_AVR)\n    #define debug  Serial\n\n#elif defined(ARDUINO_ARCH_SAMD) ||  defined(ARDUINO_ARCH_SAM)\n    #define debug  SerialUSB\n#else\n    #define debug  Serial\n#endif\n\nvoid setup() {\n\n    debug.begin(115200);\n    debug.println("DHTxx test!");\n    Wire.begin();\n\n    /*if using WIO link,must pull up the power pin.*/\n    // pinMode(PIN_GROVE_POWER, OUTPUT);\n    // digitalWrite(PIN_GROVE_POWER, 1);\n\n    dht.begin();\n}\n\nvoid loop() {\n    float temp_hum_val[2] = {0};\n    // Reading temperature or humidity takes about 250 milliseconds!\n    // Sensor readings may also be up to 2 seconds \'old\' (its a very slow sensor)\n\n\n    if (!dht.readTempAndHumidity(temp_hum_val)) {\n        debug.print("Humidity: ");\n        debug.print(temp_hum_val[0]);\n        debug.print(" %\\t");\n        debug.print("Temperature: ");\n        debug.print(temp_hum_val[1]);\n        debug.println(" *C");\n    } else {\n        debug.println("Failed to get temprature and humidity value.");\n    }\n\n    delay(1500);\n}\n')),(0,a.yg)("h3",{id:"effect-5"},"Effect"),(0,a.yg)("p",null,"If everything goes smoothly, after uploading the program, you should see the following effect."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/xiao_rp2350_pins/V2/4.png",style:{width:800,height:"auto"}})),(0,a.yg)("h2",{id:"spi"},"SPI"),(0,a.yg)("p",null,"The XIAO RP2350 chip integrates multiple peripherals, including an SPI interface that can be used to connect external SPI devices such as flash memory, displays, sensors, and more. The XIAO RP2350 also supports high-speed SPI transfer mode, which can achieve a maximum SPI transfer rate of 80 MHz, meeting the data transfer needs of most SPI devices."),(0,a.yg)("h3",{id:"hadware-preparation-1"},"Hadware Preparation"),(0,a.yg)("table",{align:"center"},(0,a.yg)("tr",null,(0,a.yg)("th",null,"Seeed Studio XIAO RP2350"),(0,a.yg)("th",null,"Grove - OLED Display 1.12 (SH1107) V3.0 - SPI/IIC")),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-RP2350/img/2-102010550%20XIAO%20RP2350-45font.jpg",style:{width:500,height:"auto"}}))),(0,a.yg)("td",null,(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-OLED-Display-1.12-(SH1107)_V3.0/img/10402050_Main-02.png",style:{width:500,height:"auto"}})))),(0,a.yg)("tr",null,(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-RP2350-p-5944.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,a.yg)("td",null,(0,a.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-OLED-Display-1-12-SH1107-V3-0-p-5011.html"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))))),(0,a.yg)("p",null,"After preparing the hardware as mentioned above, use jumper wires to connect the SPI interface of the XIAO and OLED. Please refer to the following table to wire."),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"XIAO RP2350"),(0,a.yg)("th",{parentName:"tr",align:null},"OLED Display"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"D8"),(0,a.yg)("td",{parentName:"tr",align:null},"SCL")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"D10"),(0,a.yg)("td",{parentName:"tr",align:null},"SI")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"D5"),(0,a.yg)("td",{parentName:"tr",align:null},"RES")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"D4"),(0,a.yg)("td",{parentName:"tr",align:null},"D/C")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"D7"),(0,a.yg)("td",{parentName:"tr",align:null},"CS")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"VCC(VBUS)"),(0,a.yg)("td",{parentName:"tr",align:null},"5V")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"GND"),(0,a.yg)("td",{parentName:"tr",align:null},"GND")))),(0,a.yg)("h3",{id:"software-implementation-4"},"Software Implementation"),(0,a.yg)("p",null,"Next, we will take the following program as an example to introduce how to use the SPI interface to control the OLED screen display."),(0,a.yg)("p",null,"Install the u8g2 library."),(0,a.yg)("div",{class:"github_container",style:{textAlign:"center"}},(0,a.yg)("a",{class:"github_item",href:"https://github.com/olikraus/U8g2_Arduino"},(0,a.yg)("strong",null,(0,a.yg)("span",null,(0,a.yg)("font",{color:"FFFFFF",size:"4"}," Download the Libraries")))," ",(0,a.yg)("svg",{"aria-hidden":"true",focusable:"false",role:"img",className:"mr-2",viewBox:"-3 10 9 1",width:16,height:16,fill:"currentColor",style:{textAlign:"center",display:"inline-block",userSelect:"none",verticalAlign:"text-bottom",overflow:"visible"}},(0,a.yg)("path",{d:"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"})))),(0,a.yg)("br",null),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-c"},'#include <Arduino.h>\n#include <U8g2lib.h>\n#include <SPI.h>\n#include <Wire.h>\n \nU8G2_SH1107_128X128_1_4W_HW_SPI u8g2(U8G2_R3, /* cs=*/ D7, /* dc=*/ D4, /* reset=*/ D5);\n \nvoid setup(void) {\n  u8g2.begin();\n}\n \nvoid loop(void) {\n  u8g2.firstPage();\n\n  do {\n    u8g2.setFont(u8g2_font_luBIS08_tf);\n    u8g2.drawStr(0,24,"Hello Seeed!");\n  } while ( u8g2.nextPage() );\n}\n')),(0,a.yg)("p",null,"In the ",(0,a.yg)("inlineCode",{parentName:"p"},"setup()")," function, the ",(0,a.yg)("inlineCode",{parentName:"p"},"U8G2_SH1107_128X128_1_4W_HW_SPI")," class is instantiated with the appropriate constructor arguments that specify the pins used for chip select (cs), data/command (dc), and reset. Then, the ",(0,a.yg)("inlineCode",{parentName:"p"},"u8g2.begin()")," function is called to initialize the display."),(0,a.yg)("p",null,"In the ",(0,a.yg)("inlineCode",{parentName:"p"},"loop()")," function, the display is updated with new content using the ",(0,a.yg)("inlineCode",{parentName:"p"},"u8g2.firstPage()"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"u8g2.setFont()"),", and ",(0,a.yg)("inlineCode",{parentName:"p"},"u8g2.drawStr()")," functions. The ",(0,a.yg)("inlineCode",{parentName:"p"},"u8g2.firstPage()")," function sets up the display buffer for writing, while ",(0,a.yg)("inlineCode",{parentName:"p"},"u8g2.nextPage()")," displays the updated content. The do-while loop ensures that the content is displayed continuously until the program is stopped."),(0,a.yg)("p",null,"Overall, this code demonstrates how to use the U8g2 library to control an OLED display and display text on it."),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-R4AM1/img/15.png",style:{width:700,height:"auto"}})),(0,a.yg)("h2",{id:"finish-up"},"Finish up"),(0,a.yg)("p",null,"You have learned the basic functions of the XIAO RP2350 pins. Now, let's have fun with it~"),(0,a.yg)("div",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_MG24/Pin/6.png",style:{width:1e3,height:"auto"}})),(0,a.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,a.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,a.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,a.yg)("div",{class:"button_tech_support_container"},(0,a.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,a.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}u.isMDXComponent=!0}}]);